<?xml version="1.0"?>
<doc>
<assembly>
<name>
Blackbaud.AppFx.Server
</name>
</assembly>
<members>
<member name="T:Blackbaud.AppFx.Server.My.Resources.Content">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.AdHocQueryBuildReportDefinition_FooterDate">
<summary>
  Looks up a localized string similar to ={0} &amp; &quot; at &quot; &amp; {1}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.AdHocQueryBuildReportDefinition_FooterPageNumber">
<summary>
  Looks up a localized string similar to =&quot;Page &quot; &amp; {0} &amp; &quot; of &quot; &amp; {1}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.AdHocQueryBuildReportDefinition_FooterPreparedBy">
<summary>
  Looks up a localized string similar to =&quot;Prepared by &quot; &amp; {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.AdHocQueryGetDefinitionForReport_NonAdHocQueryReport">
<summary>
  Looks up a localized string similar to The report with ID {0} was not originally created from an ad-hoc query..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.AdHocQuerySaveDatalist_NoRightsToAddOrEdit">
<summary>
  Looks up a localized string similar to The current user does not have rights to add or edit an ad-hoc query datalist..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.AdHocQuerySaveReport_NoRightsToAddOrEdit">
<summary>
  Looks up a localized string similar to The current user does not have rights to add or edit an ad-hoc query report..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.AdHocQuerySaveReportDefaultDescription">
<summary>
  Looks up a localized string similar to Report generated from an ad-hoc query..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.AdHocQuerySaveSearchlist_NoRightsToAddOrEdit">
<summary>
  Looks up a localized string similar to The current user does not have rights to add or edit an ad-hoc query searchlist..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.AdHocQuerySaveSmartQuery_NoRightsToAddOrEdit">
<summary>
  Looks up a localized string similar to The current user does not have rights to add or edit an ad-hoc query smart query..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.AppBusinessProcess_AlreadyRunning">
<summary>
  Looks up a localized string similar to The business process &apos;{0}&apos; is already running..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.AppBusinessProcess_AppLockNotAcquired">
<summary>
  Looks up a localized string similar to Business process status app lock not acquired, return code={0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.AppBusinessProcess_CreateIDSet_Description">
<summary>
  Looks up a localized string similar to Created by the {0}..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.AppBusinessProcess_CurrentlyRunBy">
<summary>
  Looks up a localized string similar to This process is currently being run by {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.AppBusinessProcess_CurrentlyRunOrEnqueuedBy">
<summary>
  Looks up a localized string similar to This process is currently being run or has been enqueued by {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.AppBusinessProcess_ErrorAfterCompletedSuccesfully">
<summary>
  Looks up a localized string similar to An error occurred after the business process completed successfully..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.AppBusinessProcess_ErrorOccuredWhileCopyingLabelTemplateToOutputTable">
<summary>
  Looks up a localized string similar to An error occurred while copying the label template into the BUSINESSPROCESSOUTPUTTEMPLATE table.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.AppBusinessProcess_ErrorOccuredWhileCopyingLabelTemplateToStatusTable">
<summary>
  Looks up a localized string similar to An error occurred while copying the label template into the BUSINESSPROCESSSTATUS table.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.AppBusinessProcess_ErrorOccuredWhileCopyingLetterTemplateToOutputTable">
<summary>
  Looks up a localized string similar to An error occurred while copying the letter template into the BUSINESSPROCESSOUTPUTTEMPLATE table.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.AppBusinessProcess_ErrorOccuredWhileCopyingLetterTemplateToStatusTable">
<summary>
  Looks up a localized string similar to An error occurred while copying the letter template into the BUSINESSPROCESSSTATUS table.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.AppBusinessProcess_ErrorOccuredWhileReleasingLock">
<summary>
  Looks up a localized string similar to An error occurred while releasing the lock after executing the process.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.AppBusinessProcess_ErrorOccuredWhileUpdatingStatus">
<summary>
  Looks up a localized string similar to An error occurred while updating the status of the business process.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.AppBusinessProcess_InitBeforeExecute">
<summary>
  Looks up a localized string similar to Init must be called before ExecuteBusinessProcess..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.AppBusinessProcess_MustCallCreateProcessStatusBeforeCreateOutputTable">
<summary>
  Looks up a localized string similar to You must first call the CreateProcessStatus routine before you can call the CreateOutputTable routine..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.AppBusinessProcess_MustCallCreateProcessStatusBeforeCreateOutputTableFromView">
<summary>
  Looks up a localized string similar to You must first call the CreateProcessStatus routine before you can call the CreateOutputTableFromView routine..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.AppBusinessProcess_ParameterSetDoesNotExist">
<summary>
  Looks up a localized string similar to Parameter set does not exist. Could not find {0} parameter set with ID {1}..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.AppBusinessProcess_SecondaryErrorOccurred">
<summary>
  Looks up a localized string similar to A secondary error occurred while processing an error generated by the business process.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.AppBusinessProcess_TableNameOrKeyAlreadyCreated">
<summary>
  Looks up a localized string similar to The output table name &apos;{0}&apos; or table key &apos;{1}&apos; has already been created by this business process..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.AppBusinessProcess_TableNameTooManyCharacters">
<summary>
  Looks up a localized string similar to Resulting table name, {0}, has {1} characters.  128 characters is the maximum allowed..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.AppBusinessProcess_TheErrorWas">
<summary>
  Looks up a localized string similar to The error was:.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.AppBusinessProcess_TheInnerErrorWas">
<summary>
  Looks up a localized string similar to The inner error was:.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.AppBusinessProcess_TheOriginalErrorWas">
<summary>
  Looks up a localized string similar to The original error was:.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.AppBusinessProcess_TheOriginalErrorWhichCausedProcessToTerminateWas">
<summary>
  Looks up a localized string similar to The original error which caused the process to terminate was:.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.AppBusinessProcess_TheSubsequentErrorWas">
<summary>
  Looks up a localized string similar to The subsequent error was:.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.AppBusinessProcess_UnableToObtainEnqueueLock">
<summary>
  Looks up a localized string similar to Unable to obtain a lock for Enqueueing. Please try again..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.AppBusinessProcess_UnableToRetrieveViewInfo">
<summary>
  Looks up a localized string similar to Unable to retrieve view information for {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.AppUserInfo_InactiveAppUserMessage">
<summary>
  Looks up a localized string similar to Your account has been marked &apos;Inactive&apos;..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.AppUserInfo_UnableToLinkAppUser_AlreadyLinkedToClaim">
<summary>
  Looks up a localized string similar to Unable to link application user. The current application user is already linked to an identity claim..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.AppUserInfo_UnableToLinkAppUser_DuplicateEmailAddress">
<summary>
  Looks up a localized string similar to Unable to link application user. The current email address is associated with a different application user..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.AppUserInfo_UnlinkableAppUserClaim">
<summary>
  Looks up a localized string similar to Unable to link application user claim..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.AppUserInfo_UserDoesNotExist">
<summary>
  Looks up a localized string similar to User {0} does not exist..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.BatchAutoMatch_ExceptionValueNotFound">
<summary>
  Looks up a localized string similar to An error occured when getting the value for raising an exception during auto match..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.BatchDuplicateMatchUnableToGetSchema">
<summary>
  Looks up a localized string similar to Unable to determine the schema for the duplicate match search list procedure {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.BatchFilter_AddressValidation">
<summary>
  Looks up a localized string similar to Address validation errors.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.BatchFilter_AllErrors">
<summary>
  Looks up a localized string similar to All errors.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.BatchFilter_DuplicateRecordErrors">
<summary>
  Looks up a localized string similar to Duplicate record errors.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.BatchFilter_GeneralError">
<summary>
  Looks up a localized string similar to General errors.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.BatchFilter_Import">
<summary>
  Looks up a localized string similar to Import errors.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.BatchFilter_InvalidValueError">
<summary>
  Looks up a localized string similar to Invalid value errors.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.BatchFilter_RequiredFieldMissing">
<summary>
  Looks up a localized string similar to Required field missing errors.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.BatchFilter_SaveOrValidate">
<summary>
  Looks up a localized string similar to Errors from validation.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.BatchFilter_TypeMismatchError">
<summary>
  Looks up a localized string similar to Type mismatch errors.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.BatchFilter_Unfiltered">
<summary>
  Looks up a localized string similar to No filtering.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.BatchSave_Error_BBPSExceptionReportWithTokenCount_EventLog">
<summary>
  Looks up a localized string similar to An error occurred while getting the exception report from the Blackbaud Payment Service.  {0} credit card tokens could not be verified as saved with the Blackbaud Payment Service..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.BatchSave_Error_BBPSReceivingInformation">
<summary>
  Looks up a localized string similar to An error occurred while receiving credit card information from the Blackbaud Payment Service.  Save the batch to try again..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.BatchSave_Error_BBPSReceivingInformation_EmptyExceptionReport">
<summary>
  Looks up a localized string similar to Service call to StoreCardInfoBulkStatus returned &apos;CompletedWithExceptions&apos;, but the exception report is empty..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.BatchSave_Error_BBPSReceivingInformation_StatusDidNotFinish">
<summary>
  Looks up a localized string similar to Service call to StoreCardInfoBulkStatus returned &apos;DidNotFinish&apos;..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.BatchSave_Error_BBPSReceivingInformation_StatusResultCleared">
<summary>
  Looks up a localized string similar to Service call to StoreCardInfoBulkStatus returned &apos;ResultsCleared&apos;..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.BatchSave_Error_BBPSReceivingInformation_TimeOut">
<summary>
  Looks up a localized string similar to Service call to StoreCardInfoBulkStatus returned &apos;Running&apos; for a long time. The process has timed out..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.BatchSave_Error_BBPSSendingInformation">
<summary>
  Looks up a localized string similar to An error occurred while sending credit card information to the Blackbaud Payment Service.  Save the batch to try again..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.BatchSave_Error_BBPSStoreCardProcessRunning_EventLog">
<summary>
  Looks up a localized string similar to The Blackbaud Payment Service Store Card Process was still running.  The exception report could not be downloaded..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.BatchSave_Error_CreditCardNotTokenized_FullNumber">
<summary>
  Looks up a localized string similar to An error occurred while storing credit card information with the Blackbaud Payment Service.  Save the batch to try again..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.BatchSave_Error_SendCreditCardsError_EventLog">
<summary>
  Looks up a localized string similar to An error occurred while sending credit card information to the Blackbaud Payment Service. {0} card tokens were cleared..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.BatchSave_Error_TokenOnExceptionReport_EventLog">
<summary>
  Looks up a localized string similar to An error occurred while trying to store credit card details to the Blackbaud Payment Service.  {0} credit cards were on the exception report, and were removed from the batch..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.BatchSave_LockNotAcquired">
<summary>
  Looks up a localized string similar to Unable to exclusively lock batch..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.BatchValidate_DuplicateConstituents">
<summary>
  Looks up a localized string similar to This constituent might be a duplicate.  Click here to view..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.ClaimsProvider_NameFormat">
<summary>
  Looks up a localized string similar to {0} {1}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.ClickOnceDeprecation_ErrorHeading">
<summary>
  Looks up a localized string similar to Error.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.ClickOnceDeprecation_ErrorMessage">
<summary>
  Looks up a localized string similar to This link is no longer valid. Please contact your system administrator for a new one..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.ClickOnceDeprecation_PageTitle">
<summary>
  Looks up a localized string similar to Blackbaud CRM.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.Common_False">
<summary>
  Looks up a localized string similar to FALSE.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.Common_No">
<summary>
  Looks up a localized string similar to No.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.Common_RecordDoesNotExistForPage">
<summary>
  Looks up a localized string similar to The specified record does not exist for this page..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.Common_RecordNotFound">
<summary>
  Looks up a localized string similar to Record not found.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.Common_TheErrorWas">
<summary>
  Looks up a localized string similar to The error was:.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.Common_True">
<summary>
  Looks up a localized string similar to TRUE.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.Common_Yes">
<summary>
  Looks up a localized string similar to Yes.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.CreateFromAdHocQueryFilterCaption_After">
<summary>
  Looks up a localized string similar to after.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.CreateFromAdHocQueryFilterCaption_Before">
<summary>
  Looks up a localized string similar to before.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.CreateFromAdHocQueryFilterCaption_BeginsWith">
<summary>
  Looks up a localized string similar to begins with.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.CreateFromAdHocQueryFilterCaption_Between">
<summary>
  Looks up a localized string similar to between.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.CreateFromAdHocQueryFilterCaption_BetweenAnd">
<summary>
  Looks up a localized string similar to   and.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.CreateFromAdHocQueryFilterCaption_Contains">
<summary>
  Looks up a localized string similar to contains.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.CreateFromAdHocQueryFilterCaption_DoesNotBeginWith">
<summary>
  Looks up a localized string similar to does not begin with.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.CreateFromAdHocQueryFilterCaption_DoesNotContain">
<summary>
  Looks up a localized string similar to does not contain.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.CreateFromAdHocQueryFilterCaption_EqualTo">
<summary>
  Looks up a localized string similar to equal to.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.CreateFromAdHocQueryFilterCaption_GreaterThan">
<summary>
  Looks up a localized string similar to greater than.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.CreateFromAdHocQueryFilterCaption_GreaterThanOrEqualTo">
<summary>
  Looks up a localized string similar to greater than or equal to.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.CreateFromAdHocQueryFilterCaption_Is">
<summary>
  Looks up a localized string similar to is.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.CreateFromAdHocQueryFilterCaption_IsNot">
<summary>
  Looks up a localized string similar to is not.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.CreateFromAdHocQueryFilterCaption_LessThan">
<summary>
  Looks up a localized string similar to less than.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.CreateFromAdHocQueryFilterCaption_LessThanOrEqualTo">
<summary>
  Looks up a localized string similar to less than or equal to.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.CreateFromAdHocQueryFilterCaption_NotBetween">
<summary>
  Looks up a localized string similar to not between.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.CreateFromAdHocQueryFilterCaption_NotEqualTo">
<summary>
  Looks up a localized string similar to not equal to.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.CreateFromAdHocQueryFilterCaption_NotLike">
<summary>
  Looks up a localized string similar to not like.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.CreateFromAdHocQueryFilterCaption_NotOneOf">
<summary>
  Looks up a localized string similar to not one of.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.CreateFromAdHocQueryFilterCaption_NotUnder">
<summary>
  Looks up a localized string similar to not under.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.CreateFromAdHocQueryFilterCaption_OnOrAfter">
<summary>
  Looks up a localized string similar to on or after.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.CreateFromAdHocQueryFilterCaption_OnOrBefore">
<summary>
  Looks up a localized string similar to on or before.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.CreateFromAdHocQueryFilterCaption_Record">
<summary>
  Looks up a localized string similar to {0} record.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.CreateFromAdHocQueryFilterCaption_SoundsLike">
<summary>
  Looks up a localized string similar to sounds like.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.CreateFromAdHocQueryFilterCaption_Under">
<summary>
  Looks up a localized string similar to under.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.DataFormSaveMissingFieldsMessage">
<summary>
  Looks up a localized string similar to Warning:  The DataFormSave request did not include all possible fields in the DataFormItem payload.  The missing fields will be fetched from the database prior to saving the form..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.DataListHandler_GetResultsListErrorTitle">
<summary>
  Looks up a localized string similar to Data List Error.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.DataListHandler_GetResultsListHtmlError">
<summary>
  Looks up a localized string similar to An error occurred while loading the data list.  There was either a problem retrieving the data, or this data list uses features not supported by this endpoint.  See the web server&apos;s event log for details..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.DataListHandler_GetResultsListHtmlRequiredParameterMissing">
<summary>
  Looks up a localized string similar to The data could not be loaded because one or more required parameters did not have values..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.DBErrorHandler_DataCouldNotBeSaved">
<summary>
  Looks up a localized string similar to Data could not be saved..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.DBErrorHandler_RecordChangedByAnotherUser">
<summary>
  Looks up a localized string similar to Data could not be saved. The record being updated has been changed by another user..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.DuplicateCheck_MultipleMatches">
<summary>
  Looks up a localized string similar to Multiple records found..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.DuplicateCheck_NoMatches">
<summary>
  Looks up a localized string similar to No record found..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.DuplicateCheck_RecordsFoundMessage_ClickToView">
<summary>
  Looks up a localized string similar to {0}  Click here to view..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.DuplicateCheck_SingleMatch">
<summary>
  Looks up a localized string similar to Single record found..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.ExportDefinitionSave_DuplicateField">
<summary>
  Looks up a localized string similar to Unable to save export definition because the field &apos;{0}&apos; has a duplicate alias of &apos;{1}&apos;..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.ExportDefinitionSave_DuplicateNodePath">
<summary>
  Looks up a localized string similar to Unable to save export definition because the view path &apos;{0}&apos; has a duplicate alias of &apos;{1}&apos;..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.ExportDefinitionSave_SecurityUIFolder">
<summary>
  Looks up a localized string similar to Export Definition.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.ExportDefinitionSave_ViewFormAuthor">
<summary>
  Looks up a localized string similar to Blackbaud Product Development.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.ExportDefinitionSave_ViewFormDescription">
<summary>
  Looks up a localized string similar to View data form used to view the results of the export definition {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.ExportDefinitionSave_ViewFormName">
<summary>
  Looks up a localized string similar to Export Definition View {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.FileUploads_TempFileNotFound">
<summary>
  Looks up a localized string similar to One or more files could not be uploaded because of a connection problem, insufficient security access, or an attempt to upload an empty file or a very large file..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.HelpSearch_MatchesFound">
<summary>
  Looks up a localized string similar to {0} documents found containing {1}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.HelpSearch_MatchFound">
<summary>
  Looks up a localized string similar to 1 document found containing {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.HelpSearch_More">
<summary>
  Looks up a localized string similar to [more].
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.HelpSearch_MoreMatchesFound">
<summary>
  Looks up a localized string similar to More than {0} documents found containing {1}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.OutputViewInformation_ErrorReadingMetatags">
<summary>
  Looks up a localized string similar to Error reading metatags:.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.PageDefinitionGetMetaData_KpisActionCaption">
<summary>
  Looks up a localized string similar to KPI dashboard.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.PageDefinitionGetMetaData_ManageKpisActionCaption">
<summary>
  Looks up a localized string similar to Manage KPIs.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.PageDefinitionGetMetaData_MoreInformation">
<summary>
  Looks up a localized string similar to More information.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.PageDefinitionGetMetaData_Tasks">
<summary>
  Looks up a localized string similar to Tasks.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.PageDefinitionGetMetaData_WebDashboardFromContextActionCaption">
<summary>
  Looks up a localized string similar to Web dashboard pages.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.PaymentProcessor_BBPSCredentialsNotSet">
<summary>
  Looks up a localized string similar to The Blackbaud Payment Service credentials are not set..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.PaymentProcessor_BothCardNumberAndTokenSpecified">
<summary>
  Looks up a localized string similar to Both a card number and token were specified..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.PaymentProcessor_CreditCard_UnexpectedState">
<summary>
  Looks up a localized string similar to The credit card data is in an unexpected state.  Enter the credit card information again..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.PaymentProcessor_CreditCardExpirationDateDefaultCaption">
<summary>
  Looks up a localized string similar to Credit card expiration date.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.PaymentProcessor_CreditCardFieldRequired">
<summary>
  Looks up a localized string similar to {0} is required if any other credit card fields are set..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.PaymentProcessor_CreditCardHolderDefaultCaption">
<summary>
  Looks up a localized string similar to Credit card holder.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.PaymentProcessor_CreditCardHolderInvalid">
<summary>
  Looks up a localized string similar to {0} must have the card holder&apos;s first and last name..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.PaymentProcessor_CreditCardNumberDefaultCaption">
<summary>
  Looks up a localized string similar to Credit card number.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.PaymentProcessor_CreditCardNumberInvalid">
<summary>
  Looks up a localized string similar to {0} is not valid..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.PaymentProcessor_Error_CreditCardNotTokenized_NoFullNumber_NotInBbps">
<summary>
  Looks up a localized string similar to The credit card is not properly stored with the Blackbaud Payment Service.  Enter the credit card information again..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.PaymentProcessor_Error_CreditCardNotTokenized_NoFullNumber_NotPartialMatch">
<summary>
  Looks up a localized string similar to The credit card does not match the card stored with the Blackbaud Payment Service.  Enter the credit card information again..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.PaymentProcessor_RefundAmountInvalid_Negative">
<summary>
  Looks up a localized string similar to Refund amount must be greater than {0}..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.PaymentProcessor_RefundReferenceTransactionInvalid">
<summary>
  Looks up a localized string similar to The reference credit card transaction provided for this refund is invalid..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.PaymentProcessor_RefundTransactionInvalid">
<summary>
  Looks up a localized string similar to The transaction provided for this refund is invalid..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.PaymentProcessor_UnableToAcceptChargeback">
<summary>
  Looks up a localized string similar to Unable to accept chargeback..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.PaymentProcessor_UnableToApproveSuspectTransaction">
<summary>
  Looks up a localized string similar to Unable to approve suspect transaction..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.PaymentProcessor_UnableToChallengeChargeback">
<summary>
  Looks up a localized string similar to Unable to challenge chargeback..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.PaymentProcessor_ZipPackageDoesNotExist">
<summary>
  Looks up a localized string similar to The transaction data was not included in the response from BBPS..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.QueryDateRollingDateFilterValueOperator_Future">
<summary>
  Looks up a localized string similar to From Today.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.QueryDateRollingDateFilterValueOperator_Past">
<summary>
  Looks up a localized string similar to Ago.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.QueryDateRollingDateFilterValueUnit_Days">
<summary>
  Looks up a localized string similar to Days.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.QueryDateRollingDateFilterValueUnit_FiscalYears">
<summary>
  Looks up a localized string similar to Fiscal Years.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.QueryDateRollingDateFilterValueUnit_Months">
<summary>
  Looks up a localized string similar to Months.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.QueryDateRollingDateFilterValueUnit_Quarters">
<summary>
  Looks up a localized string similar to Quarters.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.QueryDateRollingDateFilterValueUnit_Weeks">
<summary>
  Looks up a localized string similar to Weeks.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.QueryDateRollingDateFilterValueUnit_Years">
<summary>
  Looks up a localized string similar to Years.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.QueryExport_Fail">
<summary>
  Looks up a localized string similar to Export for query failed..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.QueryViewField_ExistsInSelectionFieldNameTemplate">
<summary>
  Looks up a localized string similar to Exists in &quot;{0}&quot;.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.QuickFind_SearchText">
<summary>
  Looks up a localized string similar to Search.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.ReportsGenerateReportModel_DuplicateName">
<summary>
  Looks up a localized string similar to {0} {1:d}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.RSSFeed_DetailTableHeader">
<summary>
  Looks up a localized string similar to Detail Information.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.ShellFind_ContextHeader">
<summary>
  Looks up a localized string similar to The items below will be opened with the following context: {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.ShellFind_HelpSearchHeader">
<summary>
  Looks up a localized string similar to Help Contents.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.ShellFind_IgnoredWordCaption">
<summary>
  Looks up a localized string similar to The following word was ignored: {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.ShellFind_IgnoredWordsCaption">
<summary>
  Looks up a localized string similar to The following words were ignored: {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.ShellFind_ItemFoundMatching">
<summary>
  Looks up a localized string similar to {0} item found matching {1}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.ShellFind_ItemsFoundMatching">
<summary>
  Looks up a localized string similar to  {0} items found matching {1}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.ShellFind_KeywordMatch">
<summary>
  Looks up a localized string similar to {0} match on {1}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.ShellFind_NoMatchesFound">
<summary>
  Looks up a localized string similar to Your search for {0} did not return any results..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.ShellFind_Results">
<summary>
  Looks up a localized string similar to Search results.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.ShellFind_RSSFeedFoundMatching">
<summary>
  Looks up a localized string similar to {0} RSS feed found matching {1}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.ShellFind_RSSFeedsContextHeader">
<summary>
  Looks up a localized string similar to The RSS feeds below will be opened with the following context: {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.ShellFind_RSSFeedsFoundMatching">
<summary>
  Looks up a localized string similar to {0} RSS feeds found matching {1}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.ShellFind_Seconds">
<summary>
  Looks up a localized string similar to {0} seconds.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.ShellFind_WordsToIgnore">
<summary>
  Looks up a localized string similar to i,a,about,an,and,are,as,at,be,by,en,for,from,how,in,is,it,la,of,on,or,s,that,the,this,to,was,what,when,where,who,will,with.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.Startup_UnsignedJwtAllowed">
<summary>
  Looks up a localized string similar to Blackbaud API authentication is enabled and configured to allow unsigned tokens. Unsigned tokens should only be enabled in in test environments that will be generating unsigned tokens. Use the BlackbaudApiAllowUnsignedTokens app setting key to configure this behavior..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.StoreCardInfoBulkUpload_NoReply">
<summary>
  Looks up a localized string similar to There was no reply from the Blackbaud Payment Service for a store card info bulk request..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.TableColumn_NotSupported">
<summary>
  Looks up a localized string similar to {0} is not supported.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.TextFileParser_DefaultColumnNamePrefix">
<summary>
  Looks up a localized string similar to Column_.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.TextFileParser_DuplicateColumnHeader">
<summary>
  Looks up a localized string similar to The data file must contain unique column header names. The column header &apos;{0}&apos; may not exist multiple times in the file..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.UserPasswordResetLinkSend_EmailBody">
<summary>
  Looks up a localized string similar to You recently requested a password reset for {1}.{0}Your user name is: {2}{0}To reset your password, please click on the link provided below.  If your password is not reset within {3} hours, the link will expire and you will have to resubmit your request.{0}{4}{0}If you did not submit this request, please let us know at http://www.blackbaud.com/support.{0}Thanks,{0}The {1} Team.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.Content.UserPasswordResetLinkSend_EmailSubject">
<summary>
  Looks up a localized string similar to You requested a new password.
</summary>
</member>
<member name="T:Blackbaud.AppFx.Server.My.Resources.NamedExceptions">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ActivationKeyInvalid">
<summary>
  Looks up a localized string similar to Invalid ActivationKey specified..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ActivationKeyMissing">
<summary>
  Looks up a localized string similar to The ActivationKey must be specified..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ActiveDirectoryGroupRequired">
<summary>
  Looks up a localized string similar to The Active Directory group name is required..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQueryAdvancedFilterDefinitionIsMissing">
<summary>
  Looks up a localized string similar to Unable to find an advanced filter definition with an id of &apos;{0}&apos; in the query view spec.  Query view spec id: &apos;{1}&apos;..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQueryAdvancedFilterSetParenthesesMismatch">
<summary>
  Looks up a localized string similar to The left and right parentheses count for this query&apos;s advanced filters do not match..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQueryBuildReportDefinitionContextIDFieldInvalid">
<summary>
  Looks up a localized string similar to The selected context ID field is invalid..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQueryBuildReportDefinitionContextIDFieldIsOnlyField">
<summary>
  Looks up a localized string similar to You must specify at least one output field other than the context record ID field..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQueryBuildReportDefinitionContextRecordTypeMissing">
<summary>
  Looks up a localized string similar to You must provide a record type for the selected context ID field..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQueryBuildReportDefinitionNameMissing">
<summary>
  Looks up a localized string similar to You must provide a report name..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQueryDelete">
<summary>
  Looks up a localized string similar to Ad-hoc query could not be deleted.  {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQueryDeleteIDSetInUseByAdHocQuery">
<summary>
  Looks up a localized string similar to Ad-hoc query could not be deleted. The selection associated with this ad-hoc query cannot be deleted because it is in use by another ad-hoc query..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQueryDeleteIDSetInUseByExportDefinition">
<summary>
  Looks up a localized string similar to Ad-hoc query could not be deleted. The selection associated with this ad-hoc query cannot be deleted because it is in use by an export definition..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQueryDeleteKeyViolation">
<summary>
  Looks up a localized string similar to Ad-hoc query could not be deleted. This ad-hoc query or a selection created from this ad-hoc query may be in use..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQueryDeleteNoRightsToInstance">
<summary>
  Looks up a localized string similar to This ad-hoc query cannot be deleted because the current user does not have rights to edit this ad-hoc query..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQueryDeleteNoRightsToQueryView">
<summary>
  Looks up a localized string similar to This ad-hoc query cannot be deleted because the current user does not have rights to one or more of the source query views..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQueryGetNoRightsToInstance">
<summary>
  Looks up a localized string similar to This ad-hoc query cannot be accessed because the current user does not have rights to the ad-hoc query..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQueryGetNoRightsToQueryView">
<summary>
  Looks up a localized string similar to This ad-hoc query cannot be accessed because the current user does not have rights to one or more of the source query views..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQueryIDRequiredForRefresh">
<summary>
  Looks up a localized string similar to AdHocQueryID is required for the AdHocQueryRefreshStaticIDSetRequest service method..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQueryIDSetInUse">
<summary>
  Looks up a localized string similar to Ad-hoc query could not be updated. The selection associated with this ad-hoc query cannot be deleted because it is in use..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQueryIDSetInUseByAdHocQuery">
<summary>
  Looks up a localized string similar to Ad-hoc query could not be updated. The selection associated with this ad-hoc query cannot be deleted because it is in use by another ad-hoc query..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQueryIDSetInUseByExportDefinition">
<summary>
  Looks up a localized string similar to Ad-hoc query could not be updated. The selection associated with this ad-hoc query cannot be deleted because it is in use by an export definition..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQueryMissingViewFields">
<summary>
  Looks up a localized string similar to This ad-hoc query includes one or more fields that have been removed from the underlying source query view. You can edit the query to see more information and make appropriate adjustments..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQueryNameExists">
<summary>
  Looks up a localized string similar to Unable to save query definition.  Query &apos;{0}&apos; already exists..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQueryNameMissing">
<summary>
  Looks up a localized string similar to You must specify a name for this ad-hoc query..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQueryNotFound">
<summary>
  Looks up a localized string similar to AdHocQuery object with ID &apos;{0}&apos; not found..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQueryNotGrantedInstance">
<summary>
  Looks up a localized string similar to The results of this ad-hoc query cannot be viewed because the current user does not have rights to the ad-hoc query..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQueryProcessDeferredResultKeyInUse">
<summary>
  Looks up a localized string similar to The ad-hoc query deferred result key is already in use..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQueryProcessGetDeferredResultKeyMissing">
<summary>
  Looks up a localized string similar to The requested ad-hoc query deferred result key was not found. The session may have expired..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQueryProcessGetDeferredResultKeyRequired">
<summary>
  Looks up a localized string similar to An ad-hoc query deferred result key is required..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQueryProcessGetDeferredResultNoPermission">
<summary>
  Looks up a localized string similar to The current user does not have rights to access this ad-hoc query deferred result..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQueryProcessInvalidTaskSecurityContext">
<summary>
  Looks up a localized string similar to This ad-hoc query cannot be processed because it is not referenced by the task in context..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQueryProcessNoRightsToQueryView">
<summary>
  Looks up a localized string similar to This ad-hoc query cannot be processed because the current user does not have rights to one or more of the source query views..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQueryProcessNotGrantedTask">
<summary>
  Looks up a localized string similar to This ad-hoc query cannot be processed because the current user has not been granted the task in context..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQueryProcessSelfReferencingIDSet">
<summary>
  Looks up a localized string similar to This ad-hoc query contains a dynamic selection field which creates a circular reference.  This happens when a selection field is derived from a dynamic selection belonging to an existing ad-hoc query, which in turn references a selection field derived from this ad-hoc query.  This selection field must be removed before the query can be run..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQueryRefreshStaticSelectionMissingQueryViewFields">
<summary>
  Looks up a localized string similar to This ad-hoc query includes one or more fields that have been removed from the underlying source query view. You can edit the query to see more information and make appropriate adjustments before refreshing the selection..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySave">
<summary>
  Looks up a localized string similar to Unable to save query definition. {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveDataListDuplicateOutput">
<summary>
  Looks up a localized string similar to The field &quot;{0}&quot; appears more than once in the list of data list output fields.  Field names must be unique..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveDataListDuplicateParameter">
<summary>
  Looks up a localized string similar to The field &quot;{0}&quot; appears more than once in the list of data list parameters.  Field names must be unique..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveDataListFeedAlertPublicationDateFieldMissing">
<summary>
  Looks up a localized string similar to You must specify an feed alert publication date field..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveDataListInvalidContextRecordIDField">
<summary>
  Looks up a localized string similar to The context record ID field {0} does not exist in the ad-hoc query select fields..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveDataListInvalidDataListOutputField">
<summary>
  Looks up a localized string similar to The data list output field {0} does not exist in the ad-hoc query select fields..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveDataListInvalidDataListParameter">
<summary>
  Looks up a localized string similar to The data list parameter {0} does not exist in the ad-hoc query select fields..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveDataListInvalidFilterOperator">
<summary>
  Looks up a localized string similar to The filter operator {0} is not valid for use in data lists created from ad-hoc queries..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveDataListInvalidItemTitleField">
<summary>
  Looks up a localized string similar to The RSS item title field {0} does not exist in the ad-hoc query select fields..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveDataListInvalidPublicationDateField">
<summary>
  Looks up a localized string similar to The RSS publication date field {0} does not exist in the ad-hoc query select fields..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveDataListInvalidPublicationDateFieldType">
<summary>
  Looks up a localized string similar to The RSS publication date field must be a date field..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveDataListInvalidRssItemIDField">
<summary>
  Looks up a localized string similar to The RSS item ID field {0} does not exist in the ad-hoc query select fields..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveDataListNameMissing">
<summary>
  Looks up a localized string similar to You must provide a data list name..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveDataListNonUniqueDataListName">
<summary>
  Looks up a localized string similar to The supplied name for this data list already exists in the database..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveDataListNoOutputFields">
<summary>
  Looks up a localized string similar to You must select at least one output field..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveDataListRssChannelTitleMissing">
<summary>
  Looks up a localized string similar to You must specify an RSS channel title..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveDataListRssItemIDFieldMissing">
<summary>
  Looks up a localized string similar to You must specify an RSS item ID field..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveDataListRssItemTitleFieldMissing">
<summary>
  Looks up a localized string similar to You must specify an RSS item title field..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveDataListRssPublicationDateFieldMissing">
<summary>
  Looks up a localized string similar to You must specify an RSS publication date field..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveDataListWasNotCreatedByAdHocQuery">
<summary>
  Looks up a localized string similar to The data list with ID {0} cannot be edited using an ad-hoc query because it was not originally created from an ad-hoc query..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveEditSecurityLevelAllRolesOnlyIfRunSecurityLevelAllRoles">
<summary>
  Looks up a localized string similar to The EditSecurityLevel can only be set to &apos;All roles&apos; if RunSecurityLevel is also set to that..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveFilterParenthesesMismatch">
<summary>
  Looks up a localized string similar to The left and right parentheses count for this query&apos;s filter fields do not match..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveGroupFilterParenthesesMismatch">
<summary>
  Looks up a localized string similar to The left and right parentheses count for this query&apos;s group filter fields do not match..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveIDSetInDataMart">
<summary>
  Looks up a localized string similar to Unable to create static selection in data mart {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveNoRightsToInstance">
<summary>
  Looks up a localized string similar to This ad-hoc query cannot be saved because the current user does not have rights to edit this ad-hoc query..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveNoRightsToQueryView">
<summary>
  Looks up a localized string similar to This ad-hoc query cannot be saved because the current user does not have rights to one or more of the source query views..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveReportDefinitionContextIDFieldInvalid">
<summary>
  Looks up a localized string similar to The selected context ID field is invalid..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveReportDefinitionContextRecordTypeMissing">
<summary>
  Looks up a localized string similar to You must provide a record type for the selected context ID field..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveReportDefinitionNameMissing">
<summary>
  Looks up a localized string similar to You must provide a report name..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveReportNonUniqueReportName">
<summary>
  Looks up a localized string similar to The supplied name for this report already exists in the database..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveReportWasNotCreatedByAdHocQuery">
<summary>
  Looks up a localized string similar to The report with ID {0} cannot be edited using an ad-hoc query because it was not originally created from an ad-hoc query..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveSearchListDuplicateOutput">
<summary>
  Looks up a localized string similar to The field &quot;{0}&quot; appears more than once in the list of search list output fields.  Field names must be unique..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveSearchListDuplicateParameter">
<summary>
  Looks up a localized string similar to The field &quot;{0}&quot; appears more than once in the list of search list parameters.  Field names must be unique..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveSearchListInvalidFilterOperator">
<summary>
  Looks up a localized string similar to The filter operator {0} is not valid for use in search lists created from ad-hoc queries..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveSearchListInvalidSearchListOutputField">
<summary>
  Looks up a localized string similar to The search list output field {0} does not exist in the ad-hoc query select fields..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveSearchListInvalidSearchListParameter">
<summary>
  Looks up a localized string similar to The search list parameter {0} does not exist in the ad-hoc query select fields..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveSearchListNameMissing">
<summary>
  Looks up a localized string similar to You must provide a search list name..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveSearchListNonUniqueSearchListName">
<summary>
  Looks up a localized string similar to The supplied name for this search list already exists in the database..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveSearchListNoOutputFields">
<summary>
  Looks up a localized string similar to You must select at least one output field..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveSearchListWasNotCreatedByAdHocQuery">
<summary>
  Looks up a localized string similar to The search list with ID {0} cannot be edited using an ad-hoc query because it was not originally created from an ad-hoc query..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveSelfReferencingIDSet">
<summary>
  Looks up a localized string similar to This ad-hoc query contains a dynamic selection field which creates a circular reference.  This happens when a selection field is derived from a dynamic selection belonging to an existing ad-hoc query, which in turn references a selection field derived from this ad-hoc query.  In order to save this query, either this selection field must be removed, or the query&apos;s selection must be saved as static..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveSmartQueryDuplicateOutput">
<summary>
  Looks up a localized string similar to The field &quot;{0}&quot; appears more than once in the list of smart query output fields.  Field names must be unique..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveSmartQueryDuplicateParameter">
<summary>
  Looks up a localized string similar to The field &quot;{0}&quot; appears more than once in the list of smart query parameters.  Field names must be unique..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveSmartQueryInvalidPrimaryKeyField">
<summary>
  Looks up a localized string similar to The primary key field {0} does not exist in the ad-hoc query select fields..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveSmartQueryInvalidSmartQueryOutputField">
<summary>
  Looks up a localized string similar to The smart query output field {0} does not exist in the ad-hoc query select fields..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveSmartQueryInvalidSmartQueryParameter">
<summary>
  Looks up a localized string similar to The smart query parameter {0} does not exist in the ad-hoc query select fields..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveSmartQueryNameInUse">
<summary>
  Looks up a localized string similar to A smart query named &apos;{0}&apos; already exists..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveSmartQueryNameMissing">
<summary>
  Looks up a localized string similar to You must provide a smart query name..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveSmartQueryNoOutputFields">
<summary>
  Looks up a localized string similar to You must select at least one output field..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveSmartQueryNoParameters">
<summary>
  Looks up a localized string similar to You must specify at least one filter field..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveSmartQueryNoRecordTypeField">
<summary>
  Looks up a localized string similar to You must specify a record type for the smart query..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveSmartQueryPrimaryKeyFieldIsNotOutputField">
<summary>
  Looks up a localized string similar to The primary key field must be specified as an output field..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdHocQuerySaveSmartQueryWasNotCreatedByAdHocQuery">
<summary>
  Looks up a localized string similar to The smart query with ID {0} cannot be edited using an ad-hoc query because it was not originally created from an ad-hoc query..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AdvocacyHasBeenDeprecated">
<summary>
  Looks up a localized string similar to Advocacy has been deprecated..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AfterExecuteBusinessProcess">
<summary>
  Looks up a localized string similar to An error occurred after the process &apos;{0}&apos; completed : {1}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AllProductsExpired">
<summary>
  Looks up a localized string similar to Unable to determine if all optionally installed products are expired..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.AppDataListInvalidResult">
<summary>
  Looks up a localized string similar to AppDataList returned invalid result (null Reader and null Command result)..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.Async_CancelException">
<summary>
  Looks up a localized string similar to The operation was cancelled..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.Async_CancellableSqlCommandHelper_ArgsInvalid_ProcessName">
<summary>
  Looks up a localized string similar to The process name is required..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.Async_CancellableSqlCommandHelper_ArgsInvalid_SqlCommand">
<summary>
  Looks up a localized string similar to The SQLCommand is required..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.Async_CancellableSqlCommandHelper_CannotExecuteReaderOnNullSqlCommand">
<summary>
  Looks up a localized string similar to Cannot execute reader on a null SqlCommand..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.Async_CancellableSqlCommandHelper_InconsistentAsyncResult">
<summary>
  Looks up a localized string similar to Inconsistent calls between BeginExecuteReader and EndExecuteReader. Pass the result from BeginExecuteReader into EndExecuteReader..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.Async_CancellableSqlCommandHelper_InconsistentAsyncResultForCancel">
<summary>
  Looks up a localized string similar to Inconsistent async result passed for cancel..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.Async_CancellableSqlReader_Invalid_DidTimeout">
<summary>
  Looks up a localized string similar to The operation has timed out. The result cannot be read..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.Async_CancellableSqlReader_Invalid_NoReader">
<summary>
  Looks up a localized string similar to A valid data reader was not provided. The result cannot be read..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.Async_CancellableSqlReader_Invalid_ValidationFailure">
<summary>
  Looks up a localized string similar to The operation experienced a validation failure. The result cannot be read..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.Async_CancellableSqlReader_Invalid_WasCancelled">
<summary>
  Looks up a localized string similar to The operation has been cancelled. The result cannot be read..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.Async_TimeoutException">
<summary>
  Looks up a localized string similar to The operation timed out..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.Async_ValidationException">
<summary>
  Looks up a localized string similar to The asynchronous command failed its polled user validation test and was cancelled..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.BatchBulkAdd_NoMappingField">
<summary>
  Looks up a localized string similar to Cannot edit without a mapping field..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.BatchDefaultsInvalidAppUser">
<summary>
  Looks up a localized string similar to You have not been granted rights for this batch design..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.BatchDismissExceptionsInvalidAppUser">
<summary>
  Looks up a localized string similar to You have not been granted rights to dismiss this error message..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.BatchGetDuplicateCandidatesInvalidAppUser">
<summary>
  Looks up a localized string similar to You have not been granted rights to perform duplicate checking on this batch..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.BatchGetDuplicateCandidatesProcedureMissing">
<summary>
  Looks up a localized string similar to There is no duplicate search procedure defined for this batch type..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.BatchIDMissing">
<summary>
  Looks up a localized string similar to You must specify a batch ID..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.BatchInsertErrorInvalidAppUser">
<summary>
  Looks up a localized string similar to You have not been granted rights to insert error messages into this batch..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.BatchLoad">
<summary>
  Looks up a localized string similar to Batch could not be loaded.  {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.BatchLoadInvalidAppUser">
<summary>
  Looks up a localized string similar to You do not have access to this batch..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.BatchSave">
<summary>
  Looks up a localized string similar to Batch could not be saved.  {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.BatchSaveInvalidAppUser">
<summary>
  Looks up a localized string similar to You have not been granted rights to save this batch..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.BatchSettingsGetError">
<summary>
  Looks up a localized string similar to Error getting the user batch settings..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.BatchSettingsSaveError">
<summary>
  Looks up a localized string similar to Error saving batch settings..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.BatchStatusOnSave">
<summary>
  Looks up a localized string similar to Only open batches can be edited..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.BatchTemplateNotFound">
<summary>
  Looks up a localized string similar to Batch template for id {0} was not found..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.BatchWorkflowDisallowEdit">
<summary>
  Looks up a localized string similar to This batch cannot be edited because of its workflow status or because it is locked by another batch process..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.BeforeExecuteBusinessProcess">
<summary>
  Looks up a localized string similar to An error occurred before executing the process &apos;{0}&apos; : {1}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.BusinessProcessIDMissing">
<summary>
  Looks up a localized string similar to You must specify a business process ID..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.BusinessProcessInvalidBusinessProcessID">
<summary>
  Looks up a localized string similar to The specified business process ID is invalid. The business process does not exist..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.BusinessProcessLaunchDeferredResultKeyInUse">
<summary>
  Looks up a localized string similar to The business process deferred result key is already in use..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.BusinessProcessLaunchGetDeferredResultKeyMissing">
<summary>
  Looks up a localized string similar to The requested business process deferred result key was not found. The session may have expired..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.BusinessProcessLaunchGetDeferredResultKeyRequired">
<summary>
  Looks up a localized string similar to A business process deferred result key is required..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.BusinessProcessLaunchGetDeferredResultNoPermission">
<summary>
  Looks up a localized string similar to The current user does not have rights to access this business process deferred result..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.BusinessProcessNoPermission">
<summary>
  Looks up a localized string similar to The current user does not have rights to launch this business process..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.BusinessProcessOutputLoadOutput">
<summary>
  Looks up a localized string similar to Error loading data from output table. {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.BusinessProcessOutputNoOutputTable">
<summary>
  Looks up a localized string similar to Unable to retrieve an output table for the given business process status ID..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.BusinessProcessOutputNoPermission">
<summary>
  Looks up a localized string similar to The current user does not have rights to edit this business process output..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.BusinessProcessOutputUpdateOutput">
<summary>
  Looks up a localized string similar to Error updating the output table. {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.BusinessProcessStatusIDMissing">
<summary>
  Looks up a localized string similar to You must specify a business process status ID..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.CatalogBrowser_InvalidSourceFileSpecified">
<summary>
  Looks up a localized string similar to File &apos;{0}&apos; is not an allowed source file name..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.CatalogBrowserServicesNoPermission">
<summary>
  Looks up a localized string similar to You have not been granted the required permissions to use the Catalog Browser services.  Only System Administrators and users granted the Catalog Browser Datalist can use this service request..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.CategoryExists">
<summary>
  Looks up a localized string similar to Category &apos;{0}&apos; already exists..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.CategoryMissing">
<summary>
  Looks up a localized string similar to No category was specified..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ChangesMissing">
<summary>
  Looks up a localized string similar to You must specify a dataSet of changes made to the output table..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.CodeTableEntryAddNoPermission">
<summary>
  Looks up a localized string similar to You do not have permission to add new entries to this code table..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.CodeTableEntryDeleteNoPermission">
<summary>
  Looks up a localized string similar to You do not have permission to delete entries from this code table..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.CodeTableEntryDescriptionMissing">
<summary>
  Looks up a localized string similar to No description was specified..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.CodeTableEntryIDMissing">
<summary>
  Looks up a localized string similar to No ID was specified..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.CodeTableEntryUpdateNoPermission">
<summary>
  Looks up a localized string similar to You do not have permission to alter entries in this code table..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.CodeTableIDMissing">
<summary>
  Looks up a localized string similar to No code table id was specified..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.CodeTableIDOrNameMissing">
<summary>
  Looks up a localized string similar to Neither the ID nor the Name for the code table were supplied in the request.  Either the ID or the Name of the code table must be specified..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.CodeTableNameMissing">
<summary>
  Looks up a localized string similar to No code table name was specified..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.CodeTableSpecInvalidPrefix">
<summary>
  Looks up a localized string similar to User-defined code tables must be prefixed with &apos;USR_&apos; to avoid name collisions with future Blackbaud updates..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.CodeTableSpecIsBuiltIn">
<summary>
  Looks up a localized string similar to Code tables with the IsBuiltIn=true should not be added via the web service..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.CodeTableSpecProcess">
<summary>
  Looks up a localized string similar to Unable to process CodeTableSpec. {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.CodeTableSpecXmlMissing">
<summary>
  Looks up a localized string similar to Either a CodeTableSpec or a CodeTableSpecXML must be supplied..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.CollectionFieldNotFound">
<summary>
  Looks up a localized string similar to Could not find a field named {0} in the collection field.  The root element must have the same name as the collection field.  The collection XML was: {1}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ComponentIdentifierUtilityCantCreateCLRType">
<summary>
  Looks up a localized string similar to Unable to create CLR type: {0}..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ComponentIdentifierUtilityCantCreateInstance">
<summary>
  Looks up a localized string similar to Unable to create an instance of type {0}..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ComponentIdentifierUtilityInvalidDerivedType">
<summary>
  Looks up a localized string similar to The type {0} does not inherit from {1}..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ConfigurationDataProcedureIDMissing">
<summary>
  Looks up a localized string similar to You must specify a configuration data definition ID..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ConfigurationExportInstanceIDMissing">
<summary>
  Looks up a localized string similar to You must specify a configuration export instance ID..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.CorruptLoadMoreResult">
<summary>
  Looks up a localized string similar to A cached DataListLoadRequest result set was in a corrupt state. The type of the cached object was {0}..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.CorruptPageMetaDataCache">
<summary>
  Looks up a localized string similar to Corrupt PageMetaDataCache..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.CorruptSimpleDataListMetaDataCache">
<summary>
  Looks up a localized string similar to Corrupt SimpleDataList MetaDataCache..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.CouldNotStartHangfire">
<summary>
  Looks up a localized string similar to Could not start Hangfire..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.CouldNotUseBlackbaudApiAuthentication">
<summary>
  Looks up a localized string similar to Could not use Blackbaud API authentication..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.CountryDescriptionMissing">
<summary>
  Looks up a localized string similar to No country was specified..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.CountryNotFound">
<summary>
  Looks up a localized string similar to No country exists with the given description..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.CreditCardVault_AtLeastOneCardRequired">
<summary>
  Looks up a localized string similar to There must be at least one credit card number to vault..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.CreditCardVault_CreditCardObjectNull">
<summary>
  Looks up a localized string similar to CreditCard object at position {0} is null..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.CreditCardVault_NoPermission">
<summary>
  Looks up a localized string similar to The current user does not have rights to vault credit card numbers..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.CreditCardVault_RequestLimitExceeded">
<summary>
  Looks up a localized string similar to Cannot tokenize the credit card.  You have exceeded the acceptable rate limit for this endpoint.  Adjust your business practices to send the requests in bulk..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.CreditCardVault_RequestNull">
<summary>
  Looks up a localized string similar to The Request object is null..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.CurrencyExchangeRateNotFound">
<summary>
  Looks up a localized string similar to The currency exchange rate could not be found..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.CurrencyGetBothParametersSpecified">
<summary>
  Looks up a localized string similar to Both a currency ID and ISO code were specified.  You must specify only one parameter..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.CurrencyGetInvalidIsoCode">
<summary>
  Looks up a localized string similar to The given ISO code is invalid.  ISO currency codes must be three characters long..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.CurrencyNotFound">
<summary>
  Looks up a localized string similar to The currency could not be found..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.DashboardDataListsNotFound">
<summary>
  Looks up a localized string similar to This dashboard does not contain any data lists on the XML item named {0}..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.DashboardIDMissing">
<summary>
  Looks up a localized string similar to DashboardID is required in DashboardGetDataRequest..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.DashboardMetadataCorrupt">
<summary>
  Looks up a localized string similar to Dashboard metadata cache was corrupt..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.DashboardNoPermission">
<summary>
  Looks up a localized string similar to The current user does not have rights to this dashboard..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.DashboardNotFound">
<summary>
  Looks up a localized string similar to No dashboard exists in the catalog with the specified ID..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.DashboardXmlItemNotFound">
<summary>
  Looks up a localized string similar to This dashboard does not contain an XML item named {0}..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.DataForm_FormFieldNotFound">
<summary>
  Looks up a localized string similar to No FormField could be found with ID &apos;{0}&apos;.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.DataFormGetDropDownValueListRequest_NoCatalogID">
<summary>
  Looks up a localized string similar to No CatalogItemInstanceID was supplied..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.DataFormGetDropDownValueListRequest_NoFieldID">
<summary>
  Looks up a localized string similar to No FieldID was supplied..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.DataFormGetDropDownValueListRequest_UnexpectedDFIType">
<summary>
  Looks up a localized string similar to Unknown DataFormCatalogItemType for DataFormGetDropDownValueListRequest: {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.DataFormItemMissing">
<summary>
  Looks up a localized string similar to You must specify a dataformitem..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.DataFormLoad">
<summary>
  Looks up a localized string similar to Data form could not be loaded..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.DataFormLoadFormMetaDataNotFound">
<summary>
  Looks up a localized string similar to Metadata for form with ID {0} was not found..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.DataFormNoPermission">
<summary>
  Looks up a localized string similar to The current user does not have rights to use this form..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.DataFormRecordNotFound">
<summary>
  Looks up a localized string similar to The record specified does not exist for this data form..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.DataFormSaveNoRightsToSelection">
<summary>
  Looks up a localized string similar to You have not been granted the required permission to use the specified selection..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.DataListIDOrNameMissing">
<summary>
  Looks up a localized string similar to You must specify a data list ID or name..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.DataListLoad">
<summary>
  Looks up a localized string similar to Unable to load data list..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.DataListLoadNullReply">
<summary>
  Looks up a localized string similar to Invalid server state: _reply reference is null in DataListLoadProcessor..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.DataListNameMissing">
<summary>
  Looks up a localized string similar to You must specify a valid data list name..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.DataListNoPermission">
<summary>
  Looks up a localized string similar to The current user does not have rights to use this data list..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.DataListNotFound">
<summary>
  Looks up a localized string similar to You must specify a valid data list ID..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.DataListRowComparerInvalidFieldID">
<summary>
  Looks up a localized string similar to The data list results could not be sorted.  The specified sort field &quot;{0}&quot; does not appear in the data list&apos;s output fields..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.DataNotAvailable">
<summary>
  Looks up a localized string similar to A DataListLoadMoreRequest was made for data that was no longer available..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.DBRevKeyOutOfSync">
<summary>
  Looks up a localized string similar to The Database Revision Key in the database does not match the version of the server assemblies.  The database key is {0}, the server key is {1}.  Run the service revisions to update the database to match the server assembly..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.DuplicateCandidatesProcedureInvalidParameters">
<summary>
  Looks up a localized string similar to The duplicate search procedure had parameters not found in the data form..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.DuplicateCandidatesProcedureInvalidReturn">
<summary>
  Looks up a localized string similar to The duplicate search procedure had invalid return arguments..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.DuplicateSortField">
<summary>
  Looks up a localized string similar to A field has been specified more than once in the sort list.  Fields in the sort list must be unique..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ErrorLoadingSpec">
<summary>
  Looks up a localized string similar to Error loading spec &apos;{0}&apos;..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ExportDefinitionFieldAlterationNotAllowed">
<summary>
  Looks up a localized string similar to This export definition&apos;s fields are locked: no existing fields may be removed, and no fields may be added or changed..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ExportDefinitionFieldRemovalNotAllowed">
<summary>
  Looks up a localized string similar to This export definition&apos;s fields are locked: no existing fields may be removed or changed, though additional fields may be added to it..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ExportDefinitionIDNotFound">
<summary>
  Looks up a localized string similar to The specified export definition ID could not be found..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ExportDefinitionLoadNoRightsToQueryView">
<summary>
  Looks up a localized string similar to This export definition cannot be loaded because the current user does not have rights to one or more of the source query views..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ExportDefinitionNameInUse">
<summary>
  Looks up a localized string similar to The name you have specified is already being used by another export definition. Please enter a new name..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ExportDefinitionNameMissing">
<summary>
  Looks up a localized string similar to You must specify a name for this export definition..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ExportDefinitionNameNotSpecified">
<summary>
  Looks up a localized string similar to A name must be specified for the export definition..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ExportDefinitionNoRootNodeSpecified">
<summary>
  Looks up a localized string similar to An export definition must have at least one node specified for save..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ExportDefinitionNotSpecified">
<summary>
  Looks up a localized string similar to An export definition must be specified for save..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ExportDefinitionOnlyOneAddressProcessingNodeAllowed">
<summary>
  Looks up a localized string similar to Only one address processing node is allowed in a given export definition.  Please remove additional address processing nodes from this export definition..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ExportDefinitionPropertyChangesNotAllowed">
<summary>
  Looks up a localized string similar to This export definition&apos;s fields are locked: changes to its properties that would cause its output field names to change are not permitted..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ExportDefinitionQueryViewFieldNodeAliasNameTooLong">
<summary>
  Looks up a localized string similar to Export field {0} has an alias which is too long.  The maximum length for an alias name is {1}..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ExportDefinitionQueryViewNodeAliasNameTooLong">
<summary>
  Looks up a localized string similar to Export node {0} has an alias which is too long.  The maximum length for an alias name is {1}..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ExportDefinitionQueryViewNodeObjectNameMissing">
<summary>
  Looks up a localized string similar to You must specify a view name for all export definition query view nodes..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ExportDefinitionQueryViewNodeParentPathMissing">
<summary>
  Looks up a localized string similar to You must specify a valid parent path for all output fields..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ExportDefinitionRecordTypeNotSpecified">
<summary>
  Looks up a localized string similar to The record type must be specified for an export definition..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ExportDefinitionSaveFilterParenthesesMismatchForNode">
<summary>
  Looks up a localized string similar to The left and right parentheses count for the {0} export node&apos;s filter fields do not match..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ExportDefinitionSaveNoRightsToQueryView">
<summary>
  Looks up a localized string similar to This export definition cannot be saved because the current user does not have rights to one or more of the source query views..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ExportDefinitionUnableToShortenColumnName">
<summary>
  Looks up a localized string similar to Unable to shorten column name &quot;{0}&quot; to be under {1} characters: unable to find an unambiguous short name. There are too many other columns in this export definition which are similar to this column&apos;s name..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.FilterFieldColumnNameMissing">
<summary>
  Looks up a localized string similar to You must specify a column name for all filter fields..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.FilterFieldIDSetIDMissing">
<summary>
  Looks up a localized string similar to You must specify an ID for all selection filter fields..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.FilterFieldInvalidOperator">
<summary>
  Looks up a localized string similar to Invalid filter operator selected for field &apos;{0}&apos;..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.FilterFieldInvalidOutputField">
<summary>
  Looks up a localized string similar to Invalid filter output field specified for field &apos;{0}&apos;..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.FilterFieldInvalidValue">
<summary>
  Looks up a localized string similar to Invalid filter value specified for field &apos;{0}&apos;..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.FilterFieldObjectNameMissing">
<summary>
  Looks up a localized string similar to You must specify a view name for all filter fields..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.FilterFieldParentPathMissing">
<summary>
  Looks up a localized string similar to You must specify a valid parent path for all filter fields..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.FilterFieldQueryFieldMissing">
<summary>
  Looks up a localized string similar to No query field exists for filter field {0}.{1} with a parent path of &apos;{2}&apos;..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.FilterFieldTypeValueMismatch">
<summary>
  Looks up a localized string similar to The number of {0} filter types does not match the number of filter values for field &apos;{1}&apos;..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.FilterFieldValuesMax">
<summary>
  Looks up a localized string similar to You cannot specify more than {0} filter value{1} for &apos;{2}&apos;..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.FilterFieldValuesMin">
<summary>
  Looks up a localized string similar to You must specify at least {0} filter value{1} for &apos;{2}&apos;..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.FormFieldElementsMissing">
<summary>
  Looks up a localized string similar to You must specify a FormFields array with at least one element..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.FormFieldsMissing">
<summary>
  Looks up a localized string similar to You must specify a FormFields array..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.GeneralLoadError">
<summary>
  Looks up a localized string similar to A DataListLoadRequest attempted to load a ViewDataForm that resulted in the following error: {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.GetDuplicateCandidatesInvalidAppUser">
<summary>
  Looks up a localized string similar to You have not been granted rights to perform duplicate checking on this form..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.GlobalChangeInstanceIDMissing">
<summary>
  Looks up a localized string similar to You must specify a global change instance ID..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.GlobalChangeProcedureIDMissing">
<summary>
  Looks up a localized string similar to You must specify a global change procedure ID..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.GroupFiltersNotAllowed">
<summary>
  Looks up a localized string similar to Group filters can only be used when grouping is required for the output..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.HelpSearchException">
<summary>
  Looks up a localized string similar to The requested search could not be performed. {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.HelpSearchMissingSearchText">
<summary>
  Looks up a localized string similar to The search text was not specified..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.HTML401Error">
<summary>
  Looks up a localized string similar to 401 Not authorized.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.HTML404Error">
<summary>
  Looks up a localized string similar to 404 File not found.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.IDSetAggregateWithoutPrimaryKey">
<summary>
  Looks up a localized string similar to A selection can only be created for a query containing an aggregate when the query&apos;s primary key field is included in the output..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.IDSetDelete">
<summary>
  Looks up a localized string similar to Unable to delete selection. {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.IDSetWithoutPrimaryKey">
<summary>
  Looks up a localized string similar to A selection cannot be created using this query view because the query view has no primary key field specified..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.IDSetWithoutRecordType">
<summary>
  Looks up a localized string similar to A selection can only be created for a query with a defined type..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ImageHandlerDisableImageError">
<summary>
  Looks up a localized string similar to Error in DisableImage method in ImageHandler.ashx: {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ImageHandlerError">
<summary>
  Looks up a localized string similar to Error in ImageHandler.ashx: {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ImageHandlerResizeImageError">
<summary>
  Looks up a localized string similar to Error in ResizeImage method in ImageHandler.ashx: {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.InstalledProductCount">
<summary>
  Looks up a localized string similar to Unable to determine installed product count..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.InvalidAdHocQueryID">
<summary>
  Looks up a localized string similar to You must specify an ad-hoc query ID..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.InvalidAggregate">
<summary>
  Looks up a localized string similar to Aggregate type {0} not valid for field {1}..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.InvalidAppSearchListResult">
<summary>
  Looks up a localized string similar to AppSearchList returned invalid result (null Reader and null Command result)..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.InvalidBatchSettings">
<summary>
  Looks up a localized string similar to User batch settings could not be deserialized..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.InvalidContextRange">
<summary>
  Looks up a localized string similar to You must specify a number of records to return when requesting all Batch Context IDs..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.InvalidDefaultHomePageSettings">
<summary>
  Looks up a localized string similar to The default home page settings could not be deserialized..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.InvalidDefinition">
<summary>
  Looks up a localized string similar to You must specify a query definition..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.InvalidExpireDate">
<summary>
  Looks up a localized string similar to The expiration date specified for this optional component is invalid..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.InvalidExportDefinition">
<summary>
  Looks up a localized string similar to You must specify an export definition..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.InvalidExportDefinitionQueryViewField">
<summary>
  Looks up a localized string similar to Invalid export field.  The export field {0} could not be found in the query view {1}..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.InvalidExportDefinitionQueryViewNodeNumberToExportOneToManyLower">
<summary>
  Looks up a localized string similar to Invalid number to export.  The number to export must be greater than 0 for the {0} export node..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.InvalidExportDefinitionQueryViewNodeNumberToExportOneToManyUpper">
<summary>
  Looks up a localized string similar to Invalid number to export.  The number to export must be less than 99 for the {0} export node..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.InvalidExportDefinitionQueryViewNodeNumberToExportOneToOne">
<summary>
  Looks up a localized string similar to Invalid number to export.  The number to export should not be set for the {0} export node..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.InvalidExportDefinitionQueryViewNodeSortField">
<summary>
  Looks up a localized string similar to Invalid export sort field.  The export sort field {0} could not be found in the query view {1}..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.InvalidExtension">
<summary>
  Looks up a localized string similar to {0} is not a valid name for a catalog item..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.InvalidFileName">
<summary>
  Looks up a localized string similar to Invalid argument: CatalogBrowserHelper.GetCatalogItemXml expects an assemblyFileName with the extension included (.dll or .exe).  The supplied argument was {0}..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.InvalidJoinPath">
<summary>
  Looks up a localized string similar to The system cannot determine the join path based on the fields selected for this query..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.InvalidMapEntityID">
<summary>
  Looks up a localized string similar to You must specify a valid map entity ID..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.InvalidMapEntityName">
<summary>
  Looks up a localized string similar to You must specify a valid map entity name..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.InvalidNumberOfRecords">
<summary>
  Looks up a localized string similar to NumberOfRecords cannot be less than 0..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.InvalidOutputDefinition">
<summary>
  Looks up a localized string similar to Output definition cannot be deserialized..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.InvalidProductCombination_UnlockingDirectMarketingWithEnterprise">
<summary>
  Looks up a localized string similar to The Blackbaud Direct Marketing standalone application cannot be unlocked on an installation of Blackbaud Enterprise CRM, because these features are already included with Blackbaud Enterprise CRM..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.InvalidProductCombination_UnlockingEnterpriseWithDirectMarketing">
<summary>
  Looks up a localized string similar to The Blackbaud Enterprise CRM module cannot be unlocked on an installation of the Blackbaud Direct Marketing standalone application..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.InvalidQueryView">
<summary>
  Looks up a localized string similar to You must specify a valid query view..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.InvalidQueryViewField">
<summary>
  Looks up a localized string similar to The column specified has not been defined for the query object..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.InvalidQueryViewID">
<summary>
  Looks up a localized string similar to You must specify a valid query view ID..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.InvalidRange">
<summary>
  Looks up a localized string similar to You must specify a number greater than 0 when selecting a range of records from a batch..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.InvalidReaderResult">
<summary>
  Looks up a localized string similar to AppSimpleDataList returned invalid result (null Reader and null Command result)..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.InvalidRecordIDColumn">
<summary>
  Looks up a localized string similar to The RecordIDColumn specified ({0}) is not a valid column in the data list..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.InvalidRecordType">
<summary>
  Looks up a localized string similar to You must specify a valid record type..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.InvalidReportID">
<summary>
  Looks up a localized string similar to The specified report could not be located on the server.  Please check with your system administrator..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.InvalidRootQueryView">
<summary>
  Looks up a localized string similar to A valid root query view must be specified..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.InvalidSearchListID">
<summary>
  Looks up a localized string similar to You must specify a valid search list ID..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.InvalidSearchListIDOrName">
<summary>
  Looks up a localized string similar to You must specify a valid search list name or ID..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.InvalidSearchListName">
<summary>
  Looks up a localized string similar to You must specify a valid search list name..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.InvalidServerStateReply">
<summary>
  Looks up a localized string similar to Invalid server state: _reply reference is null in SearchListLoadProcessor..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.InvalidServerStateResults">
<summary>
  Looks up a localized string similar to Invalid server state: _rdr reference, _cmd reference, and _reply.Output.Rows reference is null in SearchListLoadProcessor..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.InvalidShellSettings">
<summary>
  Looks up a localized string similar to User shell settings could not be deserialized..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.InvalidSmartQueryInstanceID">
<summary>
  Looks up a localized string similar to You must specify a valid smart query instance ID..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.InvalidSmartQueryInstanceName">
<summary>
  Looks up a localized string similar to You must specify a smart query instance name..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.InvalidStartingSequence">
<summary>
  Looks up a localized string similar to StartingSequence cannot be less than 0..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.InvalidUserFavorites">
<summary>
  Looks up a localized string similar to User favorites could not be deserialized..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.InvalidUserHomePage">
<summary>
  Looks up a localized string similar to The user home page could not be deserialized..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.InvalidUserPageHistory">
<summary>
  Looks up a localized string similar to User page history could not be deserialized..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.InvokeServiceAssemblyNameMissing">
<summary>
  Looks up a localized string similar to You must define the assembly name that contains the AppInvokeServiceProcess class..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.InvokeServiceClassNameMissing">
<summary>
  Looks up a localized string similar to You must define the class name of the AppInvokeServiceProcess class..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.InvokeServiceError">
<summary>
  Looks up a localized string similar to An error occurred while invoking the AppInvokeServiceProcess class:  {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ItemNameMissing">
<summary>
  Looks up a localized string similar to No ItemName was supplied for the assembly catalog source {0}..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.KpiDashboardSaveNoRightsToKpiInstance">
<summary>
  Looks up a localized string similar to You do not have rights to one or more KPI instances for this dashboard..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.KpiGetMetaDataIDMissing">
<summary>
  Looks up a localized string similar to You must supply a valid KPI catalog ID..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.KpiGetMetaDataNoRightsToKpi">
<summary>
  Looks up a localized string similar to You do not have rights to view this KPI..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.KpiInstanceDeleteNoRightsToKpiInstance">
<summary>
  Looks up a localized string similar to You do not have rights to delete this KPI instance..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.KpiInstanceGetListByKpiCatalogIDNoRightsToKpi">
<summary>
  Looks up a localized string similar to You do not have rights to this KPI..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.KpiInstanceGetMetaDataNoRightsToKpiInstance">
<summary>
  Looks up a localized string similar to You do not have rights to view this KPI instance..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.KpiInstanceSaveCatalogIDMissing">
<summary>
  Looks up a localized string similar to You must specify a valid KPI catalog ID..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.KpiInstanceSaveInvalidSaveCatalogID">
<summary>
  Looks up a localized string similar to KPI spec with ID &apos;{0}&apos; does not exist..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.KpiInstanceSaveNameExists">
<summary>
  Looks up a localized string similar to A KPI instance with the name &apos;{0}&apos; already exists.  Please choose another name..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.KpiInstanceSaveNameMissing">
<summary>
  Looks up a localized string similar to Please specify a valid name..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.KpiInstanceSaveNegativeValue">
<summary>
  Looks up a localized string similar to KPI goal and target values must be non-negative values..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.KpiInstanceSaveNoRightsToKpi">
<summary>
  Looks up a localized string similar to You do not have rights to this KPI..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.KpiInstanceSaveNullInstance">
<summary>
  Looks up a localized string similar to You must specify a valid KPI instance..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.LoadAssembly">
<summary>
  Looks up a localized string similar to Unable to load assembly {0}. The assembly must be located in the bin folder of the web application directory.  {1}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.LoadBusinessProcess">
<summary>
  Looks up a localized string similar to Error loading business process id=&apos;{0}&apos; : {1}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.LoadCatalogItem">
<summary>
  Looks up a localized string similar to Unable to load catalog item..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.LoadConfigurationDataDefinition">
<summary>
  Looks up a localized string similar to Error loading configuration data definition id=&apos;{0}&apos; : {1}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.LoadConfigurationDataList">
<summary>
  Looks up a localized string similar to Error loading list of available configuration data definitions: {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.LoadConfigurationExportInstance">
<summary>
  Looks up a localized string similar to Error loading configuration data instance id=&apos;{0}&apos; : {1}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.LoadFile">
<summary>
  Looks up a localized string similar to Unable to read from file {0}. {1}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.LoadGlobalChangeDefinition">
<summary>
  Looks up a localized string similar to Error loading global change procedure id=&apos;{0}&apos; : {1}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.LoadGlobalChangeInstance">
<summary>
  Looks up a localized string similar to Error loading global change instance id=&apos;{0}&apos; : {1}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.LoadGlobalChangeList">
<summary>
  Looks up a localized string similar to Error loading list of available global changes: {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.LoadResource">
<summary>
  Looks up a localized string similar to Unable to load resource &apos;{0}&apos;. {1}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.LoadSmartFieldDefinition">
<summary>
  Looks up a localized string similar to Error loading smart field procedure id=&apos;{0}&apos; : {1}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.LoadSmartFieldInstance">
<summary>
  Looks up a localized string similar to Error loading smart field instance id=&apos;{0}&apos; : {1}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.LoadSmartFieldList">
<summary>
  Looks up a localized string similar to Error loading list of available smart fields: {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.LocateResource">
<summary>
  Looks up a localized string similar to Unable to locate resource &apos;{0}&apos; in assembly {1}..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.LockCodeNotInstalled">
<summary>
  Looks up a localized string similar to This optional component has not been installed..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.MapEntityCLRNotImplemented">
<summary>
  Looks up a localized string similar to CLR for map entity spec has not been implemented..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.MapEntityIDOrNameMissing">
<summary>
  Looks up a localized string similar to You must specify a map entity ID or name..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.MapEntityNoPermission">
<summary>
  Looks up a localized string similar to The current user does not have rights to use this map entity..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.MaximumColumnsExceeded">
<summary>
  Looks up a localized string similar to An export definition is limited to a total number of 1000 columns. This export definition contains a total of {0} columns. Please remove some columns or reduce the number of records to export for a given node in the export definition..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.MaxRecordsMax">
<summary>
  Looks up a localized string similar to MaxRecords cannot exceed {0}..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.MissingContextRecordID">
<summary>
  Looks up a localized string similar to You must specify a valid Context Record ID..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.MoreRowsMessageKeyMissing">
<summary>
  Looks up a localized string similar to MoreRowsRangeKey is required for DataListLoadMoreRequest..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.NGFAFHasBeenDeprecated">
<summary>
  Looks up a localized string similar to NGFAF has been deprecated..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.NonSysAdminTriedImpersonating">
<summary>
  Looks up a localized string similar to Access denied.  The user {0} is not a system administrator but tried to impersonate {1}..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.NoRSSFeedChannel">
<summary>
  Looks up a localized string similar to No RSS feed channel information specified for this data list..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.NoRSSFeedInformation">
<summary>
  Looks up a localized string similar to No RSS feed information specified..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.NoRSSFeedItem">
<summary>
  Looks up a localized string similar to No RSS feed item information specified..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.NoSelectFields">
<summary>
  Looks up a localized string similar to You must specify at least one output field..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.NoSmartQueryIDOrName">
<summary>
  Looks up a localized string similar to You must specify a smart query ID or name..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.Notification_RecordTypeIDOrNameMissing">
<summary>
  Looks up a localized string similar to You must specify a record type ID or name..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.Notification_RecordTypeNameMissing">
<summary>
  Looks up a localized string similar to You must specify a record type name..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.NotificationAppUserIDMissing">
<summary>
  Looks up a localized string similar to You must specify an application user id..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.NotificationRecordIDMissing">
<summary>
  Looks up a localized string similar to You must specify a record id..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.NotificationRecordTypeOrRecordTypeIDMissing">
<summary>
  Looks up a localized string similar to You must specify a record type name or record type id..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.NullCommand">
<summary>
  Looks up a localized string similar to A connection must be set for a command of type {0}..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.NullExportDefinitionQueryViewField">
<summary>
  Looks up a localized string similar to One or more export definition fields were not properly initialized..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.NullFilterField">
<summary>
  Looks up a localized string similar to One or more filter fields were not properly initialized..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.NullGroupFilterField">
<summary>
  Looks up a localized string similar to One or more group filter fields were not properly initialized..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.NullPageDefinition">
<summary>
  Looks up a localized string similar to PAGEDEFINITIONSPEC was null in the catalog..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.NullSelectField">
<summary>
  Looks up a localized string similar to One or more output fields were not properly initialized..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.NullSimpleDatalistDefinition">
<summary>
  Looks up a localized string similar to SIMPLEDATALISTSPECXML was null in the catalog..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.NullSortField">
<summary>
  Looks up a localized string similar to One or more sort fields were not properly initialized..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.OlapDataSourceConnectionInfo_DataSourceInformationNotFound">
<summary>
  Looks up a localized string similar to Data source information not found for datasource {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.OlapDataSourceImpersonatePasswordNull">
<summary>
  Looks up a localized string similar to The OLAPDATASOURCE named {0} with ID {1} is configured to use impersonation, but the stored password was null.  This is usually because the password could not be decrypted due to the database master key not being configured..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.OlapDataSourceNotFound">
<summary>
  Looks up a localized string similar to The OLAPDATASOURCE with ID {0} could not be found in the dbo.OLAPDATASOURCE table.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.OlapImpersonationScope_UnableToObtainImpersonationUser">
<summary>
  Looks up a localized string similar to Unable to obtain impersonation user name for olap source {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.OlapMartKeyNotFound">
<summary>
  Looks up a localized string similar to No OLAP data source found for the provided mart key..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.OlapRecordTypeNotSecured">
<summary>
  Looks up a localized string similar to Record security is not supported for the {0} record type. Please change the record type or set EnforceRecordAccessSecurity to false.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.OlapUnableToCopyIDSetFromDataMart">
<summary>
  Looks up a localized string similar to Unable to copy ID set from data mart. {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.OlapUnableToCopyIDSetToDataMart">
<summary>
  Looks up a localized string similar to Unable to copy ID set to data mart. {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.OlapUnableToReadUDMManifest">
<summary>
  Looks up a localized string similar to Unable to read the UDMManifestXML file from the database. {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.OnlySysAdminCanUseFeature">
<summary>
  Looks up a localized string similar to Only a system administrator can use this feature..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.OpenDeletedBatch">
<summary>
  Looks up a localized string similar to Only batches with a status of open or committed can be opened..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.PageDefinitionGetMetadataNoPermission">
<summary>
  Looks up a localized string similar to The current user does not have rights to load this page..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.PageIDMissing">
<summary>
  Looks up a localized string similar to You must specify a page ID..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.PageIDOrNameMissing">
<summary>
  Looks up a localized string similar to You must specify a page ID or name..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.PageIDsMissing">
<summary>
  Looks up a localized string similar to You must specify a list of Page IDs..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.PageNameMissing">
<summary>
  Looks up a localized string similar to You must specify a valid page name..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.PageNotFound">
<summary>
  Looks up a localized string similar to No page found with ID {0}..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ParameterSetIDMissing">
<summary>
  Looks up a localized string similar to You must specify a parameter set ID..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.PathParserViewNotFound">
<summary>
  Looks up a localized string similar to Query node for view alias &apos;{0}&apos; with a parent of &apos;{1}&apos; was not found. One or more source views may have been altered since this ad-hoc query was created..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.PleaseSelectAtLeastOneColumn">
<summary>
  Looks up a localized string similar to Please select at least one column..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.PostActionError">
<summary>
  Looks up a localized string similar to Error invoking the PostAction:  {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.PrimaryKeyNotFoundForIDSet">
<summary>
  Looks up a localized string similar to The primary key field &apos;{0}&apos; specified for this smart query does not appear in the output.  Selection was not saved..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ProcessNotCompleted">
<summary>
  Looks up a localized string similar to No exception reported but the process did not complete..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ProcessWorkflowError">
<summary>
  Looks up a localized string similar to Error processing workflow triggers:  {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ProductIs_InvalidHash">
<summary>
  Looks up a localized string similar to The installed product list is no longer valid.  Please contact Blackbaud support..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ProductListNotLoaded">
<summary>
  Looks up a localized string similar to The list of installed products and features has not been loaded..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ProductNotInstalled">
<summary>
  Looks up a localized string similar to This feature requires one or more optional components that have not been installed..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.QueryInstanceDeleteRecordOperation_AdHocPreventDeleteDependency">
<summary>
  Looks up a localized string similar to The ad-hoc query could not be deleted because there is one or more dependencies..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.QueryInstanceDeleteRecordOperation_SmartQueryPreventDeleteDependency">
<summary>
  Looks up a localized string similar to The Smart query was not deleted because it is currently in use..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.QueryViewFieldNoLookupInfo">
<summary>
  Looks up a localized string similar to &apos;{0}&apos; in object does not have look up values defined.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.QueryViewIDSet">
<summary>
  Looks up a localized string similar to Unable to retrieve selections from the database. {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.QueryViewInvalidLookupField">
<summary>
  Looks up a localized string similar to The column specified does not support lookup values..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.QueryViewInvalidPath">
<summary>
  Looks up a localized string similar to A valid view path must be specified..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.QueryViewLookupValuesColumnNameMissing">
<summary>
  Looks up a localized string similar to You must specify a column or parameter name..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.QueryViewNodeNotFound">
<summary>
  Looks up a localized string similar to Query node for view &apos;{0}&apos; with a parent of &apos;{1}&apos; was not found..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.QueryViewNoRights">
<summary>
  Looks up a localized string similar to The user {0} does not have permission to access the query view with ID {1}..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.QueryViewNotFound">
<summary>
  Looks up a localized string similar to Query view object does not have metadata defined in the database..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ReadFromCatalog">
<summary>
  Looks up a localized string similar to Unable to read catalog item {0} from {1}..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ReadFromFile">
<summary>
  Looks up a localized string similar to Unable to read catalog item from file {0}. {1}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ReadXmlFile">
<summary>
  Looks up a localized string similar to Unable to read from {0} (relative to the web server). {1}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.RecordIDColumnMissing">
<summary>
  Looks up a localized string similar to You must specify a RecordIDColumn when loading a view form with a data list..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.RecordOperationGetList">
<summary>
  Looks up a localized string similar to Record Operations could not be loaded..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.RecordOperationGetPromptFailed">
<summary>
  Looks up a localized string similar to Record operation prompt procedure could not be performed..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.RecordOperationIDOrNameMissing">
<summary>
  Looks up a localized string similar to You must specify a record operation name or ID..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.RecordOperationNameMissing">
<summary>
  Looks up a localized string similar to You must specify a valid record operation name..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.RecordOperationNoPermission">
<summary>
  Looks up a localized string similar to The current user does not have rights to perform this operation..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.RecordOperationNotFound">
<summary>
  Looks up a localized string similar to The record operation with ID &apos;{0}&apos; does not exist in the database..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.RecordOperationPerformDeferredResultKeyInUse">
<summary>
  Looks up a localized string similar to The record operation deferred result key is already in use..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.RecordOperationPerformFailed">
<summary>
  Looks up a localized string similar to Record operation could not be performed..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.RecordOperationPerformGetDeferredResultKeyMissing">
<summary>
  Looks up a localized string similar to The requested record operation deferred result key was not found. The session may have expired..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.RecordOperationPerformGetDeferredResultKeyRequired">
<summary>
  Looks up a localized string similar to A record operation deferred result key is required..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.RecordOperationPerformGetDeferredResultNoPermission">
<summary>
  Looks up a localized string similar to The current user does not have rights to access this record operation deferred result..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.RecordOperationRecordIDMissing">
<summary>
  Looks up a localized string similar to You must specify an ID on which to perform a record operation..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.RecordSecurityAccessDenied">
<summary>
  Looks up a localized string similar to The current user does not have rights to use this feature in the context of this specific record..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.RecordTypeMissing">
<summary>
  Looks up a localized string similar to You must specify a record type..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.RecordTypeNotValidated">
<summary>
  Looks up a localized string similar to Record type could not be validated..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ReportNameContaintsIllegalCharacters">
<summary>
  Looks up a localized string similar to The report name may not contain any of the following characters: ;?:@&amp;=+$,\*&lt;&gt;|&quot;&quot;/,.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ReportNoPermission">
<summary>
  Looks up a localized string similar to The current user does not have rights to use this report..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ReportsGenerateReportModelInvalidField">
<summary>
  Looks up a localized string similar to Query view {0} does not contain a the field {1}..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ReportsGenerateReportModelInvalidLinkColumn">
<summary>
  Looks up a localized string similar to Column {0} specified as the link column in the relationship between the views {1} and {2} does not exist in the {2} query view..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ReportsGenerateReportModelInvalidParentColumn">
<summary>
  Looks up a localized string similar to Column {0} specified as the parent column in the relationship between the views {1} and {2} does not exist in the {1} query view..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ReportsGenerateReportModelNonReportModelView">
<summary>
  Looks up a localized string similar to The query view {0} cannot be used to create a report model because its UseInReportModelGenerator property is set to &quot;false.&quot;.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ReportsGenerateReportModelRootNodeMissing">
<summary>
  Looks up a localized string similar to You must provide a valid root node..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ReportsPublishServerReportToCatalogExistingReportName">
<summary>
  Looks up a localized string similar to A report with the name &quot;{0}&quot; already exists in the catalog.  Please rename the report and try again..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ReportsPublishServerReportToCatalogNameMissing">
<summary>
  Looks up a localized string similar to You must provide a valid name..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ReportsPublishServerReportToCatalogProcessorInvalidReportPath">
<summary>
  Looks up a localized string similar to {0} is not a valid report path..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ReportsPublishServerReportToCatalogReportPathMissing">
<summary>
  Looks up a localized string similar to You must provide a valid report path..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ReportsSaveLinkedReportAlreadyExists">
<summary>
  Looks up a localized string similar to A linked report with this name already exists..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.RSSFeedCannotBuildFeed">
<summary>
  Looks up a localized string similar to Unable to build feed XML: {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.RSSFeedDataListAndQueryViewSpecified">
<summary>
  Looks up a localized string similar to Both a &quot;DataListID&quot; and &quot;QueryViewID&quot; were specified.  Only one of these may be specified..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.RSSFeedDateColumnInvalid">
<summary>
  Looks up a localized string similar to The date field specified, &quot;{0},&quot; is not of type date..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.RSSFeedInvalidBoolean">
<summary>
  Looks up a localized string similar to This feed has a boolean value that was not recognized. {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.RSSFeedInvalidContextID">
<summary>
  Looks up a localized string similar to The ContextID field specified, &quot;{0},&quot; does not exist for this data list..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.RSSFeedInvalidDate">
<summary>
  Looks up a localized string similar to Date fields must be formatted as yyyy-mm-ddThh:mm:ss.  The field value of &quot;{0}&quot; specified for &quot;{1}&quot; is not formatted correctly..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.RSSFeedInvalidDateColumn">
<summary>
  Looks up a localized string similar to Date column specified does not exist for this data list..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.RSSFeedInvalidDateTime">
<summary>
  Looks up a localized string similar to Could not convert the value &quot;{0}&quot; into a DateTime..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.RSSFeedInvalidGroupingField">
<summary>
  Looks up a localized string similar to The grouping field specified, &quot;{0},&quot; does not exist for this data list..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.RSSFeedInvalidIDColumn">
<summary>
  Looks up a localized string similar to Record ID column specified does not exist for this data list..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.RSSFeedInvalidOutputField">
<summary>
  Looks up a localized string similar to The field &quot;{0}&quot; was not found in the output field list..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.RSSFeedInvalidViewForm">
<summary>
  Looks up a localized string similar to Invalid &quot;ViewDataFormID&quot; specified.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.RSSFeedInvalidViewFormDetail">
<summary>
  Looks up a localized string similar to Invalid &quot;ViewDataFormID&quot; specified: {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.RSSFeedInvalidViewFormField">
<summary>
  Looks up a localized string similar to The field &quot;{0}&quot; was not found in the specified ViewDataForm.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.RSSFeedMissingContextID">
<summary>
  Looks up a localized string similar to A ViewDataFormID was specified for this feed but there is no ContextRecordID specified for this data list..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.RSSFeedMissingDataListAndQueryView">
<summary>
  Looks up a localized string similar to Neither a &quot;DataListID&quot; nor a &quot;QueryViewID&quot; was not specified..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.RSSFeedMissingDBName">
<summary>
  Looks up a localized string similar to The DBName parameter was not specified..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.RSSFeedNoAnonymous">
<summary>
  Looks up a localized string similar to Anonymous access is not allowed to the RSS service.  IIS should be configured to allow Basic or Integrated Windows authentication, and anonymous access should be disabled..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.RSSFeedNoContextElement">
<summary>
  Looks up a localized string similar to The ContextID element was specified for the RSS item but no Context element exists for this data list..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.RSSFeedNoIDColumn">
<summary>
  Looks up a localized string similar to ID column specified does not exist for this data list..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.RSSFeedNoResourceManager">
<summary>
  Looks up a localized string similar to A ResourceKey was specified but no valid resource file could be loaded..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.RSSGetFeedInvalidRenderer">
<summary>
  Looks up a localized string similar to The type &quot;{0}&quot; does not derive from &quot;{1}&quot;..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.RunAsDisabledInWebConfig">
<summary>
  Looks up a localized string similar to Access denied.  The user {0} is trying to impersonate {1} but the RunAsDisabled appsetting is set to &apos;true&apos; in web.config..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.RunAsUserOverSpecified">
<summary>
  Looks up a localized string similar to The RunAsUserName and RunAsUserID cannot both be specified on a single request..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SearchListGetList">
<summary>
  Looks up a localized string similar to Unable to load list of search lists..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SearchListIDOrNameMissing">
<summary>
  Looks up a localized string similar to You must specify a search list ID or name..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SearchListItemTranslate">
<summary>
  Looks up a localized string similar to Search list entry could not be translated..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SearchListLoad">
<summary>
  Looks up a localized string similar to Unable to process search request..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SearchListNoPermission">
<summary>
  Looks up a localized string similar to The current user does not have rights to use this search..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SearchListNotFound">
<summary>
  Looks up a localized string similar to SearchList definition for SearchList ID {0} could not be found..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SecurityGetRoleFeaturePermTreeSystemRoleRequired">
<summary>
  Looks up a localized string similar to SystemRoleID is required to get the SecurityGetRoleFeaturePermTreeReply..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SecurityTreeSystemRoleIDMissing">
<summary>
  Looks up a localized string similar to You must specify a valid system role ID..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SelectFieldAliasNameTooLong">
<summary>
  Looks up a localized string similar to Output field {0} has an alias which is too long.  The maximum length for an alias name is {1}..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SelectFieldColumnNameMissing">
<summary>
  Looks up a localized string similar to You must specify a column name for all output fields..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SelectFieldIDSetIDMissing">
<summary>
  Looks up a localized string similar to You must specify an ID for all selection output fields..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SelectFieldInvalidAggregate">
<summary>
  Looks up a localized string similar to The {0} aggregate function is not allowed on GUID, binary, or boolean fields..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SelectFieldInvalidAggregateNumeric">
<summary>
  Looks up a localized string similar to The Sum and Average aggregate functions are only allowed on integer, decimal, and money type fields..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SelectFieldObjectNameMissing">
<summary>
  Looks up a localized string similar to You must specify a view name for all output fields..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SelectFieldParentPathMissing">
<summary>
  Looks up a localized string similar to You must specify a valid parent path for all output fields..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SelectFieldQueryFieldMissing">
<summary>
  Looks up a localized string similar to No query field exists for output field {0}.{1} with a parent path of &apos;{2}&apos;..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SelectFieldsMustContainCurrencyField">
<summary>
  Looks up a localized string similar to The select fields must contain all referenced currency fields..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SendEmail_CategoryNotDefined">
<summary>
  Looks up a localized string similar to The specified category is not defined..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SendEmail_DateTimesMustBeInUTC">
<summary>
  Looks up a localized string similar to All dates and times must be in UTC format..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SendEmail_EmailContentField">
<summary>
  Looks up a localized string similar to Email content.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SendEmail_IncorrectUniqueFieldType">
<summary>
  Looks up a localized string similar to Unique field has incorrect dataType. Must be of type Guid..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SendEmail_InvalidMergeData">
<summary>
  Looks up a localized string similar to Merge data is empty. Either MergeSQLViewID or MergeDataSet must be populated..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SendEmail_ReceiptAddressField">
<summary>
  Looks up a localized string similar to Reply to address.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SendEmail_RequiredFieldsMissing">
<summary>
  Looks up a localized string similar to A required web request parameter is missing..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SendEmail_SentFromField">
<summary>
  Looks up a localized string similar to From address.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SendEmail_SourceNotDefined">
<summary>
  Looks up a localized string similar to The specified source is not defined..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SendEmail_StartDateField">
<summary>
  Looks up a localized string similar to Process date.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SendEmail_SubjectField">
<summary>
  Looks up a localized string similar to Subject.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SendEmail_UniqueFieldMissing">
<summary>
  Looks up a localized string similar to Unique field not found..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ShellFind_AppNameMissing">
<summary>
  Looks up a localized string similar to The &apos;appname&apos; querystring was not specified..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ShellFind_DBNameMissing">
<summary>
  Looks up a localized string similar to The &apos;dbname&apos; querystring was not specified..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ShellFind_InvalidSearchText">
<summary>
  Looks up a localized string similar to The search text specified did not contain any significant words..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ShellFind_MultipleContextElementsSpecified">
<summary>
  Looks up a localized string similar to The search text specified contained multiple context elements.  Only one set of words in quotes can be specified..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ShellFind_SearchTextMissing">
<summary>
  Looks up a localized string similar to The &apos;search&apos; querystring was not specified..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ShellUpdateUIWidgetDashboardWidgetsNoPersonalRights">
<summary>
  Looks up a localized string similar to You do not have rights to personalize UI widgets..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ShellUpdateUIWidgetDashboardWidgetsNoSystemRights">
<summary>
  Looks up a localized string similar to You do not have rights to update the system-wide settings for UI widgets..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.ShowInDesignerIDSetInUseByAdHocQuery">
<summary>
  Looks up a localized string similar to Ad-hoc query could not be updated. The &quot;Show in query designer&quot; option cannot be set to false because the selection associated with this ad-hoc query is in use by another ad-hoc query..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SimpleDataListIDOrNameMissing">
<summary>
  Looks up a localized string similar to You must specify a simple data list name or ID..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SimpleDataListLoad">
<summary>
  Looks up a localized string similar to Unable to load simple data list..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SimpleDataListNameMissing">
<summary>
  Looks up a localized string similar to You must specify a valid simple data list name..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SimpleDataListNotFound">
<summary>
  Looks up a localized string similar to Simple data list definition for ID &apos;{0}&apos; does not exist..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SimpleDataListTranslation">
<summary>
  Looks up a localized string similar to Simple data list entry could not be translated..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SimpleListNoPermission">
<summary>
  Looks up a localized string similar to The current user does not have rights to use this simple list..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SmartFieldInstanceIDMissing">
<summary>
  Looks up a localized string similar to You must specify a smart field instance ID..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SmartFieldProcedureIDMissing">
<summary>
  Looks up a localized string similar to You must specify a smart field procedure ID..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SmartQueryDefinitionNotFound">
<summary>
  Looks up a localized string similar to Smart query definition for ID {0} could not be found..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SmartQueryDeleteNoRightsToInstance">
<summary>
  Looks up a localized string similar to This smart query instance cannot be deleted because the current user does not have rights to the smart query..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SmartQueryFormFieldMissing">
<summary>
  Looks up a localized string similar to Not able to find a form field for the {0} parameter..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SmartQueryGetNoRightsToInstance">
<summary>
  Looks up a localized string similar to This smart query instance cannot be accessed because the current user does not have rights to the smart query instance..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SmartQueryIDMissing">
<summary>
  Looks up a localized string similar to You must specify a smart query ID..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SmartQueryIDRequiredForRefresh">
<summary>
  Looks up a localized string similar to SmartQueryInstanceID is required to refresh the static selection..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SmartQueryInstanceDelete">
<summary>
  Looks up a localized string similar to Smart query instance could not be deleted. {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SmartQueryInstanceDeleteIDSetInUseByAdHocQuery">
<summary>
  Looks up a localized string similar to Smart query could not be deleted. The selection associated with this smart query cannot be deleted because it is in use by an ad-hoc query..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SmartQueryInstanceDeleteIDSetInUseByExportDefinition">
<summary>
  Looks up a localized string similar to Smart query could not be deleted. The selection associated with this smart query cannot be deleted because it is in use by an export definition..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SmartQueryInstanceDeleteKeyViolation">
<summary>
  Looks up a localized string similar to Smart query instance could not be deleted. This smart query instance or a selection created from this smart query instance may be in use..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SmartQueryInstanceIDSetInUse">
<summary>
  Looks up a localized string similar to Smart query instance could not be updated. The selection associated with this smart query instance cannot be deleted because it is in use..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SmartQueryInstanceIDSetInUseByAdHocQuery">
<summary>
  Looks up a localized string similar to Smart query instance could not be updated. The selection associated with this smart query instance cannot be deleted because it is in use by an ad-hoc query..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SmartQueryInstanceIDSetInUseByExportDefinition">
<summary>
  Looks up a localized string similar to Smart query instance could not be updated. The selection associated with this smart query instance cannot be deleted because it is in use by an export definition..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SmartQueryInstanceMissing">
<summary>
  Looks up a localized string similar to You must specify a smart query instance..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SmartQueryInstanceNameMissing">
<summary>
  Looks up a localized string similar to You must specify a name for the smart query instance..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SmartQueryInstanceNotFound">
<summary>
  Looks up a localized string similar to Smart query instance for ID {0} could not be found..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SmartQueryInstanceSave">
<summary>
  Looks up a localized string similar to Error occurred while saving smart query instance. {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SmartQueryInstanceSaveIDSetNonGuidPrimaryKey">
<summary>
  Looks up a localized string similar to The smart query definition for this query instance does not include a system record ID as the primary key. To create a selection from this instance, you must first update the primary key field in the smart query definition under Administration, Application, Shell design. System record IDs appear in the list of primary key options when you include them as output fields in the ad-hoc query you use to create the definition. Note, for a constituent view smart query, include the &quot;Constituent record&quot; field. For a [rest of string was truncated]&quot;;.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SmartQueryInstanceSaveIDSetNoPrimaryKey">
<summary>
  Looks up a localized string similar to A selection cannot be created for this smart query because it has no primary key field defined..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SmartQueryLoadDeferredResultKeyInUse">
<summary>
  Looks up a localized string similar to The smart query deferred result key is already in use..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SmartQueryLoadGetDeferredResultKeyMissing">
<summary>
  Looks up a localized string similar to The requested smart query deferred result key was not found. The session may have expired..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SmartQueryLoadGetDeferredResultKeyRequired">
<summary>
  Looks up a localized string similar to A smart query deferred result key is required..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SmartQueryLoadGetDeferredResultNoPermission">
<summary>
  Looks up a localized string similar to The current user does not have rights to access this smart query deferred result..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SmartQueryNoPermission">
<summary>
  Looks up a localized string similar to You do not have access to this smart query..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SmartQueryNotGrantedInstance">
<summary>
  Looks up a localized string similar to The results of this smart query instance cannot be viewed because the current user does not have rights to the smart query instance..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SmartQueryProcessInvalidTaskSecurityContext">
<summary>
  Looks up a localized string similar to This smart query instance cannot be processed because it is not referenced by the task in context..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SmartQueryProcessNotGrantedTask">
<summary>
  Looks up a localized string similar to This smart query instance cannot be processed because the current user has not been granted the task in context..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SmartQuerySaveIDSetInDataMart">
<summary>
  Looks up a localized string similar to Unable to create static selection in data mart {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SortFieldFieldNameAndAliasNameMissing">
<summary>
  Looks up a localized string similar to You must specify a field name or alias name for all sort fields..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SortFieldWithoutSelectField">
<summary>
  Looks up a localized string similar to You can only sort by fields that exist in the output fields list..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SourceFileNotFound">
<summary>
  Looks up a localized string similar to The file {0} does not exist in the catalog directory on the server ({1})..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SourceInfoMissing">
<summary>
  Looks up a localized string similar to No SourceInfo was supplied..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SourceInfoNameMissing">
<summary>
  Looks up a localized string similar to The SourceInfo name was not supplied..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SourceNameMissing">
<summary>
  Looks up a localized string similar to You must specify a location from which to load this resource..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SpecificDateFilterValueMissing">
<summary>
  Looks up a localized string similar to You must provide a value for a specific date..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.StartRowIndexGreaterThanTotalRows">
<summary>
  Looks up a localized string similar to Invalid StartRowIndex specified.  There are only {0} rows..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.StartRowIndexLessThanEqualToZero">
<summary>
  Looks up a localized string similar to StartRowIndex must be greater than zero..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.StartRowIndexLessThanZero">
<summary>
  Looks up a localized string similar to StartRowIndex must be greater than or equal to zero..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.StateNotFound">
<summary>
  Looks up a localized string similar to No state exists with the given description and the given country..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.StaticIDSetCalculateRows">
<summary>
  Looks up a localized string similar to Unable to calculate number of rows in static selection table. {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.StaticIDSetCreateTable">
<summary>
  Looks up a localized string similar to Unable to create static selection table. {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.StaticIDSetCreateTableInDataMart">
<summary>
  Looks up a localized string similar to Unable to create static selection table in data mart {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.StaticIDSetSave">
<summary>
  Looks up a localized string similar to Unable to save keys to static selection table. {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SyncRoleInvalidRoleID">
<summary>
  Looks up a localized string similar to Invalid role id specified..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SystemRoleAddWebLocalUser_NameRequired">
<summary>
  Looks up a localized string similar to The LocalUserName is required for the SystemRoleAddWebLocalUser request..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SystemRoleAddWebLocalUser_PermissionDenied">
<summary>
  Looks up a localized string similar to The current user does not have permission to add users to a role..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.SystemRoleAddWebLocalUser_SystemRoleIDRequired">
<summary>
  Looks up a localized string similar to The SystemRoleID is required for the SystemRoleAddWebLocalUser request..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.TableEntryDelete">
<summary>
  Looks up a localized string similar to Unable to delete code table entry &apos;{0}&apos; because it is in use..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.TableEntryIDMissing">
<summary>
  Looks up a localized string similar to Table Entry ID is required..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.TableEntryLength">
<summary>
  Looks up a localized string similar to A table entry description length must be between 1 and 100 characters..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.TableEntryNotFound">
<summary>
  Looks up a localized string similar to No table entry exists with the given ID..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.TableKeyMissing">
<summary>
  Looks up a localized string similar to You must specify a table key for the output table..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.TaskStatusInfoLoad">
<summary>
  Looks up a localized string similar to Unable to load task status info from the database..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.TimeoutError">
<summary>
  Looks up a localized string similar to The operation has timed out..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.UIWidgetNotFound">
<summary>
  Looks up a localized string similar to You must specify a valid UIWidget ID..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.UnableToCopyIDSetToDatamart">
<summary>
  Looks up a localized string similar to Unable to copy static ID set to the data mart.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.UnableToTranslateADGroup">
<summary>
  Looks up a localized string similar to Unable to translate the group {0} to a SID.  The error was: {1}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.UnlockCodeAlreadyInstalled">
<summary>
  Looks up a localized string similar to This optional component has already been installed..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.UnlockCodeInvalid">
<summary>
  Looks up a localized string similar to Invalid activation code specified..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.UnlockModule">
<summary>
  Looks up a localized string similar to Unable to unlock module..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.UnrecognizedFormFieldDataTypeForDatabaseTypeName">
<summary>
  Looks up a localized string similar to Unrecognized FormFieldDataType for database type name &apos;{0}&apos;..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.UpdateProductsList">
<summary>
  Looks up a localized string similar to Unable to update products list..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.UserBatchTemplateSettingsGetFailed">
<summary>
  Looks up a localized string similar to The user settings could not be loaded from the database.  {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.UserBatchTemplateSettingsUpdateFailed">
<summary>
  Looks up a localized string similar to The user settings could not be saved.  {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.UserDataFormSettingsGetInvalidParameters">
<summary>
  Looks up a localized string similar to The user settings parameters could not be loaded from the database.  {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.UserDataFormSettingsUpdateFailed">
<summary>
  Looks up a localized string similar to The user settings could not be saved.  {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.UserDataListSettingsGetInvalidParameters">
<summary>
  Looks up a localized string similar to The user settings parameters could not be loaded from the database.  {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.UserFavoritesLoad">
<summary>
  Looks up a localized string similar to User favorites could not be loaded from the database..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.UserFavoritesSave">
<summary>
  Looks up a localized string similar to User favorites could not be saved..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.UserListBuilderSettingsGetFailed">
<summary>
  Looks up a localized string similar to The user settings could not be loaded from the database.  {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.UserListBuilderSettingsUpdateFailed">
<summary>
  Looks up a localized string similar to The user settings could not be saved.  {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.UserPageHistoryLoad">
<summary>
  Looks up a localized string similar to User page history could not be loaded from the database..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.UserPageHistorySave">
<summary>
  Looks up a localized string similar to Page history could not be saved..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.UserPageSettingsGetTabSettingsInvalidSettings">
<summary>
  Looks up a localized string similar to The user&apos;s page settings could not be loaded from the database. {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.UserPageSettingsUpdateTabSettingsFailed">
<summary>
  Looks up a localized string similar to The user&apos;s page settings could not be saved. {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.UserPasswordResetDatabaseMailNotConfigured">
<summary>
  Looks up a localized string similar to The reset password email was not sent because email has not been configured..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.UserPasswordResetDoesNotMeetPolicyRequirements">
<summary>
  Looks up a localized string similar to The password entered does not meet the requirements for password security. Try making the password longer and include a mix of upper and lower case characters as well as special characters such as @ or ! and avoid previously used passwords. If the password is correct and you continue to get this error, please contact support..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.UserPasswordResetEmailNotAssociatedWithUser">
<summary>
  Looks up a localized string similar to The email address is not associated with a user..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.UserPasswordResetNoCorrespondingOrgUnit">
<summary>
  Looks up a localized string similar to The user is not associated with a valid organizational unit..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.UserPasswordResetNoOrgUnitsExist">
<summary>
  Looks up a localized string similar to No organizational units exist in the database..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.UserPasswordResetNotEnabled">
<summary>
  Looks up a localized string similar to Self-service password reset is not enabled for this database..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.UserPasswordResetOtherException">
<summary>
  Looks up a localized string similar to The reset password email was not sent for an unknown reason..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.UserPasswordResetUserLinkedToIdentityClaim">
<summary>
  Looks up a localized string similar to The email address is associated with a user that has already been linked to a claim identity..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.UserSearchListPersistentFieldsGetFailed">
<summary>
  Looks up a localized string similar to The user settings persistent fields could not be loaded from the database.  {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.UserSearchListSettingsGetFailed">
<summary>
  Looks up a localized string similar to The user settings could not be loaded from the database.  {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.UserSearchListSettingsUpdateFailed">
<summary>
  Looks up a localized string similar to The user settings could not be saved.  {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.UserSearchListTaskHistoryInvalidParameters">
<summary>
  Looks up a localized string similar to The user settings parameters could not be loaded from the database.  {0}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.WorkflowArgsMapDeserializationFailed">
<summary>
  Looks up a localized string similar to The workflow trigger arguments map could not be deserialized..
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.WorkflowTriggerError">
<summary>
  Looks up a localized string similar to Error triggering workflow {0}:  {1}.
</summary>
</member>
<member name="P:Blackbaud.AppFx.Server.My.Resources.NamedExceptions.YouNotHavePermissionForFeature">
<summary>
  Looks up a localized string similar to You have not been granted the required permissions to use this feature..
</summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ClickOnceRedirectHandler">
 <summary>
 This handler handles deprecating the ClickOnce Blackbaud.AppFx.Browser.exe application. If it's been set up correctly in the web.config, it will redirect 
 any attempts to access the ClickOnce application to an embedded error page. This page will instruct the user to use web shell or contact their system administrator.
 
 We are currently offering an "escape hatch" via a special web.config key. If this key is present, we will stream the Blackbaud.AppFx.Browser.application binary 
 to the client in the HTTP response. This is unsupported and will go away one day. 
 </summary>
 <remarks></remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.ashx.BusinessProcessInvokeHandler">
 <summary>
 Implements an HTTP endpoint for starting a business process.
 </summary>
 <remarks>This is the standard business process BusinessProcessInvoke.ashx hanlder.
 Additional .ashx endpoints can be created with HTTPHandlers that inherit from this class and use the overrides to support custom business process ID and parameter set ID.</remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.ashx.ImageHandler.BuildImageURL(System.String,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Creates a URL that can be used to download images from the server.  This includes images defined in the browser.
 </summary>
 <remarks>Used primarily for some some of our dynamic html pages</remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.ashx.HeartbeatManagerHandler">
 <summary>
 Implements an HTTP endpoint for starting and stopping the heart beat manager.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AuthenticatedUserType.Unknown">
 <summary>
 The user was authenticated via an unknown authentication type
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AuthenticatedUserType.None">
 <summary>
 The user was not authenticated
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AuthenticatedUserType.WindowsUser">
 <summary>
 The user was authenticated using IIS Windows authentication
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AuthenticatedUserType.BlackbaudCustomBasicUser">
 <summary>
 The user was authenticated using Blackbaud's custom authentication module
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AuthenticatedUserType.WSFederationUser">
 <summary>
 The user was authenticated via the WS-Federation federated authentication protocol
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AuthenticatedUserType.JWTUser">
 <summary>
 The user was authenticated via a JSON Web Token
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AuthenticatedUserType.FederatedCredentialsUser">
 <summary>
 The user was authenticated via credentials that were validated against a federated authentication provider by the server
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AuthenticatedUserType.CoSign">
 <summary>
 The user was authenticated via the CoSign Single Sign-On protocol
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ClaimsAuthentication.BlackbaudAuthService.RunAsyncTask``1(System.String,System.Func{System.Threading.Tasks.Task{``0}},System.Text.StringBuilder)">
 <summary>
 The Blackbaud.ApplicationUserMapping.DataService NuGet package wants to be used by Async/Await code. Infinity is not written in an Async/Await 
 manner. This function wraps up running the appropriate task (in a blocking manner) and doing appropriate error handling so it will not have 
 to be repeated every time we call a new task. 
 </summary>
 <param name="taskName">The name of the task, used for logging purposes</param>
 <param name="taskCreator">A function which will create a ServiceClient task that does not return a value</param>
 <param name="logMessage">The current log; additional messages will be appended to this StringBuilder</param>
 <returns>The result of the call. This result will indicate success or failure and will contain the response from the service.</returns>
 <remarks>Exceptions are not thrown but they will be logged. This function currently assumes that the only thing to do in the face of errors is carry on.</remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.ClaimsAuthentication.BlackbaudAuthService.RunAsyncTaskForResult``1(System.String,System.Func{System.Threading.Tasks.Task{Blackbaud.Core.WebService.Contracts.ObjectResponse{``0}}},System.Text.StringBuilder)">
 <summary>
 The Blackbaud.ApplicationUserMapping.DataService NuGet package wants to be used by Async/Await code. Infinity is not written in an Async/Await 
 manner. This function wraps up running the appropriate task (in a blocking manner) and doing appropriate error handling so it will not have 
 to be repeated every time we call a new task. 
 </summary>
 <param name="taskName">The name of the task, used for logging purposes</param>
 <param name="taskCreator">A function which will create a ServiceClient task that returns a value of type T</param>
 <param name="logMessage">The current log; additional messages will be appended to this StringBuilder</param>
 <returns>The result of the call. This result will indicate success or failure and will contain the response and the result of type T from the service.</returns>
 <remarks>Exceptions are not thrown but they will be logged. This function currently assumes that the only thing to do in the face of errors is carry on.</remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.ClaimsAuthentication.BlackbaudAuthService.RegisterApplicationUser(Blackbaud.AppFx.Server.RequestContext,System.Guid,System.String)">
 <summary>
 Registers an application user with the Blackbaud Authentication Application User Mapping Service for this installation of the Infinity product.
 </summary>
 <param name="requestContext">The RequestContext for the current AppFx request.</param>
 <param name="userId">The ID of the APPUSER row for the user to be registered.</param>
 <param name="nameIdentifier">The Blackbaud Authentication Service identifier for the user to be registered.</param>
</member>
<member name="M:Blackbaud.AppFx.Server.ClaimsAuthentication.BlackbaudAuthService.UnregisterApplicationUser(Blackbaud.AppFx.Server.RequestContext,System.Guid,System.String)">
 <summary>
 Unregisters an application user with the Blackbaud Authentication Application User Mapping Service for this installation of the Infinity product.
 </summary>
 <param name="requestContext">The RequestContext for the current AppFx request.</param>
 <param name="userId">The ID of the APPUSER row for the user to be unregistered.</param>
 <param name="nameIdentifier">The Blackbaud Authentication Service identifier for the user to be unregistered.</param>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.ClaimsAuthentication.BlackbaudAuthService.UnregisterApplicationUserInternal(Blackbaud.AppFx.Server.RequestContext,System.Guid,System.String,System.Text.StringBuilder)">
 <summary>
 Unregisters an application user with the Blackbaud Authentication Application User Mapping Service for this installation of the Infinity product.
 </summary>
 <param name="requestContext">The RequestContext for the current AppFx request.</param>
 <param name="userId">The ID of the APPUSER row for the user to be unregistered.</param>
 <param name="nameIdentifier">The Blackbaud Authentication Service identifier for the user to be unregistered.</param>
 <param name="logMessage">The current log; additional messages will be appended to this StringBuilder.</param>
</member>
<member name="P:Blackbaud.AppFx.Server.ClaimsAuthentication.BlackbaudAuthService.TenantProductId(Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 The ProductId used to identify this Infinity installation in the Blackbaud Authentication Service ecosystem. 
 </summary>
 <param name="requestContext">The AppFx RequestContext for the current request.</param>
</member>
<member name="P:Blackbaud.AppFx.Server.ClaimsAuthentication.BlackbaudAuthService.TenantProductId(System.Web.HttpContext,System.String)">
 <summary>
 The ProductId used to identify this Infinity installation in the Blackbaud Authentication Service ecosystem. 
 </summary>
 <param name="httpContext">The HttpContext for the current request.</param>
 <param name="databaseName">The database name, as configured in the web.config, for this installation.</param>
</member>
<member name="P:Blackbaud.AppFx.Server.ClaimsAuthentication.BlackbaudAuthService.TenantId(Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 The TenantId used to identify this Infinity installation in the Blackbaud Authentication Service ecosystem. 
 </summary>
 <value>The TenantId for this database. If the TenantId was unavailable, this returned Nullable will not have a value.</value>
 <param name="requestContext">The AppFx RequestContext for the current request.</param>
</member>
<member name="P:Blackbaud.AppFx.Server.ClaimsAuthentication.BlackbaudAuthService.TenantId(System.Web.HttpContext,System.String)">
 <summary>
 The TenantId used to identify this Infinity installation in the Blackbaud Authentication Service ecosystem. 
 </summary>
 <value>The TenantId for this database. If the TenantId was unavailable, this returned Nullable will not have a value.</value>
 <param name="httpContext">The HttpContext for the current request.</param>
 <param name="databaseName">The database name, as configured in the web.config, for this installation.</param>
</member>
<member name="P:Blackbaud.AppFx.Server.ClaimsAuthentication.BlackbaudAuthService.TenantUri(Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 The unique Uri that identifies this Infinity installation in the Blackbaud Authentication Service ecosystem.
 </summary>
 <param name="requestContext">The AppFx RequestContext for the current request.</param>
 <remarks>May return null if the system has not been correctly configured with its Application Root URL.</remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.ClaimsAuthentication.ClaimsProvider">
 <summary>
 Provides access to a user's claims if they are authenticated as a System.Security.Claims.ClaimsIdentity.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ClaimsAuthentication.ClaimsProvider.GetNameIdentifier(System.Web.HttpContext)">
 <summary>
 Returns the NameIdentifier claim from the given HttpContext.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ClaimsAuthentication.ClaimsProvider.GetNameIdentifier(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})">
 <summary>
 Returns the NameIdentifier claim from the given claims collection.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ClaimsAuthentication.ClaimsProvider.GetEmail(System.Web.HttpContext)">
 <summary>
 Returns the Email address claim from the given HttpContext.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ClaimsAuthentication.ClaimsProvider.GetEmail(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})">
 <summary>
 Returns the Email address claim from the given claims collection.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ClaimsAuthentication.ClaimsProvider.GetName(System.Web.HttpContext)">
 <summary>
 Returns the Name claim from the given HttpContext.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ClaimsAuthentication.ClaimsProvider.GetName(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})">
 <summary>
 Returns the Name claim from the given claims collection.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ClaimsAuthentication.ClaimsProvider.IsRequestClaimsAuthenticated(System.Web.HttpContext)">
 <summary>
 Returns whether the current request is authenticated by an expected ClaimsIdentity.
 </summary>        
</member>
<member name="M:Blackbaud.AppFx.Server.ClaimsAuthentication.ClaimsProvider.GetLoginInfo(Blackbaud.AppFx.Server.RequestContext,System.Data.SqlClient.SqlConnection,System.Boolean,System.Guid@,System.String@,System.Boolean@,System.String@,System.String@)">
 <summary>
 Returns login information about the current user based on the claims associated with the user.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ClaimsAuthentication.ClaimsProvider.GetClaims(System.Security.Principal.IIdentity)">
 <summary>
 Returns an IEnumerable of Claims associated with the identity.
 </summary>        
</member>
<member name="M:Blackbaud.AppFx.Server.ClaimsAuthentication.ClaimsProvider.GetClaim(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String)">
 <summary>
 Returns the value for a particular claim type.
 If no claim is found with this type, then Nothing is retured.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ClaimsAuthentication.ClaimsProvider.ClaimTypes">
 <summary>
 Well-known claim types.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ClaimsAuthentication.WSFederationSettings">
 <summary>
 Provides configuration information for WSFederation.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.ClaimsAuthentication.WSFederationSettings.CertificateThumbprints">
 <summary>
 Returns an IEnumberable of thumbprint strings for certificates that the issuer may use to sign claims.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.ClaimsAuthentication.WSFederationSettings.Issuer">
 <summary>
 Url of the WS Federation issuer.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.ClaimsAuthentication.WSFederationSettings.SignInQueryString">
 <summary>
 Returns the Sign in context to be provided to WS Federation.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.ClaimsAuthentication.WSFederationSettings.RequireHttps">
 <summary>
 Indicates whether the application must be accessed via SSL when using claims authentication.
 Default is True.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.ClaimsAuthentication.WSFederationSettings.AppLookupServiceUrl">
 <summary>
 Returns a custom URL for the App Lookup Service, if available
 </summary>
 <remarks>May be null if the settings are not provided in the WSFederation.config file</remarks>
</member>
<member name="P:Blackbaud.AppFx.Server.ClaimsAuthentication.WSFederationSettings.ApplicationUserMappingServiceClientSettings">
 <summary>
 Provides the client settings for the Application User Mapping service, if available
 </summary>
 <remarks>May be null if the settings are not provided in the WSFederation.config file</remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.ClaimsAuthentication.WSFederationSettings.LoadFromFile(System.String)">
 <summary>
 Parses an XML file to load settings.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ClaimsAuthentication.WSFederation">
 <summary>
 Helper class for configuring WSFederation - a Microsoft implementation of Claims Authentication that is first class in .Net.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.ClaimsAuthentication.WSFederation.IsWSFederationAuthenticationModuleRegistered">
 <summary>
 Returns whether the WS federation authentication module is registered
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.ClaimsAuthentication.WSFederation.WSFederationStatus(System.Web.HttpContext,System.String)">
 <summary>
 Returns the information about WSFederation and how it relates to the current request
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ClaimsAuthentication.WSFederation.ConfigureApplicationForWSFederation">
 <summary>
 Configures WS Federation.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ClaimsAuthentication.WSFederation.GetSettings">
 <summary>
 Returns the current WSFederationSettings.
 If no settings file exists, then Nothing is returned.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ClaimsAuthentication.WSFederation.OnServiceConfigurationCreated(System.Object,System.IdentityModel.Services.Configuration.FederationConfigurationCreatedEventArgs)">
 <summary>
 Handles the FederationConfigurationCreated event of System.IdentityModel.Services.FederatedAuthentication.
 Used to update the WSFederation module settings from our custom WSFederationSettings class.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ClaimsAuthentication.WSFederation.WSFederationAuthenticationModule_RedirectingToIdentityProvider(System.Object,System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs)">
 <summary>
 Handles the RedirectingToIdentityProvider event of the WSFederationAuthenticationModule.
 Used to update the SignInRequestMessage before it is sent to the issuer.
 </summary>        
</member>
<member name="M:Blackbaud.AppFx.Server.ClaimsAuthentication.WSFederation.WSFederationAuthenticationModule_SigningOut(System.Object,System.IdentityModel.Services.SigningOutEventArgs)">
 <summary>
 Handles the SigningOut event of the WSFederationAuthenticationModule.
 Used to clear out the cached session information.
 </summary>        
</member>
<member name="M:Blackbaud.AppFx.Server.ClaimsAuthentication.WSFederation.IdentityModelServicesAssemblyFound">
 <summary>
 Determines if the System.IdentityModel.Services assembly is present. This should be in .NET version 4.5+
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.AppAddDataForm.CreateDataFormException(System.String,System.String)">
 <summary>
 Creates a standard <see cref="T:Blackbaud.AppFx.Server.ServiceException"/> for a data form exception that includes information about the invalid field
 </summary>
 <param name="errorMsg">The error message that will be displayed to the client</param>
 <param name="fieldID">The ID of the invalid field.  This should be the FieldID specified in the form metadata.</param>
 <remarks>The invalid field reason will default to <see cref="F:Blackbaud.AppFx.Server.DataFormInvalidFieldReason.CustomException"/></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.AppAddDataForm.CreateDataFormException(Blackbaud.AppFx.Server.DataFormInvalidFieldReason,System.String,System.String)">
 <summary>
 Creates a standard <see cref="T:Blackbaud.AppFx.Server.ServiceException"/> for a data form exception that includes information about the invalid field
 </summary>
 <param name="reason">The reason for the exception</param>
 <param name="errorMsg">The error message that will be displayed to the client</param>
 <param name="fieldID">The ID of the invalid field.  This should be the FieldID specified in the form metadata.</param>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.AppAddDataForm.CreateDataFormException(Blackbaud.AppFx.Server.DataFormInvalidFieldReason,System.String,System.String,System.Exception)">
 <summary>
 Creates a standard <see cref="T:Blackbaud.AppFx.Server.ServiceException"/> for a data form exception that includes information about the invalid field
 </summary>
 <param name="reason">The reason for the exception</param>
 <param name="errorMsg">The error message that will be displayed to the client</param>
 <param name="fieldID">The ID of the invalid field.  This should be the FieldID specified in the form metadata.</param>
 <param name="innerException">An exception that is the cause of the current exception</param>
</member>
<member name="T:Blackbaud.AppFx.Server.AppCatalog.AppAddDataFormContext">
 <summary>
 Provides arguments for an implementation of <see cref="M:Blackbaud.AppFx.Server.AppCatalog.AppAddDataForm.Save"></see> 
 </summary>
 <remarks>This class allows the <see cref="M:Blackbaud.AppFx.Server.AppCatalog.AppAddDataForm.Save"></see> method to support future argument extensibility </remarks>
</member>
<member name="P:Blackbaud.AppFx.Server.AppCatalog.AppBusinessProcess.MinFeedbackIntervalSeconds">
 <summary>
 The configured minimum number of seconds that should elapse before UpdateProcessStatus should be called in a looping operation
 </summary>
 <value></value>
 <returns>The number of secondss that should elapse before calling UpdateProcessStatus to provide row-by-row feedback.</returns>
 <remarks>In a loop oriented processs where each iteration of the loop may be very fast it does not make sense to update the status for every iteration.  This value is used to allow a configured minimum time to elapse before bothering to update the status.</remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.AppBusinessProcess.MinFeedbackIntervalHasElapsed">
 <summary>
 Used to determine if a loop based operation should bother to call UpdateProcessStatus at this time.
 </summary>
 <returns>True is the MinFeedbackIntervalSeconds has elapsed since the last time UpdateProcessStatus was called.</returns>
 <remarks>In a loop oriented processs where each iteration of the loop may be very fast it does not make sense to update the status for every iteration.  
 This value is used to allow a configured minimum time to elapse before bothering to update the status.
 Call this function and if it returns true go ahead and call UpdateProcessStatus, otherwise wait for the next iteration of the loop to check again.
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.AppBusinessProcess.StartBusinessProcess">
 <summary>
 Method used to start a business process
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.AppBusinessProcess.Validate">
 <summary>
 Recommended routine to do standard valiation of parameters
 </summary>
 <remarks>Throw an error in this routine if the current parameters for this process are not valid</remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.AppBusinessProcess.ProcessCompleted(Blackbaud.AppFx.Server.AppCatalog.AppBusinessProcessResult)">
 <summary>
 Sets the STATUSCODE field on the BUSINESSPROCESSSTATUS table to 'Completed'.
 </summary>
 <remarks>You must first call the CreateProcessStatus routine before you can call the ProcessCompleted routine.</remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.AppBusinessProcess.CreateTempTable(System.String@,System.Collections.Generic.IList{Blackbaud.AppFx.Server.AppCatalog.TableColumn},System.Data.SqlClient.SqlConnection)">
 <summary>
 Creates a temporary table in the application database.
 </summary>
 <param name="tableName">A ByRef parameters that designates the name of the temporary table.</param>
 <param name="columns">List of columns that make up the table.</param>
 <remarks>If the # identifier is not in the tableName variable the table will be created as a global table using the ## identifier.</remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.AppBusinessProcess.CreateOutputTable(System.String,System.String,System.Collections.Generic.IList{Blackbaud.AppFx.Server.AppCatalog.TableColumn})">
 <summary>
 Creates a table in the business process database based on a list of TableColumn classes.
 </summary>
 <param name="tableNamePrefix">The prefix of the table name to be created.  Table name prefix will be concatenated with the id of the current business process run.</param>
 <param name="tableKey">Used to uniquely identify the output table when a business process creates multiple output tables in a single process run.</param> 
 <param name="columns">List of TableColumn classes to define the columns to be added to the output table.</param>
 <returns>Returns the name of the table created.</returns>
 <remarks>The table name will have a suffix containing the primary key of the current business process status.</remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.AppBusinessProcess.CreateOutputTable(System.String,System.String,System.Collections.Generic.IList{Blackbaud.AppFx.Server.AppCatalog.TableColumn},System.Boolean)">
 <summary>
 Creates a table in the business process database based on a list of TableColumn classes.
 </summary>
 <param name="tableNamePrefix">The prefix of the table name to be created.  Table name prefix will be concatenated with the id of the current business process run.</param>
 <param name="tableKey">Used to uniquely identify the output table when a business process creates multiple output tables in a single process run.</param> 
 <param name="columns">List of TableColumn classes to define the columns to be added to the output table.</param>
 <param name="overrideSuffixWithNewGuid">If true, name the table with a unique GUID suffix; if false, use the primary key of the current business process status as the GUID suffix.</param>
 <returns>Returns the name of the table created.</returns>
 <remarks>If overrideSuffixWithNewGuid is true, the table name will have a unique GUID suffix; if it is false, its suffix will be the primary key of the current business process status.</remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.AppBusinessProcess.CreateOutputTableInDataMart(System.String,System.String,System.Collections.Generic.IList{Blackbaud.AppFx.Server.AppCatalog.TableColumn},System.Boolean,System.Data.SqlClient.SqlConnection,System.String)">
 <summary>
 Creates an output table in a data mart  based on a list of TableColumn classes.
 </summary>
 <param name="tableNamePrefix">The prefix of the table name to be created.  Table name prefix will be concatenated with the id of the current business process run.</param>
 <param name="tableKey">Used to uniquely identify the output table when a business process creates multiple output tables in a single process run.</param> 
 <param name="columns">List of TableColumn classes to define the columns to be added to the output table.</param>
 <param name="overrideSuffixWithNewGuid">If true, name the table with a unique GUID suffix; if false, use the primary key of the current business process status as the GUID suffix.</param>
 <param name="conn">SQL connection to the data mart.</param>
 <returns>Returns the name of the table created.</returns>
 <remarks>If overrideSuffixWithNewGuid is true, the table name will have a unique GUID suffix; if it is false, its suffix will be the primary key of the current business process status.</remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.AppBusinessProcess.CreateOutputTableFromView(System.String,System.String,System.String,Blackbaud.AppFx.Server.AppCatalog.TableColumn[]@)">
 <summary>
 Creates an output table in the business processor database based on a view in the application database.
 </summary>
 <param name="viewName">The name of the source view to be used to populate the table fields</param>
 <param name="tableNamePrefix">The prefix of the table name to be created.  Table name prefix will be concatenated with the id of the current business process run.</param>
 <param name="tableKey">Used to uniquely identify the output table when a business process creates multiple output tables in a single process run.</param> 
 <param name="tableColumns">A ByRef array of TableColumn classes that make up the output table.</param> 
 <returns>Returns the name of the table created.</returns>
 <remarks>The table name will have a suffix containing the primary key of the current business process status.</remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.AppBusinessProcess.CreateOutputTableFromView(System.String,System.String,System.String,Blackbaud.AppFx.Server.AppCatalog.TableColumn[],Blackbaud.AppFx.Server.AppCatalog.TableColumn[]@)">
 <summary>
 Creates an output table in the business processor database based on a view in the application database.
 </summary>
 <param name="viewName">The name of the source view to be used to populate the table fields</param>
 <param name="tableNamePrefix">The prefix of the table name to be created.  Table name prefix will be concatenated with the id of the current business process run.</param>
 <param name="tableKey">Used to uniquely identify the output table when a business process creates multiple output tables in a single process run.</param> 
 <param name="additionalColumns">Additional columns to be added to the created table.</param>
 <param name="viewColumns">A ByRef array of TableColumn classes that make up the columns in the view.</param> 
 <returns>Returns the name of the table created.</returns>
 <remarks>The table name will have a suffix containing the primary key of the current business process status.</remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.AppBusinessProcess.BuildRecordSecurityWithClause(System.String,System.String,System.String,System.Boolean)">
 <summary>
 Returns a sql With clause for record security implementation in a business process.
 </summary>
 <param name="sourceTableName">The name of the table to be used for the record security clause.</param>
 <param name="recordType">The record type of the records being queried.</param> 
 <param name="primaryKeyFieldName">The field name of the primary key of the source table.</param>
 <param name="includeWithText">Indicates whether the "with" text that starts a CTE should be included.</param>
 <returns>Returns the record security with clause.</returns>
 <remarks>The with clause will be empty if record security is not enabled or if record security filtering is not needed.  For example, if the owner is a system administrator, then no record security clause will be returned.</remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.AppBusinessProcess.RemoveOutputTableByKey(System.String)">
 <summary>
 Removes the specified output table from this process run.
 </summary>
 <param name="tableKey">The key of the output table to remove.</param>
 <remarks>This can be useful for removing empty output tables before the process finishes.</remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.AppBusinessProcess.RemoveOutputTableByName(System.String)">
 <summary>
 Removes the specified output table from this process run.
 </summary>
 <param name="tableName">The name of the output table to remove.</param>
 <remarks>This can be useful for removing empty output tables before the process finishes.</remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.AppBusinessProcess.LoadIDSet(System.Guid)">
 <summary>
 Returns an IDSet object which has been loaded from the database.
 </summary>
 <param name="idSetID">Primary key of the ID Set to load.</param>
 <returns>Returns an IDSet object</returns>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.AppBusinessProcess.CreateIDSet(System.String,System.String,System.String,System.Guid)">
 <summary>
 Creates an ID Set based on a table.
 </summary>
 <param name="idSetName">ByVal parameter designating the name of the ID Set to be created.</param>
 <param name="sourceTableName">Name of the table to be used to populate the ID Set.</param>
 <param name="idColumn">Name of the column to be read from the source table.</param>
 <param name="recordTypeID">Guid value used as a foreign key to the RECORDTYPE table.</param>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.AppBusinessProcess.CreateIDSet(System.Data.SqlClient.SqlConnection,System.String,System.String,System.String,System.Guid)">
 <summary>
 Creates an ID Set based on a table.
 </summary>
 <param name="conn">The connection to use when creating the id set.</param> 
 <param name="idSetName">ByVal parameter designating the name of the ID Set to be created.</param>
 <param name="sourceTableName">Name of the table to be used to populate the ID Set.</param>
 <param name="idColumn">Name of the column to be read from the source table.</param>
 <param name="recordTypeID">Guid value used as a foreign key to the RECORDTYPE table.</param>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.AppBusinessProcess.CreateIDSet(System.Data.SqlClient.SqlConnection,System.String,System.String,System.String,System.Guid,System.Guid)">
 <summary>
 Creates an ID Set based on a table.
 </summary>
 <param name="conn">The connection to use when creating the id set.</param> 
 <param name="idSetName">ByVal parameter designating the name of the ID Set to be created.</param>
 <param name="sourceTableName">Name of the table to be used to populate the ID Set.</param>
 <param name="idColumn">Name of the column to be read from the source table.</param>
 <param name="recordTypeID">Guid value used as a foreign key to the RECORDTYPE table.</param>
 <param name="ownerID">Owner ID of the ID set to be created.</param>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.AppBusinessProcess.CreateIDSet(System.String,System.Guid[],System.Guid)">
 <summary>
 Creates an ID Set based on a list of guids.
 </summary>
 <param name="idSetName">ByRef parameter designating the name of the ID Set to be created.</param>
 <param name="recordIDs">List of guids to be added to ID Set table</param>
 <param name="recordTypeID">Guid value used as a foreign key to the RECORDTYPE table.</param>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.AppBusinessProcess.GetOwnerID">
 <summary>
 Gets the owner ID of a business process and caches it if it has not already been cached.  If the owner ID is
 not set on the business process, then this will return the current AppUser ID instead.
 </summary>
 <returns>Returns the owner ID of a business process if set, otherwise returns the current AppUser ID.</returns>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.AppBusinessProcess.GetOwnerID(System.Boolean)">
 <summary>
 Gets the owner ID of a business process and caches it if it has not already been cached.
 </summary>
 <param name="useAppUserIDIfNull">Whether or not to return the current AppUser ID if the owner ID is not set on the business process.</param>
 <returns>Returns the owner ID of a business process.</returns>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.TableColumn.#ctor(System.String,System.Data.SqlDbType)">
 <summary>
 Creates class as a data type column that does not specify a maximum length.
 </summary>
 <param name="columnName">The name of the column.</param>
 <param name="columnType">The data type of the column.</param>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.TableColumn.#ctor(System.String,System.Data.SqlDbType,System.String)">
 <summary>
 Creates class as a data type column that does not specify a maximum length.
 </summary>
 <param name="columnName">The name of the column.</param>
 <param name="columnType">The data type of the column.</param>
 <param name="currencyIDColumn">For money type columns, the name of the column containing the ID of the value's currency.</param>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.TableColumn.#ctor(System.String,System.Int32)">
 <summary>
 Creates class as a nvarchar data type column.
 </summary>
 <param name="columnName">The name of the column.</param>
 <param name="maxLength">The maximum length of the column.</param>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.TableColumn.#ctor(System.String,Blackbaud.AppFx.XmlTypes.FormFieldDataType,System.Int32,System.Boolean)">
 <summary>
 Creates a table column based on a <see cref="T:Blackbaud.AppFx.XmlTypes.FormFieldDataType"/>.  
 </summary>
 <param name="columnName">The name of the column.</param>
 <param name="dataType">The form field data type of the values to be saved to the column.</param>
 <param name="maxLength">The max length for a string or binary field.</param>
 <param name="useNativeDataType">Determines whether or not UDTs will be used or if the native type is used.  UDTs may not exist in the tempDB.</param>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.TableColumn.#ctor(System.String,Blackbaud.AppFx.XmlTypes.FormFieldDataType,System.Int32,System.Boolean,System.String)">
 <summary>
 Creates a table column based on a <see cref="T:Blackbaud.AppFx.XmlTypes.FormFieldDataType"/>.  
 </summary>
 <param name="columnName">The name of the column.</param>
 <param name="dataType">The form field data type of the values to be saved to the column.</param>
 <param name="maxLength">The max length for a string or binary field.</param>
 <param name="useNativeDataType">Determines whether or not UDTs will be used or if the native type is used.  UDTs may not exist in the tempDB.</param>
 <param name="currencyIDColumn">For money type columns, the name of the column containing the ID of the value's currency.</param>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.TableColumn.#ctor(System.String,Blackbaud.AppFx.XmlTypes.FormFieldDataType,System.Boolean)">
 <summary>
 Creates a table column based on a <see cref="T:Blackbaud.AppFx.XmlTypes.FormFieldDataType"/>.  
 </summary>
 <param name="columnName">The name of the column.</param>
 <param name="dataType">The form field data type of the values to be saved to the column.</param>
 <param name="useNativeDataType">Determines whether or not UDTs will be used or if the native type is used.  UDTs may not exist in the tempDB.</param>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.TableColumn.#ctor(System.String,Blackbaud.AppFx.XmlTypes.FormFieldDataType,System.Boolean,System.String)">
 <summary>
 Creates a table column based on a <see cref="T:Blackbaud.AppFx.XmlTypes.FormFieldDataType"/>.  
 </summary>
 <param name="columnName">The name of the column.</param>
 <param name="dataType">The form field data type of the values to be saved to the column.</param>
 <param name="useNativeDataType">Determines whether or not UDTs will be used or if the native type is used.  UDTs may not exist in the tempDB.</param>
 <param name="currencyIDColumn">For money type columns, the name of the column containing the ID of the value's currency.</param>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.TableColumn.#ctor(System.String,Blackbaud.AppFx.XmlTypes.FormFieldDataType)">
 <summary>
 Creates a table column based on a <see cref="T:Blackbaud.AppFx.XmlTypes.FormFieldDataType"/>.
 </summary>
 <param name="columnName">The name of the column.</param>
 <param name="dataType">The form field data type of the values to be saved to the column.</param>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.TableColumn.#ctor(System.String,Blackbaud.AppFx.XmlTypes.FormFieldDataType,System.String)">
 <summary>
 Creates a table column based on a <see cref="T:Blackbaud.AppFx.XmlTypes.FormFieldDataType"/>.
 </summary>
 <param name="columnName">The name of the column.</param>
 <param name="dataType">The form field data type of the values to be saved to the column.</param>
 <param name="currencyIDColumn">For money type columns, the name of the column containing the ID of the value's currency.</param>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.TableColumn.#ctor(System.String,System.Data.SqlDbType,System.Int32)">
 <summary>
 Standard creation of a data type column.
 </summary>
 <param name="columnName">The name of the column.</param>
 <param name="columnType">The data type of the column.</param>
 <param name="maxLength">The maximum length of the column.</param>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.TableColumn.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.String)">
 <summary>
 Standard creation of a data type column.
 </summary>
 <param name="columnName">The name of the column.</param>
 <param name="columnType">The data type of the column.</param>
 <param name="maxLength">The maximum length of the column.</param>
 <param name="currencyIDColumn">For money type columns, the name of the column containing the ID of the value's currency.</param>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.TableColumn.#ctor(System.String,System.Data.SqlDbType,System.Byte,System.Int32)">
 <summary>
 Standard creation of a decimal/numeric based data type column.
 </summary>
 <param name="columnName">The name of the column.</param>
 <param name="columnType">The data type of the column.</param>
 <param name="precision">The precision of the column.</param>
 <param name="scale">The scale of the column.</param>
 <remarks></remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.AppCatalog.AppBusinessProcessContext">
 <summary>
 Provides arguments for an implementation of <see cref="M:Blackbaud.AppFx.Server.AppCatalog.AppBusinessProcess.StartBusinessProcess"></see> 
 </summary>
 <remarks>This class allows the <see cref="M:Blackbaud.AppFx.Server.AppCatalog.AppBusinessProcess.StartBusinessProcess"></see> method to support future argument extensibility </remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.AppCatalog.AppCustomFileDownloadRequest">
 <summary>
 Represents the request parameters of a custom CLR implemented file download.
 </summary>
 <remarks>An instance of this class is used to initialize the <see cref="T:Blackbaud.AppFx.Server.AppCatalog.AppCustomFileDownloadContext"></see> class.</remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.AppCatalog.AppCustomFileDownloadResult">
 <summary>
 Represents the results of a custom CLR implemented file download.
 </summary>
 <remarks>An instance of this class is returned from the <see cref="M:Blackbaud.AppFx.Server.AppCatalog.AppCustomFileDownLoadProcessor.PopulateStream(System.IO.Stream)"></see> method.</remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.AppCatalog.AppCustomFileDownLoadProcessor">
 <summary>
 The base class for the custom CLR implementated file download.
 </summary>
 <remarks>This will return an instance of the <see cref="T:Blackbaud.AppFx.Server.AppCatalog.AppCustomFileDownloadResult"></see> class that contains a stream to download to the client.</remarks>
</member>
<member name="P:Blackbaud.AppFx.Server.AppCatalog.AppCustomFileDownLoadProcessor.BufferOutput">
 <summary>
 Whether or not to buffer the entire download in IIS memory before sending it to the client.  For large files,
 buffering can cause memory pressure and failures in IIS so you should set this to <code>False</code> so that the large file 
 will NOT be buffered into memory and instead will begin streaming to the client as you write to the download stream.
 </summary>
 <returns>Whether or not to buffer the entire download in IIS memory before sending it to the client.</returns>
 <remarks>It is highly recommended to set this to <code>False</code> for large files.</remarks>
</member>
<member name="P:Blackbaud.AppFx.Server.AppCatalog.AppCustomFileDownLoadProcessor.BufferSize">
 <summary>
 The buffer size in kilobytes (KB) for file downloads.  By default, IIS will buffer the entire file before it is downloaded.
 For file downloads that support this setting, if the download size is estimated to be larger than this buffer size, then it 
 will not buffer the file and instead the file will immediately be streamed directly to the client.
 </summary>
 <returns>The buffer size in KB for file downloads.</returns>
 <remarks>This property is just to make it easy for subclasses to retrieve the current buffer size.</remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.AppCustomFileDownLoadProcessor.ReplaceInvalidFileNameChars(System.String,System.String,System.String)">
 <summary>
 Replaces any whitespace or invalid characters in a string to be used as a file name with the specified characters.
 </summary>
 <param name="fileName">The string to be used as a file name.</param>
 <param name="replaceWhitespaceWith">The character(s) with which to replace whitespace characters.</param>
 <param name="replaceInvalidCharsWith">The character(s) with which to replace invalid characters.</param>
 <returns>The filename with any whitespace or invalid characters replaced with the characters specified.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.AppCustomFileDownLoadProcessor.RemoveInvalidFileNameChars(System.String)">
 <summary>
 Removes any invalid characters from a filename.  Note that spaces are valid and will not be removed.
 </summary>
 <param name="fileName">The string to be used as a file name.</param>        
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.AppCustomFileDownLoadProcessor.SetResponseContentDisposition(Blackbaud.AppFx.Server.RequestContext,System.String)">
 <summary>
 Sets the file name in the response content-disposition header.
 </summary>
 <param name="fileName">The string to be used as a file name.</param>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.AppCustomFileDownLoadProcessor.SetResponseContentDisposition(System.Web.HttpContext,System.String)">
 <summary>
 Sets the file name in the response content-disposition header.
 </summary>
 <param name="fileName">The string to be used as a file name.</param>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.AppCustomFileDownLoadProcessor.SetResponseContentDisposition(System.Web.HttpContext,System.String,System.Boolean)">
 <summary>
 Sets the file name in the response content-disposition header.
 </summary>
 <param name="fileName">The string to be used as a file name.</param>
 <param name="replaceInvalidFileNameCharacters">Default is True.  Whether or not to replace invalid characters in the file name.</param>
 <remarks></remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.AppCatalog.AppCustomFileDownloadContext">
 <summary>
 Provides arguments for an implementation of <see cref="M:Blackbaud.AppFx.Server.AppCatalog.AppCustomFileDownLoadProcessor.PopulateStream(System.IO.Stream)"></see> 
 </summary>
 <remarks>This class allows the <see cref="M:Blackbaud.AppFx.Server.AppCatalog.AppCustomFileDownLoadProcessor.PopulateStream(System.IO.Stream)"></see> method to support future argument extensibility </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.AppEditDataForm.CreateDataFormException(System.String,System.String)">
 <summary>
 Creates a standard <see cref="T:Blackbaud.AppFx.Server.ServiceException"/> for a data form exception that includes information about the invalid field
 </summary>
 <param name="errorMsg">The error message that will be displayed to the client</param>
 <param name="fieldID">The ID of the invalid field.  This should be the FieldID specified in the form metadata.</param>
 <remarks>The invalid field reason will default to <see cref="F:Blackbaud.AppFx.Server.DataFormInvalidFieldReason.CustomException"/></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.AppEditDataForm.CreateDataFormException(Blackbaud.AppFx.Server.DataFormInvalidFieldReason,System.String,System.String)">
 <summary>
 Creates a standard <see cref="T:Blackbaud.AppFx.Server.ServiceException"/> for a data form exception that includes information about the invalid field
 </summary>
 <param name="reason">The reason for the exception</param>
 <param name="errorMsg">The error message that will be displayed to the client</param>
 <param name="fieldID">The ID of the invalid field.  This should be the FieldID specified in the form metadata.</param>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.AppEditDataForm.CreateDataFormException(Blackbaud.AppFx.Server.DataFormInvalidFieldReason,System.String,System.String,System.Exception)">
 <summary>
 Creates a standard <see cref="T:Blackbaud.AppFx.Server.ServiceException"/> for a data form exception that includes information about the invalid field
 </summary>
 <param name="reason">The reason for the exception</param>
 <param name="errorMsg">The error message that will be displayed to the client</param>
 <param name="fieldID">The ID of the invalid field.  This should be the FieldID specified in the form metadata.</param>
 <param name="innerException">An exception that is the cause of the current exception</param>
</member>
<member name="T:Blackbaud.AppFx.Server.AppCatalog.AppEditDataFormContext">
 <summary>
 Provides arguments for an implementation of <see cref="M:Blackbaud.AppFx.Server.AppCatalog.AppEditDataForm.Load"></see> 
 </summary>
 <remarks>This class allows the <see cref="M:Blackbaud.AppFx.Server.AppCatalog.AppEditDataForm.Load"></see> method to support future argument extensibility </remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.AppCatalog.AppFileDownloadRequest">
 <summary>
 Represents the request parameters of a CLR implemented file download.
 </summary>
 <remarks>An instance of this class is used to initialize the <see cref="T:Blackbaud.AppFx.Server.AppCatalog.AppFileDownloadContext"></see> class.</remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.AppCatalog.AppFileDownloadResult">
 <summary>
 Represents the results of a CLR implemented file download.
 </summary>
 <remarks>An instance of this class is returned form the <see cref="M:Blackbaud.AppFx.Server.AppCatalog.AppFileDownLoadProcessor.GetFile"></see> method.</remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.AppCatalog.AppFileDownLoadProcessor">
 <summary>
 The base class for the CLR implementated file download.
 </summary>
 <remarks>This will return an instance of the <see cref="T:Blackbaud.AppFx.Server.AppCatalog.AppFileDownloadResult"></see> class that contains a stream to download to the client.</remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.AppCatalog.AppFileDownloadContext">
 <summary>
 Provides arguments for an implementation of <see cref="M:Blackbaud.AppFx.Server.AppCatalog.AppFileDownLoadProcessor.GetFile"></see> 
 </summary>
 <remarks>This class allows the <see cref="M:Blackbaud.AppFx.Server.AppCatalog.AppFileDownLoadProcessor.GetFile"></see> method to support future argument extensibility </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.AppGlobalChangeProcess.BuildRecordSecurityWithClause(System.String,System.String,System.String,System.Boolean)">
 <summary>
 Returns a sql With clause for record security implementation in a global change process.
 </summary>
 <param name="sourceTableName">The name of the table to be used for the record security clause.</param>
 <param name="recordType">The record type of the records being queried.</param> 
 <param name="primaryKeyFieldName">The field name of the primary key of the source table.</param>
 <param name="includeWithText">Indicates whether the "with" text that starts a CTE should be included.</param>
 <returns>Returns the record security with clause.</returns>
 <remarks>The with clause will be empty if record security is not enabled or if record security filtering is not needed.  For example, if the owner is a system administrator, then no record security clause will be returned.</remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.AppCatalog.AppIDMapperContext">
 <summary>
 Provides arguments for an implementation of <see cref="M:Blackbaud.AppFx.Server.AppCatalog.AppIDMapper.MapSourceIDToTargetID"></see> 
 </summary>
 <remarks>This class allows the <see cref="M:Blackbaud.AppFx.Server.AppCatalog.AppIDMapper.MapSourceIDToTargetID"></see> method to support future argument extensibility </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.AppPropertyLoader.GetPropertyLoaderForObject(System.Object)">
 <summary>
 Returns an instance of AppPropertyLoader that can load the properties on the target object
 </summary>
 <param name="targetObject"></param>
 <returns>An AppPropertyLoader that can load the properties on the target object</returns>
 <remarks>Most objects can be loaded by the late bound property loader. <see cref="T:Blackbaud.AppFx.Server.AppCatalog.LateBoundPropertyLoader" />
 If the targetObject implements ICustomPropertyProvider <see cref="T:Blackbaud.AppFx.Server.AppCatalog.ICustomPropertyLoaderProvider"></see> then
 a custom AppPropertyLoader will be returned.
 </remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.AppCatalog.AppRecordOperationPerformContext">
 <summary>
 Provides arguments for an implementation of <see cref="M:Blackbaud.AppFx.Server.AppCatalog.AppRecordOperationPerform.Perform"></see> 
 </summary>
 <remarks>This class allows the <see cref="M:Blackbaud.AppFx.Server.AppCatalog.AppRecordOperationPerform.Perform"></see> method to support future argument extensibility </remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.AppCatalog.AppRecordOperationGetPromptContext">
 <summary>
 Provides arguments for an implementation of <see cref="M:Blackbaud.AppFx.Server.AppCatalog.AppRecordOperationGetPrompt.GetPrompt"></see> 
 </summary>
 <remarks>This class allows the <see cref="M:Blackbaud.AppFx.Server.AppCatalog.AppRecordOperationGetPrompt.GetPrompt"></see> method to support future argument extensibility </remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.AppCatalog.AppSearchListResult">
 <summary>
 Represents the results of a CLR implemented SearchList
 </summary>
 <remarks>An instance of this class is returned form the <see cref="M:Blackbaud.AppFx.Server.AppCatalog.AppSearchList.GetSearchResults"></see> method</remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.AppSearchListResult.#ctor(System.Data.Common.DbCommand)">
 <summary>
 Initializes with a DbCommand that has been setup and is ready to have its .ExecuteReader() method called. 
 </summary>
 <param name="cmd">A DbCommand object that has been setup with whatever command text and parameters are required to use it.</param>
 <remarks>
 <para>Pass a cmd with no connection and a connection to the current database will be used</para>
 <para>Pass a cmd with an existing connection and that connection will be used and closed after the results have been processed</para>
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.AppSearchListResult.#ctor(System.Data.DataTable)">
 <summary>
 Initializes with a DataTable that has been populated with the search results. 
 </summary>
 <param name="dt">A System.Data.DataTable containing the search results</param>
 <remarks>
 <para>Use this overload if you need to do your own fetching of data and you can't just return a SQLCommand or SQLDataReader.</para>
 <para>If you have a simple SQLCommand.ExecuteReader then use one of the other overloads.</para>
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.AppSearchListResult.#ctor(System.Data.Common.DbDataReader)">
 <summary>
 Initializes with a DBDataReader that has been executed but not yet looped over. 
 </summary>
 <param name="rdr">A DBDataReader that is ready to be looped over.</param>
 <remarks>
 <para>Use this overload if you need to do your own fetching of data and you can't just return a SQLCommand ready to have its .ExecuteReader method called.</para>
 <para>If you have a simple SQLCommand.ExecuteReader then use one of the overloads that takes a SQLCommand</para>
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.AppSearchListResult.#ctor(System.Collections.Generic.IEnumerable{Blackbaud.AppFx.Server.ListOutputRow})">
 <summary>
 Initializes with an IEnumerable list of output rows.
 </summary>
 <param name="list">An IEnumerable list of output rows.</param>
 <remarks>
 <para>Use this overload if you are building your own set of results for the search.</para>
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.AppSearchListResult.#ctor(Blackbaud.AppFx.Server.ListOutputRow[])">
 <summary>
 Initializes with an array of output rows.
 </summary>
 <param name="list">An array of output rows.</param>
 <remarks>
 <para>Use this overload if you are building your own set of results for the search.</para>
 </remarks>
</member>
<member name="P:Blackbaud.AppFx.Server.AppCatalog.AppSearchListResult.HadMoreRows">
 <summary>
 Indicates that the number of rows available exceeded the supplied MaxRows parameter.
 </summary>
 <value>A boolean value indicating if additional rows are available or not.</value>
 <returns>True if additional rows are available, and False othewise.</returns>
 <remarks>
 <para>When building the search results manually as an IEnumerable list or array of output rows, use this to indicate that additional rows beyond the supplied MaxRows limit were available.</para>
 </remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.AppCatalog.AppSearchListContext">
 <summary>
 Provides arguments for an implementation of <see cref="M:Blackbaud.AppFx.Server.AppCatalog.AppSearchList.GetSearchResults"></see> 
 </summary>
 <remarks>This class allows the <see cref="M:Blackbaud.AppFx.Server.AppCatalog.AppSearchList.GetSearchResults"></see> method to support future argument extensibility </remarks>
</member>
<member name="P:Blackbaud.AppFx.Server.AppCatalog.AppSearchListContext.SearchListSettings">
 <summary>
 Returns the current configuration settings for the search list
 </summary>
 <returns>An instance of <see cref="T:Blackbaud.AppFx.XmlTypes.SearchList.SearchListSettings"/></returns>
 <remarks>If the search list does not support configuration or has not been configured then nothing will be returned</remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.AppCatalog.AppSimpleDataListContext">
 <summary>
 Provides arguments for an implementation of <see cref="M:Blackbaud.AppFx.Server.AppCatalog.AppSimpleDataList.GetListResults"></see> 
 </summary>
 <remarks>This class allows the <see cref="M:Blackbaud.AppFx.Server.AppCatalog.AppSimpleDataList.GetListResults"></see> method to support future argument extensibility </remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.AppCatalog.AppSimpleDataListResult">
 <summary>
 Represents the results of a CLR implemented SimpleDataList
 </summary>
 <remarks>An instance of this class is returned form the <see cref="M:Blackbaud.AppFx.Server.AppCatalog.AppSimpleDataList.GetListResults"></see> method</remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.AppSimpleDataListResult.#ctor(System.Data.Common.DbCommand)">
 <summary>
 Initializes with a DbCommand that has been setup and is ready to have its .ExecuteReader() method called. 
 </summary>
 <param name="cmd">A DbCommand object that has been setup with whatever command text and parameters are required to use it.</param>
 <remarks>
 <para>Pass a cmd with no connection and a connection to the current database will be used</para>
 <para>Pass a cmd with an existing connection and that connection will be used and closed after the results have been processed</para>
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.AppSimpleDataListResult.#ctor(System.Data.DataTable)">
 <summary>
 Initializes with a DataTable that has been populated with the list results. 
 </summary>
 <param name="dt">A System.Data.DataTable containing the simple list results</param>
 <remarks>
 <para>Use this overload if you need to do your own fetching of data and you can't just return a SQLCommand or SQLDataReader.</para>
 <para>If you have a simple SQLCommand.ExecuteReader then use one of the other overloads.</para>
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.AppSimpleDataListResult.#ctor(System.Data.Common.DbDataReader)">
 <summary>
 Initializes with a DBDataReader that has been executed but not yet looped over. 
 </summary>
 <param name="rdr">A DBDataReader that is ready to be looped over.</param>
 <remarks>
 <para>Use this overload if you need to do your own fetching of data and you can't just return a SQLCommand ready to have its .ExecuteReader method called.</para>
 <para>If you have a simple SQLCommand.ExecuteReader then use one of the overloads that takes a SQLCommand</para>
 </remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.AppCatalog.AppTranslationFunctionContext">
 <summary>
 Provides arguments for an implementation of <see cref="M:Blackbaud.AppFx.Server.AppCatalog.AppTranslationFunction.GetTranslation(System.String)"></see> 
 </summary>
 <remarks>This class allows the <see cref="M:Blackbaud.AppFx.Server.AppCatalog.AppTranslationFunction.GetTranslation(System.String)"></see> method to support future argument extensibility </remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.AppCatalog.AppViewDataFormContext">
 <summary>
 Provides arguments for an implementation of <see cref="M:Blackbaud.AppFx.Server.AppCatalog.AppViewDataForm.Load"></see> 
 </summary>
 <remarks>This class allows the <see cref="M:Blackbaud.AppFx.Server.AppCatalog.AppViewDataForm.Load"></see> method to support future argument extensibility </remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.AppCatalog.AppDataListContext">
 <summary>
 Provides arguments for an implementation of <see cref="M:Blackbaud.AppFx.Server.AppCatalog.AppDataList.GetListResults"></see> 
 </summary>
 <remarks>This class allows the <see cref="M:Blackbaud.AppFx.Server.AppCatalog.AppDataList.GetListResults"></see> method to support future argument extensibility </remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.AppCatalog.AppDataListResult">
 <summary>
 Represents the results of a CLR implemented DataList
 </summary>
 <remarks>An instance of this class is returned form the <see cref="M:Blackbaud.AppFx.Server.AppCatalog.AppDataList.GetListResults"></see> method</remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.AppDataListResult.#ctor(System.Data.Common.DbCommand)">
 <summary>
 Initializes with a DbCommand that has been setup and is ready to have its .ExecuteReader() method called. 
 </summary>
 <param name="cmd">A DbCommand object that has been setup with whatever command text and parameters are required to use it.</param>
 <remarks>
 <para>Pass a cmd with no connection and a connection to the current database will be used</para>
 <para>Pass a cmd with an existing connection and that connection will be used and closed after the results have been processed</para>
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.AppDataListResult.#ctor(System.Data.DataTable)">
 <summary>
 Initializes with a DataTable that has been populated with the list results. 
 </summary>
 <param name="dt">A System.Data.DataTable containing the list results</param>
 <remarks>
 <para>Use this overload if you need to do your own fetching of data and you can't just return a SQLCommand or SQLDataReader.</para>
 <para>If you have a simple SQLCommand.ExecuteReader then use one of the other overloads.</para>
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.AppDataListResult.#ctor(System.Data.Common.DbDataReader)">
 <summary>
 Initializes with a DBDataReader that has been executed but not yet looped over. 
 </summary>
 <param name="rdr">A DBDataReader that is ready to be looped over.</param>
 <remarks>
 <para>Use this overload if you need to do your own fetching of data and you can't just return a SQLCommand ready to have its .ExecuteReader method called.</para>
 <para>If you have a simple SQLCommand.ExecuteReader then use one of the overloads that takes a SQLCommand</para>
 </remarks>
</member>
<member name="P:Blackbaud.AppFx.Server.AppCatalog.AppDataListResult.HadMoreRows">
 <summary>
 Indicates that the number of rows available exceeded the supplied MaxRows parameter.
 </summary>
 <value>A boolean value indicating if additional rows are available or not.</value>
 <returns>True if additional rows are available, and False otherwise.</returns>
 <remarks>
 <para>When building the datalist results manually as an IEnumerable list or array of DataListResultRow, use this to indicate that additional rows beyond the supplied MaxRows limit were available.</para>
 </remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.AppCatalog.AppTranslationFunctionResult">
 <summary>
 Represents the results of a CLR implemented TranslationFunction
 </summary>
 <remarks>An instance of this class is returned from the <see cref="M:Blackbaud.AppFx.Server.AppCatalog.AppTranslationFunction.GetTranslation(System.String)"></see> method</remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.AppCatalog.AppDataFormPostActionContext">
 <summary>
 Provides arguments for an implementation of a <see cref="M:Blackbaud.AppFx.Server.AppCatalog.AppDataFormPostAction.Invoke"></see> 
 </summary>
 <remarks>This class allows the <see cref="M:Blackbaud.AppFx.Server.AppCatalog.AppDataFormPostAction.Invoke"></see> method to support future argument extensibility </remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.AppCatalog.AppRecordOperationPostActionContext">
 <summary>
 Provides arguments for an implementation of a <see cref="M:Blackbaud.AppFx.Server.AppCatalog.AppRecordOperationPostAction.Invoke"></see> 
 </summary>
 <remarks>This class allows the <see cref="M:Blackbaud.AppFx.Server.AppCatalog.AppRecordOperationPostAction.Invoke"></see> method to support future argument extensibility </remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.AppCatalog.ICustomPropertyLoaderProvider">
 <summary>
 Implemented on CLR AppCatalog classes that need a custom AppPropertyLoader
 </summary>
 <remarks></remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.AppCatalog.LateBoundPropertyLoader">
 <summary>
 Uses reflection to read/write values to the public fields of a CLR AppCatalog processor such as a <see cref="T:Blackbaud.AppFx.Server.AppCatalog.AppDataList"/> .
 </summary>
 <remarks></remarks>
</member>
<member name="P:Blackbaud.AppFx.Server.AppCatalog.BatchCommitHandlerRowExceptionAfterExceptionRowProcessedArgs.OriginalRowID">
 <summary>
 Gets the batch row's original ID.
 </summary>
 <value>The batch row's original ID.</value>
</member>
<member name="P:Blackbaud.AppFx.Server.AppCatalog.BatchCommitHandlerRowExceptionAfterExceptionRowProcessedArgs.ExceptionRowID">
 <summary>
 Gets the generated batch exception's row ID.
 </summary>
 <value>The generated batch exception's row ID.  If no exception batch was created, this returns Guid.Empty.</value>
</member>
<member name="T:Blackbaud.AppFx.Server.AppCatalog.BatchCommitHandlerRowExceptionArgs">
 <summary>
 Describes a batch row that failed to commit successfully.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.AppCatalog.BatchCommitHandlerRowExceptionArgs.RowMessage">
 <summary>
 Gets the new row message for the exception batch row.
 </summary>
 <value>The new row message for the exception batch row.</value>
</member>
<member name="P:Blackbaud.AppFx.Server.AppCatalog.BatchCommitHandlerRowExceptionArgs.Exception">
 <summary>
 Gets the exception that caused the batch row commit to fail.
 </summary>
 <value>The exception that caused the batch row commit to fail.</value>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.BatchCommitHandlerRowExceptionArgs.#ctor(Blackbaud.AppFx.XmlTypes.DataForms.DataFormItem,System.String,System.Exception)">
 <summary>
 Initializes a new instance of the <see cref="T:Blackbaud.AppFx.Server.AppCatalog.BatchCommitHandlerRowExceptionArgs"/> class with
 the specified data.
 </summary>
 <param name="dataFormItem">Data form item for the exception batch row.</param>
 <param name="rowMessage">New row message for the exception batch row.</param>
 <param name="exception">Exception that caused the batch row commit to fail.</param>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.BatchCommitHandlerRowExceptionArgs.GetDataFormItem">
 <summary>
 Gets a copy of the data form item for the exception batch row.
 </summary>
 <returns>A copy of the data form item for the exception batch row.</returns>
 <remarks></remarks>
</member>
<member name="P:Blackbaud.AppFx.Server.AppCatalog.BatchCommitHandlerRowCommittedArgs.CreatedRecordID">
 <summary>
 Gets the created record ID.
 </summary>
 <value>The created record ID.</value>
</member>
<member name="P:Blackbaud.AppFx.Server.AppCatalog.BatchCommitHandlerRecordsProcessedArgs.BatchID">
 <summary>
 Gets the batch ID.
 </summary>
 <value>The batch ID.</value>
</member>
<member name="P:Blackbaud.AppFx.Server.AppCatalog.BatchCommitHandlerRecordsProcessedArgs.TimeOut">
 <summary>
 Gets the command timeout.
 </summary>
 <value>The command timeout.</value>
</member>
<member name="P:Blackbaud.AppFx.Server.AppCatalog.BatchCommitHandlerRecordsProcessedArgs.ProcessedCount">
 <summary>
 Gets the number of rows processed.
 </summary>
 <value>The rows processed.</value>
</member>
<member name="T:Blackbaud.AppFx.Server.AppCatalog.BatchCommitHandler">
 <summary>
 An extension point for the batch commit business process.
 </summary>
 <remarks>
 Using the CommitHandler element, a batch type spec can include a reference to an inheritor of this class.
 During the execution of the batch commit business process, an instance of the specified
 <see cref="T:Blackbaud.AppFx.Server.AppCatalog.BatchCommitHandler"/> is created and its methods are invoked.
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.BatchCommitHandler.CreateInstance(System.String,System.String,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Instantiates and initializes a <see cref="T:Blackbaud.AppFx.Server.AppCatalog.BatchCommitHandler"/>.
 </summary>
 <param name="className">The name of the <see cref="T:Blackbaud.AppFx.Server.AppCatalog.BatchCommitHandler"/> sub class.</param>
 <param name="assemblyName">The name of the assembly containing the <see cref="T:Blackbaud.AppFx.Server.AppCatalog.BatchCommitHandler"/> sub class.</param>
 <param name="requestContext">The request context under which the batch commit business process is running.</param>
 <returns>A <see cref="T:Blackbaud.AppFx.Server.AppCatalog.BatchCommitHandler"/> instance.</returns>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.BatchCommitHandler.OnRowException(Blackbaud.AppFx.Server.AppCatalog.BatchCommitHandlerRowExceptionArgs)">
 <summary>
 Performs additional custom processes when an exception occurs during the commit of a batch row.
 </summary>
 <param name="args">Information describing the batch row and exception.</param>
 <remarks>
 Batch rows that have a row message set and batch rows that cause an exception in the commit row data form will be sent to this method.
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.BatchCommitHandler.OnRowExceptionAfterExceptionRowProcessed(Blackbaud.AppFx.Server.AppCatalog.BatchCommitHandlerRowExceptionAfterExceptionRowProcessedArgs)">
 <summary>
 Performs additional custom processing when an exception occurs during the commit of a batch row.  Will run after the
 exception batch row is saved if the batch process is configured to generate an exception batch.  If an exception batch
 isn't created, this method will still run.
 </summary>
 <param name="args">Information describing the batch row and exception.</param>
 <remarks>
 Batch rows that cause an exception in the commit row data form will trigger this method after the code 
 that saves the exception batch row runs.  It will still run even if the batch process doesn't generate an exception batch.
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.BatchCommitHandler.OnRecordsProcessed(System.Int32)">
 <summary>
 Performs additional custom processes after all batch rows have been committed.
 </summary>
 <param name="processedCount">The number of batch rows that were committed successfully.</param>
 <remarks>
 When this method is called the batch is still locked and the batch status has not yet been changed to committed.
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.BatchCommitHandler.OnRecordsProcessed(Blackbaud.AppFx.Server.AppCatalog.BatchCommitHandlerRecordsProcessedArgs)">
 <summary>
 Performs additional custom processes after all batch rows have been committed.
 </summary>
 <param name="args">Information concerning the batch being committed.</param>
 <remarks>
 When this method is called the batch is still locked and the batch status has not yet been changed to committed.
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppCatalog.BatchCommitHandler.OnRowCommitted(Blackbaud.AppFx.Server.AppCatalog.BatchCommitHandlerRowCommittedArgs)">
 <summary>
 Performs additional processing on a record after it has been committed.
 </summary>
 <param name="args">Information describing the row committed.</param>
 <remarks>
 Occurs immediately after a batch row is successfully committed.
 </remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.AppCatalog.AppMapEntityContext">
 <summary>
 Provides arguments for an implementation of <see cref="M:Blackbaud.AppFx.Server.AppCatalog.AppMapEntity.Load"></see> 
 </summary>
 <remarks>This class allows the <see cref="M:Blackbaud.AppFx.Server.AppCatalog.AppMapEntity.Load"></see> method to support future argument extensibility </remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.ApplicationInitializer">
 <summary>
 Contains the Initialize method that implements the Pre-AppStart initialize code  <see cref="T:System.Web.PreApplicationStartMethodAttribute"></see>
 
 </summary>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.ApplicationInitializer.Initialize">
 <summary>
 Implements the Pre-AppStart initialize code  <see cref="T:System.Web.PreApplicationStartMethodAttribute"></see>
 
 </summary>
 <remarks></remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.AppSettingDescriptionAttribute">
 <summary>
 Describes an AppSettingValue read-only,static field.
 </summary>
 <remarks>Applying this attribute to a read-only static field will allow the util/appsettinginfo.aspx admin page to generate documentation for the setting.</remarks>
</member>
<member name="P:Blackbaud.AppFx.Server.AppSettingDescriptionAttribute.MaskValueForUIPresentation">
 <summary>
 Indicates that the value and default should be masked using "****" when displayed in the appsettinginfo.aspx page.
 </summary>
 <remarks>Set this to true if the value would be considered sensitive, such as a password or other security related setting.</remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.aspx.KpiDashboard.TimeSpanComboItem">
 <summary>
 Represents the items in the time span combo box by index.  This must be kept in synch with <see cref="P:Blackbaud.AppFx.Server.aspx.KpiDashboard.ddlTimeSpan"/>.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.DeferredResultState`1">
 <summary>
 State information transfered from the original request processor to the deferred result request processor.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.DeferredResultState`1.SetResult(`0,System.Exception)">
 <summary>
 Sets the result or exception and signals that the result is available.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.DeferredResultState`1.WaitForResult(System.Int32)">
 <summary>
 Wait for a result to become available for the appropriate length of time according to the application settings.
 </summary>
 <param name="clientTimeOutSeconds">The number of seconds the client will wait for a response. Request processors can obtain this value from the <see cref="F:Blackbaud.AppFx.Server.ClientAppInfoHeader.TimeOutSeconds" /> field on <see cref="P:Blackbaud.AppFx.Server.RequestContext.ClientAppInfo" />.</param>
 <returns>True if the result is available, false otherwise.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.CacheUtility.RemoveCachedItemsAffectedByConditionSettings(Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Removes cached meta data of specs that may have been modified by out of date condition settings.
 </summary>
 <remarks>
 When only one condition setting has changed, use the overload that takes a condition setting name
 as a parameter.
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.CacheUtility.RemoveCachedItemsAffectedByConditionSettings(Blackbaud.AppFx.Server.RequestContext,System.String)">
 <summary>
 Removes cached meta data of specs that may have been modified by out of date condition setting.
 </summary>
 <remarks>
 Only removes meta data that is affected by the specified condition setting.
 </remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.ClientAppInfoHeader">
 <summary>
 Represents information about the client application.
 </summary>
 <remarks>This information in this class is part of every ServiceRequest message.</remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.ClientAppInfoHeader.REDatabaseToUse">
 <summary>
 The name of the RE database to use
 </summary>
 <remarks>Must be one of the items from the list returned from GetAvailableREDatabases</remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.ClientAppInfoHeader.ClientAppName">
 <summary>
 The name of the client application that is invoking the web service.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ClientAppInfoHeader.RunAsUserName">
 <summary>
 An NT Account name to impersonate for this request.
 </summary>
 <remarks>You can specify an account name in the format BBNT\Paulg for example and if the current real user is a system administrator
 then for this request the processing will happen in a context as though the specified user actually made the request.
 This is useful for testing security, especially for testing how you have designed a page to see what the experience will be like
 for that page for a given user.
 
 Note that this is not true Windows Impersonation, the token for the HTTP request will still be the original caller.
 Only the internal appuserid is changed to as to "impersonate" the username specified.
 
 You must be a system administrator in the infinity database in order to do this.
 
 This option is mutually exclusive with RunAsUserID.  The run as user should be specified with at most one
 of these options on a single request.
 </remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.ClientAppInfoHeader.RunAsUserID">
 <summary>
 The ID of an application user to impersonate for this request.
 </summary>
 <remarks>You can specify the ID of an applicaiton user and if the current real user is a system administrator
 then for this request the processing will happen in a context as though the specified user actually made the request.
 This is useful for testing security, especially for testing how you have designed a page to see what the experience will be like
 for that page for a given user.
 
 Note that this is not true Windows Impersonation, the token for the HTTP request will still be the original caller.
 Only the internal appuserid is changed to as to "impersonate" the user specified.
 
 You must be a system administrator in the infinity database in order to do this.
 
 This option is mutually exclusive with RunAsUserName.  The run as user should be specified with at most one
 of these options on a single request.
 </remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.ClientAppInfoHeader.ClientUICulture">
 <summary>
 The name of the current UI culture used by the client application that is invoking the web service.
 </summary>
 <remarks>
 The culture name in the format "&lt;languagecode2&gt;-&lt;country/regioncode2&gt;", 
 where &lt;languagecode2&gt; is a lowercase two-letter code derived from ISO 639-1 
 and &lt;country/regioncode2&gt; is an uppercase two-letter code derived from ISO 3166. 
 </remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.ClientAppInfoHeader.ClientCulture">
 <summary>
 The name of the current culture used by the client application that is invoking the web service.
 </summary>
 <remarks>
 The culture name in the format "&lt;languagecode2&gt;-&lt;country/regioncode2&gt;", 
 where &lt;languagecode2&gt; is a lowercase two-letter code derived from ISO 639-1 
 and &lt;country/regioncode2&gt; is an uppercase two-letter code derived from ISO 3166. 
 </remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.ClientAppInfoHeader.TimeZone">
 <summary>
 The standard name of the time zone used by the client application that is invoking the web service.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ClientAppInfoHeader.ClientAppLicenseID">
 <summary>
 An optional value that uniquely defines a component within the client application that is invoking the web service.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.Common">
 <summary>
 Contains common utility methods
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.Common.PathParserViewNotFound">
 <summary>
 The source query view has been changed or removed.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.Common.AdHocQueryMissingViewFields">
 <summary>
 A field that exists in the query definition can no longer be found.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.Common.GetAvailableDatabases">
 <summary>
 Gets the list of REDatabases that have been specified in the web.config file on the server
 </summary>
 <returns>An array of strings, one for each database name specified in the DBList app settings key</returns>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.Common.GetAvailableDatabases(System.Guid)">
 <summary>
 Gets the list of REDatabases that have been specified in the web.config file on the server
 </summary>
 <param name="siteInfoID">If SiteManager is configured, a SiteInfoID will be required to get a list of databases. If none is specified, an exception will be thrown.</param>
 <returns>An array of strings, one for each database name specified in the DBList app settings key</returns>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.Common.ObjectToXml(System.Object)">
 <summary>
 Returns the string generated by the System.XML.Serialization engine when the object is serialized to XML.
 </summary>
 <param name="o">An object to serialize</param>
 <returns>An XML string</returns>
 <remarks>Only an object which is "XML Serialization friendly" can be serialized.
 <para>
 Note that this type of serialization is completely unrelated to the SerializableAttribute (Binary serialization).
 </para>
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.Common.GetDbAppLock(System.Data.SqlClient.SqlConnection,System.String,System.Int32)">
 <summary>
 Creates an application resource lock on the specified database connection by calling the sp_getapplock stored procedure.
 </summary>
 <param name="conn">Connection on which to place the lock.</param>
 <param name="lockName">Name of the lock.</param>
 <param name="lockTimeout">The lock timeout value in milliseconds.</param>
 <returns>Return code from the execution of the stored procedure.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.Common.ReleaseDbAppLock(System.Data.SqlClient.SqlConnection,System.String)">
 <summary>
 Releases an application resource lock on the specified database connection by calling the sp_releaseapplock stored procedure.
 </summary>
 <param name="conn">Connection on which the lock exists.</param>
 <param name="lockName">Name of the lock.</param>
</member>
<member name="M:Blackbaud.AppFx.Server.Common.CreateNamedException(System.String)">
 <summary>
 Creates a <see cref="T:Blackbaud.AppFx.Server.ServiceException"/> using the provided exception name.  The appropriate exception message will be extracted 
 from the <see cref="T:Blackbaud.AppFx.Server.My.Resources.NamedExceptions"/> resource file.
 </summary>
 <param name="exceptionName">Name of the resource contained in the <see cref="T:Blackbaud.AppFx.Server.My.Resources.NamedExceptions"/> resource file.</param>
 <returns><see cref="T:Blackbaud.AppFx.Server.ServiceException"/> to throw.</returns>
 <remarks>
 <seealso cref="T:Blackbaud.AppFx.Server.ServiceException"/>
 <seealso cref="T:Blackbaud.AppFx.Server.My.Resources.NamedExceptions"/>
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.Common.CreateNamedException(System.String,System.Object[])">
 <summary>
 Creates a <see cref="T:Blackbaud.AppFx.Server.ServiceException"/> using the provided exception name.  The appropriate exception message will be extracted 
 from the <see cref="T:Blackbaud.AppFx.Server.My.Resources.NamedExceptions"/> resource file and formatted with the provided arguments.
 </summary>
 <param name="exceptionName">Name of the resource contained in the <see cref="T:Blackbaud.AppFx.Server.My.Resources.NamedExceptions"/> resource file.</param>
 <param name="args">Arguments used to format the exception message.</param>
 <returns><see cref="T:Blackbaud.AppFx.Server.ServiceException"/> to throw.</returns>
 <remarks>
 <seealso cref="T:Blackbaud.AppFx.Server.ServiceException"/>
 <seealso cref="T:Blackbaud.AppFx.Server.My.Resources.NamedExceptions"/>
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.Common.BuildImageURL(System.String,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Creates a URL that can be used to download images from the server.  This includes images defined in the browser.
 </summary>
 <remarks>Used primarily for some some of our dynamic html pages</remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.Common.SetCulture(System.Web.HttpContext,Blackbaud.AppFx.Server.ClientAppInfoHeader)">
 <summary>
 Sets the current thread's culture based on parameters on the http context or the clientAppInfoHeader
 </summary>
 <param name="context">The http context to check for culture parameters</param>
 <param name="clientAppInfo">The client app info header to use if no http parameters are found</param>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.Common.SetCulture(System.Web.HttpContext)">
 <summary>
 Sets the current thread's culture based on parameters on the http context
 </summary>
 <param name="context">The http context to check for culture parameters</param>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.Common.FormMetadataHasCustomFormComponent(Blackbaud.AppFx.XmlTypes.FormMetaData)">
 <summary>
 Returns true if the formmetadata has a customcomponent defined for the FormUIComponent
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SqlExceptionNumber">
 <summary>
 These values correspond to error numbers returned by SQL Server when a SqlException has occurred.
 </summary>
 <remarks>
 See SQL Server 2005 Books Online for a complete list of all error numbers.
 </remarks>
</member>
<member name="F:Blackbaud.AppFx.Server._Default1._form1">
<summary>
form1 control.
</summary>
<remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
</member>
<member name="F:Blackbaud.AppFx.Server._Default1._chooseDatabasePanel">
<summary>
chooseDatabasePanel control.
</summary>
<remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
</member>
<member name="F:Blackbaud.AppFx.Server._Default1._databaseGrid">
<summary>
databaseGrid control.
</summary>
<remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
</member>
<member name="F:Blackbaud.AppFx.Server._Default1._errorPanel">
<summary>
errorPanel control.
</summary>
<remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
</member>
<member name="F:Blackbaud.AppFx.Server._Default1._errorLabel">
<summary>
errorLabel control.
</summary>
<remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
</member>
<member name="F:Blackbaud.AppFx.Server._Default1._servicesPanel">
<summary>
servicesPanel control.
</summary>
<remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
</member>
<member name="F:Blackbaud.AppFx.Server._Default1._copyrightYearLabel">
<summary>
copyrightYearLabel control.
</summary>
<remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.Heartbeat.HeartbeatManager">
 <summary>
 Manages creating heartbeat timers for each site / database being used in this process.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.Heartbeat.HeartbeatManager.Current">
 <summary>
 Access to the HeartbeatManager singleton.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.Heartbeat.HeartbeatManager.Dispose">
 <summary>
 Cleans up the heartbeat manager by cancelling all heartbeats.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.Heartbeat.HeartbeatManager.InitializeHeartbeat(Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Ensures a heartbeat is established for the database in the given request context.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.Heartbeat.HeartbeatManager.StartHearbeat(Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Ensure the heartbeat for the current request context is started.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.Heartbeat.HeartbeatManager.StopHearbeat(Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Stops the heartbeat for the current request context.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.Heartbeat.HeartbeatManager.BuildHearbeatUrl(Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the hearbeat URL derived from the specified Infinity request context.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.Heartbeat.HeartbeatManager.GetKey(Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Builds a unique key for the request context.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.Heartbeat.HeartbeatManager.Heartbeat">
 <summary>
 Represents the heartbeat for a single site/database.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.Heartbeat.HeartbeatManager.Heartbeat.Start">
 <summary>
 Starts a periodic heartbeat to the given URL.
 If the timer is already running, then this will have no affect.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.Heartbeat.HeartbeatManager.Heartbeat.Stop">
 <summary>
 Stops the periodic heartbeat to the given URL.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.Heartbeat.HeartbeatManager.Heartbeat.PingServer(System.Boolean)">
 <summary>
 Causes a single heartbeat for the configured site url / database.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.Heartbeat.HeartbeatManager.Heartbeat.IsRunning">
 <summary>
 Returns whether a timer is configured for the heartbeat.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.FileUploads.PackageUploadedFiles(Blackbaud.AppFx.Server.RequestContext,System.Collections.ArrayList@,System.Guid,Blackbaud.AppFx.XmlTypes.DataForms.DataFormItem,Blackbaud.AppFx.Server.ImplementationType)">
 <summary>
 Package any uploaded files into their respective data form file fields.  For SP save, the file field will
 contain an object of type SqlTypes.SqlBytes(IO.Stream).  For CLR save, the file field will contain the
 full path to the uploaded temporary file.  Also, for the file name form field, it strips off the path 
 of the filename so that the database saves just the name of the file.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Blackbaud.AppFx.Server.FileUploads.FileUploadTempDirectory(Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the temporary directory to be used for uploading files to the server.
 </summary>
 <value>The temporary directory for file uploads.</value>
 <returns>The temporary directory to be used for uploading files to the server</returns>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.FileUploads.CleanupUploadedFiles(Blackbaud.AppFx.Server.RequestContext,System.Collections.ArrayList@,System.Guid,Blackbaud.AppFx.Server.ServiceRequest)">
 <summary>
 Closes all uploaded file streams and deletes the uploaded temporary files.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.FormDefinitionDataValidator.ValidateEmailAddress(Blackbaud.AppFx.XmlTypes.FormField,System.Object)">
 <summary>
 Validates an e-mail address for the correct format.  Note that all validation functions assume the value is required; if a field may not be required, the method <see cref="M:Blackbaud.AppFx.Server.FormDefinitionDataValidator.IsBlankAndNotRequired(Blackbaud.AppFx.XmlTypes.FormField,System.Object@)"/>
 should be called before calling this function to verify the field is required.
 </summary>
 <param name="fld">Field to validate.</param>
 <param name="value">Value to validate.</param>
 <remarks>
 A valid value must consist of a user name and domain name or IP address separated by the "@" symbol.  Verified by a regular expression.
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.FormDefinitionDataValidator.ValidateWebAddress(Blackbaud.AppFx.XmlTypes.FormField,System.Object)">
 <summary>
 Validates a web address for a valid URI.  Note that all validation functions assume the value is required; if a field may not be required, the method <see cref="M:Blackbaud.AppFx.Server.FormDefinitionDataValidator.IsBlankAndNotRequired(Blackbaud.AppFx.XmlTypes.FormField,System.Object@)"/>
 should be called before calling this function to verify the field is required.
 </summary>
 <param name="fld">Field to validate.</param>
 <param name="value">Value to validate.</param>
</member>
<member name="M:Blackbaud.AppFx.Server.FormDefinitionDataValidator.ValidateMonthDayField(Blackbaud.AppFx.XmlTypes.FormField,System.Object@)">
 <summary>
 Validates a month/day value.  Note that all validation functions assume the value is required; if a field may not be required, the method <see cref="M:Blackbaud.AppFx.Server.FormDefinitionDataValidator.IsBlankAndNotRequired(Blackbaud.AppFx.XmlTypes.FormField,System.Object@)"/>
 should be called before calling this function to verify the field is required.
 </summary>
 <param name="fld">Field to validate.</param>
 <param name="value">Value to validate.</param>
 <remarks>
 A valid value must consist of four numeric characters with no "/" in between.  The first two digits must represent a valid month (01 to 12), while the last two digits
 must represent a valid day (01 to 31).
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.FormDefinitionDataValidator.ValidateBooleanField(Blackbaud.AppFx.XmlTypes.FormField,System.Object)">
 <summary>
 Validates a boolean value.  Note that all validation functions assume the value is required; if a field may not be required, the method <see cref="M:Blackbaud.AppFx.Server.FormDefinitionDataValidator.IsBlankAndNotRequired(Blackbaud.AppFx.XmlTypes.FormField,System.Object@)"/>
 should be called before calling this function to verify the field is required.
 </summary>
 <param name="fld">Field to validate.</param>
 <param name="value">Value to validate.</param>
 <remarks>
 A valid values are "0", "1", "true", or "false" (with the latter two being case-insensitive).
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.FormDefinitionDataValidator.ValidateGuidField(Blackbaud.AppFx.XmlTypes.FormField,System.Object)">
 <summary>
 Validates a GUID value.  Note that all validation functions assume the value is required; if a field may not be required, the method <see cref="M:Blackbaud.AppFx.Server.FormDefinitionDataValidator.IsBlankAndNotRequired(Blackbaud.AppFx.XmlTypes.FormField,System.Object@)"/>
 should be called before calling this function to verify the field is required.
 </summary>
 <param name="fld">Field to validate.</param>
 <param name="value">Value to validate.</param>
 <remarks>
 Validated by a regular expression.
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.FormDefinitionDataValidator.ValidateCodeTableField(Blackbaud.AppFx.XmlTypes.FormField,System.Object)">
 <summary>
 Validates a code table value by verifying the value is a valid GUID.  Note that all validation functions assume the value is required; if a field may not be required, the method <see cref="M:Blackbaud.AppFx.Server.FormDefinitionDataValidator.IsBlankAndNotRequired(Blackbaud.AppFx.XmlTypes.FormField,System.Object@)"/>
 should be called before calling this function to verify the field is required.
 </summary>
 <param name="fld">Field to validate.</param>
 <param name="value">Value to validate.</param>
 <remarks>
 Validated by a regular expression.
 <seealso cref="M:Blackbaud.AppFx.Server.FormDefinitionDataValidator.ValidateGuidField(Blackbaud.AppFx.XmlTypes.FormField,System.Object)"/>
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.FormDefinitionDataValidator.ValidateXmlField(Blackbaud.AppFx.XmlTypes.FormField,System.Object)">
 <summary>
 Validates the value is a valid XML document.  Note that all validation functions assume the value is required; if a field may not be required, the method <see cref="M:Blackbaud.AppFx.Server.FormDefinitionDataValidator.IsBlankAndNotRequired(Blackbaud.AppFx.XmlTypes.FormField,System.Object@)"/>
 should be called before calling this function to verify the field is required.
 </summary>
 <param name="fld">Field to validate.</param>
 <param name="value">Value to validate.</param>
</member>
<member name="M:Blackbaud.AppFx.Server.FormDefinitionDataValidator.ValidateDateField(Blackbaud.AppFx.XmlTypes.FormField,System.Object@)">
 <summary>
 Validates the value is a valid date.  Note that all validation functions assume the value is required; if a field may not be required, the method <see cref="M:Blackbaud.AppFx.Server.FormDefinitionDataValidator.IsBlankAndNotRequired(Blackbaud.AppFx.XmlTypes.FormField,System.Object@)"/>
 should be called before calling this function to verify the field is required.
 </summary>
 <param name="fld">Field to validate.</param>
 <param name="value">Value to validate.</param>
</member>
<member name="M:Blackbaud.AppFx.Server.FormDefinitionDataValidator.ValidateDateWithTimeOffsetField(Blackbaud.AppFx.XmlTypes.FormField,System.Object@)">
 <summary>
 Validates the value is a valid datetimeoffset. Now that all validation functions assume the value is required; if a field may not be required, the method <see cref="M:Blackbaud.AppFx.Server.FormDefinitionDataValidator.IsBlankAndNotRequired(Blackbaud.AppFx.XmlTypes.FormField,System.Object@)"/>
 should be called before calling this function to verify the field is required.
 </summary>
 <param name="fld">Field to validate.</param>
 <param name="value">Value to validate.</param>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.FormDefinitionDataValidator.ValidateEnumField(Blackbaud.AppFx.XmlTypes.FormField,System.Object)">
 <summary>
 Validates an enum value by comparing it to a list of valid values.  Note that all validation functions assume the value is required; if a field may not be required, the method <see cref="M:Blackbaud.AppFx.Server.FormDefinitionDataValidator.IsBlankAndNotRequired(Blackbaud.AppFx.XmlTypes.FormField,System.Object@)"/>
 should be called before calling this function to verify the field is required.
 </summary>
 <param name="fld">Field to validate.</param>
 <param name="value">Value to validate.</param>
</member>
<member name="M:Blackbaud.AppFx.Server.FormDefinitionDataValidator.ValidateIntegerField(Blackbaud.AppFx.XmlTypes.FormField,System.Object@)">
 <summary>
 Validates a 32-bit integer value.  Note that all validation functions assume the value is required; if a field may not be required, the method <see cref="M:Blackbaud.AppFx.Server.FormDefinitionDataValidator.IsBlankAndNotRequired(Blackbaud.AppFx.XmlTypes.FormField,System.Object@)"/>
 should be called before calling this function to verify the field is required.
 </summary>
 <param name="fld">Field to validate.</param>
 <param name="value">Value to validate.</param>
 <remarks>
 A valid value must not contain a decimal and must be within the range of min and max values for its type.
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.FormDefinitionDataValidator.ValidateByteField(Blackbaud.AppFx.XmlTypes.FormField,System.Object)">
 <summary>
 Validates a byte value.  Note that all validation functions assume the value is required; if a field may not be required, the method <see cref="M:Blackbaud.AppFx.Server.FormDefinitionDataValidator.IsBlankAndNotRequired(Blackbaud.AppFx.XmlTypes.FormField,System.Object@)"/>
 should be called before calling this function to verify the field is required.
 </summary>
 <param name="fld">Field to validate.</param>
 <param name="value">Value to validate.</param>
 <remarks>
 A valid value must not contain a decimal and must be within the range of min and max values for its type.
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.FormDefinitionDataValidator.ValidateShortField(Blackbaud.AppFx.XmlTypes.FormField,System.Object)">
 <summary>
 Validates a 16-bit integer value.  Note that all validation functions assume the value is required; if a field may not be required, the method <see cref="M:Blackbaud.AppFx.Server.FormDefinitionDataValidator.IsBlankAndNotRequired(Blackbaud.AppFx.XmlTypes.FormField,System.Object@)"/>
 should be called before calling this function to verify the field is required.
 </summary>
 <param name="fld">Field to validate.</param>
 <param name="value">Value to validate.</param>
 <remarks>
 A valid value must not contain a decimal and must be within the range of min and max values for its type.
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.FormDefinitionDataValidator.ValidateMoneyField(Blackbaud.AppFx.XmlTypes.FormField,System.Object@,Blackbaud.AppFx.CurrencyFormat)">
 <summary>
 Validates an money value.  Note that all validation functions assume the value is required; if a field may not be required, the method <see cref="M:Blackbaud.AppFx.Server.FormDefinitionDataValidator.IsBlankAndNotRequired(Blackbaud.AppFx.XmlTypes.FormField,System.Object@)"/>
 should be called before calling this function to verify the field is required.
 </summary>
 <param name="fld">Field to validate.</param>
 <param name="value">Value to validate.</param>
 <param name="currency">The currency format of the money value.</param>
 <remarks>
 A valid value may contain currency symbols as specified by the currency format and must be in the range of valid min and max values for the SQL MONEY data type.
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.FormDefinitionDataValidator.ValidateDecimalField(Blackbaud.AppFx.XmlTypes.FormField,System.Object)">
 <summary>
 Validates a decimal value.  Note that all validation functions assume the value is required; if a field may not be required, the method <see cref="M:Blackbaud.AppFx.Server.FormDefinitionDataValidator.IsBlankAndNotRequired(Blackbaud.AppFx.XmlTypes.FormField,System.Object@)"/>
 should be called before calling this function to verify the field is required.
 </summary>
 <param name="fld">Field to validate.</param>
 <param name="value">Value to validate.</param>
 <remarks>
 A valid value must be within the range of min and max values for its type.
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.FormDefinitionDataValidator.ValidateLongField(Blackbaud.AppFx.XmlTypes.FormField,System.Object)">
 <summary>
 Validates a 64-bit integer value.  Note that all validation functions assume the value is required; if a field may not be required, the method <see cref="M:Blackbaud.AppFx.Server.FormDefinitionDataValidator.IsBlankAndNotRequired(Blackbaud.AppFx.XmlTypes.FormField,System.Object@)"/>
 should be called before calling this function to verify the field is required.
 </summary>
 <param name="fld">Field to validate.</param>
 <param name="value">Value to validate.</param>
 <remarks>
 A valid value must not contain a decimal and must be within the range of min and max values for its type.
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.FormDefinitionDataValidator.ValidateHourMinuteField(Blackbaud.AppFx.XmlTypes.FormField,System.Object@)">
 <summary>
 Validates a hour/minute value.  Note that all validation functions assume the value is required; if a field may not be required, the method <see cref="M:Blackbaud.AppFx.Server.FormDefinitionDataValidator.IsBlankAndNotRequired(Blackbaud.AppFx.XmlTypes.FormField,System.Object@)"/>
 should be called before calling this function to verify the field is required.
 </summary>
 <param name="fld">Field to validate.</param>
 <param name="value">Value to validate.</param>
 <remarks>
 A valid value must be 5 characters long and only contain numeric characters other than the : separator.  Hours and minutes must be within valid min and max values.
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.FormDefinitionDataValidator.ValidateTimeField(Blackbaud.AppFx.XmlTypes.FormField,System.Object@)">
 <summary>
 Validates a time value.  Note that all validation functions assume the value is required; if a field may not be required, the method <see cref="M:Blackbaud.AppFx.Server.FormDefinitionDataValidator.IsBlankAndNotRequired(Blackbaud.AppFx.XmlTypes.FormField,System.Object@)"/>
 should be called before calling this function to verify the field is required.
 </summary>
 <param name="fld">Field to validate.</param>
 <param name="value">Value to validate.</param>
 <remarks>
 A valid value must only contain numeric characters other than the : separator.  Hours, minutes and seconds must be within valid min and max values.
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.FormDefinitionDataValidator.ValidateFuzzyDateField(Blackbaud.AppFx.XmlTypes.FormField,System.Object@)">
 <summary>
 Validates a fuzzy date value.  Note that all validation functions assume the value is required; if a field may not be required, the method <see cref="M:Blackbaud.AppFx.Server.FormDefinitionDataValidator.IsBlankAndNotRequired(Blackbaud.AppFx.XmlTypes.FormField,System.Object@)"/>
 should be called before calling this function to verify the field is required.
 </summary>
 <param name="fld">Field to validate.</param>
 <param name="value">Value to validate.</param>
 <remarks>
 A valid value must contain 4 (year only), 6 (year and month), or 8 (year, month, and day) digits.  Year must be within the valid min and max values for the SQL DATETIME type.
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.FormDefinitionDataValidator.ValidateTextField(Blackbaud.AppFx.XmlTypes.FormField,System.Object@)">
 <summary>
 Validates a string value.  Note that all validation functions assume the value is required; if a field may not be required, the method <see cref="M:Blackbaud.AppFx.Server.FormDefinitionDataValidator.IsBlankAndNotRequired(Blackbaud.AppFx.XmlTypes.FormField,System.Object@)"/>
 should be called before calling this function to verify the field is required.
 </summary>
 <param name="fld">Field to validate.</param>
 <param name="value">Value to validate.</param>
 <remarks>
 A valid value must be either of type String or a data type that can be converted to a string, and its length must be less than or equal to the field's max length.
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.FormDefinitionDataValidator.IsBlankAndNotRequired(Blackbaud.AppFx.XmlTypes.FormField,System.Object@)">
 <summary>
 Checks to see if a field's value is blank and if the field is not required.  If the field's value is blank and the field is required, an exception
 will be thrown; otherwise, a flag will be returned indicating that the field is either required or is not required but has a value.  This method will
 typically be used before validating a field to determine whether the field has a value that should be validated or the field has been left blank
 and therefore does not need to be validated.
 </summary>
 <param name="field">Field to check.</param>
 <param name="value">Value of the field.</param>
 <returns>Flag indicating whether the field is blank and not required.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.FormDefinitionDataValidator.GetBlankValueForField(Blackbaud.AppFx.XmlTypes.FormField)">
 <summary>
 Returns the default blank value for the given field type
 </summary>
 <param name="field">Field to check.</param>
 <returns>The valid blank value for the given field</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.FormDefinitionDataValidator.ValidateSqlMinMax(Blackbaud.AppFx.XmlTypes.FormField,System.DateTime)">
 <summary>
 Validates a date value that, while it may be a valid .NET date, may fall outside the range of valid SQL DATETIME values.
 </summary>
 <param name="field">Field to validate.</param>
 <param name="value">Date to validate.</param>
</member>
<member name="M:Blackbaud.AppFx.Server.FormDefinitionDataValidator.ValidateSqlMinMax(Blackbaud.AppFx.XmlTypes.FormField,System.DateTimeOffset)">
 <summary>
 Validates a datetimeoffset value that, while it may be a valid .NET datetimeoffset, may fall outside the range of valid SQL DATETIMEOFFSET values.
 </summary>
 <param name="field">Field to validate.</param>
 <param name="value">Date to validate.</param>
</member>
<member name="T:Blackbaud.AppFx.Server.IDSetCreator">
 <summary>
 Provides methods for saving a static set of IDs to a database table, allowing the set of IDs to be used later by various processes in the system.
 </summary>
 <remarks>
 <seealso cref="T:Blackbaud.AppFx.Server.AdHocQuery"/>
 <seealso cref="T:Blackbaud.AppFx.Server.SmartQuery"/>
 <seealso cref="T:Blackbaud.AppFx.Server.SmartQueryInstance"/>
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.IDSetCreator.Save(Blackbaud.AppFx.Server.RequestContext,System.Collections.ICollection,System.Data.SqlDbType,System.String,System.String,System.Guid,System.Boolean,System.String@)">
 <summary>
 Creates an ID set based on a collection of IDs and saves it to a table in the database.
 </summary>
 <param name="context">Context from which the method is called.</param>
 <param name="ids">Collection containing the collection of IDs to save.</param>
 <param name="idColumnDbType">SQL data type of the ID field.</param>
 <param name="name">User-friendly name of the ID set.</param>
 <param name="description">Description of the ID set.</param>
 <param name="recordTypeID">Record type of the ID.</param>
 <param name="useInQueryDesigner">Flag indicating the ID set should be available in the ad-hoc query designer.</param>
 <param name="idSetTableName">Name of the ID set table.  If null, a table name will be generated and passed back by reference.</param>
 <returns>ID of the ID set register entry.</returns>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.IDSetCreator.Save(Blackbaud.AppFx.Server.RequestContext,System.Collections.ICollection,System.Data.SqlDbType,System.String,System.String,System.Guid,System.Boolean,System.String@,System.Nullable{System.Guid},System.Int32)">
 <summary>
 Creates an ID set based on a collection of IDs and saves it to a table in the database.
 </summary>
 <param name="context">Context from which the method is called.</param>
 <param name="ids">Collection containing the collection of IDs to save.</param>
 <param name="idColumnDbType">SQL data type of the ID field.</param>
 <param name="name">User-friendly name of the ID set.</param>
 <param name="description">Description of the ID set.</param>
 <param name="recordTypeID">Record type of the ID.</param>
 <param name="useInQueryDesigner">Flag indicating the ID set should be available in the ad-hoc query designer.</param>
 <param name="idSetTableName">Name of the ID set table.  If null, a table name will be generated and passed back by reference.</param>
 <param name="ownerID">Owner ID of the IS set.</param>
 <param name="timeOut">Length of SQL command timeout in seconds.</param>
 <returns>ID of the ID set register entry.</returns>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.IDSetCreator.Save(Blackbaud.AppFx.Server.RequestContext,System.Collections.ICollection,System.Data.SqlDbType,System.String,System.String,System.Guid,System.Boolean,System.String@,System.Nullable{System.Guid})">
 <summary>
 Creates an ID set based on a collection of IDs and saves it to a table in the database.
 </summary>
 <param name="context">Context from which the method is called.</param>
 <param name="ids">Collection containing the collection of IDs to save.</param>
 <param name="idColumnDbType">SQL data type of the ID field.</param>
 <param name="name">User-friendly name of the ID set.</param>
 <param name="description">Description of the ID set.</param>
 <param name="recordTypeID">Record type of the ID.</param>
 <param name="useInQueryDesigner">Flag indicating the ID set should be available in the ad-hoc query designer.</param>
 <param name="idSetTableName">Name of the ID set table.  If null, a table name will be generated and passed back by reference.</param>
 <param name="ownerID">Owner ID of the IS set.</param>
 <returns>ID of the ID set register entry.</returns>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.IDSetCreator.Save(Blackbaud.AppFx.Server.RequestContext,System.Data.IDataReader,System.String,System.Data.SqlDbType,System.String,System.String,System.Guid,System.Boolean,System.String@)">
 <summary>
 Creates an ID set based on records from an IDataReader and saves it to a table in the database.
 </summary>
 <param name="context">Context from which the method is called.</param>
 <param name="resultsReader">Data reader containing the IDs to save to the ID set.</param>
 <param name="idField">Name of the field in the reader which represents the ID field.</param>
 <param name="idColumnDbType">SQL data type of the ID field.</param>
 <param name="name">User-friendly name of the ID set.</param>
 <param name="description">Description of the ID set.</param>
 <param name="recordTypeID">Record type of the ID.</param>
 <param name="useInQueryDesigner">Flag indicating the ID set should be available in the ad-hoc query designer.</param>
 <param name="idSetTableName">Name of the ID set table.  If null, a table name will be generated and passed back by reference.</param>
 <returns>ID of the ID set register entry.</returns>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.IDSetCreator.Save(Blackbaud.AppFx.Server.RequestContext,System.String,System.String,System.String,System.Guid,System.Boolean,System.String@)">
 <summary>
 Creates an ID set based on records from an IDataReader and saves it to a table in the database.
 </summary>
 <param name="context">Context from which the method is called.</param>
 <param name="sql">SQL statement that will be used to inser the IDs into the ID set table.</param>    
 <param name="name">User-friendly name of the ID set.</param>
 <param name="description">Description of the ID set.</param>
 <param name="recordTypeID">Record type of the ID.</param>
 <param name="useInQueryDesigner">Flag indicating the ID set should be available in the ad-hoc query designer.</param>
 <param name="idSetTableName">Name of the ID set table.  If null, a table name will be generated and passed back by reference.</param>
 <returns>ID of the ID set register entry.</returns>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.IDSetCreator.Save(System.Data.SqlClient.SqlConnection,Blackbaud.AppFx.Server.RequestContext,System.String,System.String,System.String,System.Guid,System.Boolean,System.String@)">
 <summary>
 Creates an ID set based on records from an IDataReader and saves it to a table in the database.
 </summary>
 <param name="conn">The connection to use when creating the id set.</param> 
 <param name="context">Context from which the method is called.</param>
 <param name="sql">SQL statement that will be used to inser the IDs into the ID set table.</param>    
 <param name="name">User-friendly name of the ID set.</param>
 <param name="description">Description of the ID set.</param>
 <param name="recordTypeID">Record type of the ID.</param>
 <param name="useInQueryDesigner">Flag indicating the ID set should be available in the ad-hoc query designer.</param>
 <param name="idSetTableName">Name of the ID set table.  If null, a table name will be generated and passed back by reference.</param>
 <returns>ID of the ID set register entry.</returns>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.IDSetCreator.Save(System.Data.SqlClient.SqlConnection,Blackbaud.AppFx.Server.RequestContext,System.String,System.String,System.String,System.Guid,System.Boolean,System.String@,System.Guid)">
 <summary>
 Creates an ID set based on records from an IDataReader and saves it to a table in the database.
 </summary>
 <param name="conn">The connection to use when creating the id set.</param> 
 <param name="context">Context from which the method is called.</param>
 <param name="sql">SQL statement that will be used to inser the IDs into the ID set table.</param>    
 <param name="name">User-friendly name of the ID set.</param>
 <param name="description">Description of the ID set.</param>
 <param name="recordTypeID">Record type of the ID.</param>
 <param name="useInQueryDesigner">Flag indicating the ID set should be available in the ad-hoc query designer.</param>
 <param name="idSetTableName">Name of the ID set table.  If null, a table name will be generated and passed back by reference.</param>
 <param name="ownerID">Owner of the ID set.</param>
 <returns>ID of the ID set register entry.</returns>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.IDSetCreator.Save(System.Data.SqlClient.SqlConnection,Blackbaud.AppFx.Server.RequestContext,System.String,System.String,System.String,System.Guid,System.Boolean,System.String,System.String@)">
 <summary>
 Creates an ID set based on records from an IDataReader and saves it to a table in the database.
 </summary>
 <param name="conn">The connection to use when creating the id set.</param> 
 <param name="context">Context from which the method is called.</param>
 <param name="sql">SQL statement that will be used to inser the IDs into the ID set table.</param>    
 <param name="name">User-friendly name of the ID set.</param>
 <param name="description">Description of the ID set.</param>
 <param name="recordTypeID">Record type of the ID.</param>
 <param name="useInQueryDesigner">Flag indicating the ID set should be available in the ad-hoc query designer.</param>
 <param name="idColumnTypeName">SQL data type of the ID field.</param>
 <param name="idSetTableName">Name of the ID set table.  If null, a table name will be generated and passed back by reference.</param>
 <returns>ID of the ID set register entry.</returns>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.IDSetCreator.Save(System.Data.SqlClient.SqlConnection,Blackbaud.AppFx.Server.RequestContext,System.String,System.String,System.String,System.Guid,System.Boolean,System.String,System.String@,System.Nullable{System.Guid})">
 <summary>
 Creates an ID set based on records from an IDataReader and saves it to a table in the database.
 </summary>
 <param name="conn">The connection to use when creating the id set.</param> 
 <param name="context">Context from which the method is called.</param>
 <param name="sql">SQL statement that will be used to inser the IDs into the ID set table.</param>    
 <param name="name">User-friendly name of the ID set.</param>
 <param name="description">Description of the ID set.</param>
 <param name="recordTypeID">Record type of the ID.</param>
 <param name="useInQueryDesigner">Flag indicating the ID set should be available in the ad-hoc query designer.</param>
 <param name="idColumnTypeName">SQL data type of the ID field.</param>
 <param name="idSetTableName">Name of the ID set table.  If null, a table name will be generated and passed back by reference.</param>
 <param name="ownerID">Owner of the ID set.</param>
 <returns>ID of the ID set register entry.</returns>
 <remarks></remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.IDSetReader">
 <summary>
 Provides a method for retrieving a database object which contains the results of an ID set, whether it be an existing table, a table-valued function,
 or a temp table created from the results of a stored procedure execution.
 </summary>
 <remarks>
 <seealso cref="T:Blackbaud.AppFx.Server.AdHocQuery"/>
 <seealso cref="T:Blackbaud.AppFx.Server.SmartQuery"/>
 <seealso cref="T:Blackbaud.AppFx.Server.SmartQueryInstance"/>
 </remarks>
</member>
<member name="P:Blackbaud.AppFx.Server.IDSetReader.ID">
 <summary>
 ID of the ID set record in the register table
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.IDSetReader.Name">
 <summary>
 Name of the ID set record in the register table
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.IDSetReader.Description">
 <summary>
 Description of the ID set record in the register table
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.IDSetReader.RecordTypeID">
 <summary>
 Record type to which the ID set is associated.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.IDSetReader.UseInQueryDesigner">
 <summary>
 Flag which indicates whether this ID set should be an available filter to the user
 when creating an ad-hoc query.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.IDSetReader.DBObjectName">
 <summary>
 Name of the database object which represents the results of the ID set.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.IDSetReader.DBObjectType">
 <summary>
 Type of database object which represents the results of the ID set.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.IDSetReader.IDColumnName">
 <summary>
 Column name of the ID field in the ID set results.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.IDSetReader.IsStatic">
 <summary>
 Indicates whether the ID set is based on a static table.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.IDSetReader.#ctor(System.Guid,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Loads an existing ID set from the register table.  An ID set instantiated with this constructor will be read-only and
 cannot be saved.
 </summary>
 <param name="id">ID of the existing ID set.</param>
 <param name="context">Web service request context from which this constructor is being called.</param>
</member>
<member name="M:Blackbaud.AppFx.Server.IDSetReader.GetResultsTableOrFunctionName">
 <summary>
 Database table or table-valued function which can be queried for the results from the ID set.  Note that this property
 should always be used rather than the <see cref="P:Blackbaud.AppFx.Server.IDSetReader.DBObjectName"/> property, since this one will always guarantee a database
 object on which a T-SQL SELECT statement can be executed.
 </summary>
 <returns>Name of the database table or table-valued function.</returns>
</member>
<member name="P:Blackbaud.AppFx.Server.ImageProvider.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all resource lookups.
</summary>
</member>
<member name="M:Blackbaud.AppFx.Server.OlapDataSourceConnectionInfo.GetClientSideOleDbConnectionString">
 <summary>
 Returns an OLEDB connection string for use from a client side OLAP application (such as Excel).
 </summary>
 <returns>A connection string that can be used for an OLEDB connection.</returns>
 <remarks>If the data source is configured for HTTP access then this will be a connection string with a url for the datasource.
 Otherwise it will be the same as the server side OLEDB connection string.
 </remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.ProductConfiguration">
 <summary>
 Provides information about product specific configuration settings
 </summary>
 <remarks></remarks>
</member>
<member name="P:Blackbaud.AppFx.Server.ProductConfiguration.RecordSecurityModulesEnabled">
 <summary>
 Returns true if Record security modules that control record level security are enabled for this product installation.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Blackbaud.AppFx.Server.ProductConfiguration.ExtensionModulesEnabled">
 <summary>
 Returns true if extension modules loaded from extensions\modules\*.module.config files are enabled for this product installation.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Blackbaud.AppFx.Server.ProductConfiguration.VirtualPathProvidersEnabled">
 <summary>
 Returns true if virtual path providers loaded from vpp\*.vpp.config files are enabled for this product installation.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Blackbaud.AppFx.Server.ProductConfiguration.ScheduleHeartbeatEnabled">
 <summary>
 Returns true if the HeartbeatManager that polls for scheduled jobs defined in dbo.SCHEDULE is enabled or this product installation.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Blackbaud.AppFx.Server.ProductConfiguration.DataFormExtensionsEnabled">
 <summary>
 Returns true if the Data Form Extension feature is enabled for this product
 </summary>
 <value></value>
 <returns></returns>
 <remarks>The ability to register data form extensions that can extend existing forms is only supported in some products.  Products that do not need this functionality can detect 
 with this property if it is safe to optimize by skipping checking for data form extensions that are registered.</remarks>
</member>
<member name="P:Blackbaud.AppFx.Server.ProductConfiguration.WebDashboardEnabled">
 <summary>
 Returns true if the WebDashboard is enabled for this product installation.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>If VirtualPathProvidersEnabled is False then this will always be False</remarks>
</member>
<member name="P:Blackbaud.AppFx.Server.ProductConfiguration.AppInitializeByPassed">
 <summary>
 Returns true if the application initialize code in Blackbaud.AppFx.Server.AppInitialize that runs during the ASP.Net Pre-AppStart is bypassed.
 </summary>    
</member>
<member name="P:Blackbaud.AppFx.Server.ProductConfiguration.WebShellUIEnabled">
 <summary>
 Returns true if the WebShell UI is supported by this product installation.
 </summary>    
</member>
<member name="P:Blackbaud.AppFx.Server.ProductConfiguration.ActiveUserMonitoringEnabled">
 <summary>
 Returns true if Active User Monitoring is enabled for this product installation.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQuerySaveSearchListRequest">
 <summary>
 Creates or updates a search list based on ad-hoc query metadata and adds it to the catalog so it can be consumed by other areas of the application.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuerySaveSearchListRequest.SelectFields">
 <summary>
 Collection of <see cref="T:Blackbaud.AppFx.Server.AdHocQuerySelectField"/> objects which the user defined in the ad-hoc query.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuerySaveSearchListRequest.FilterFields">
 <summary>
 Collection of <see cref="T:Blackbaud.AppFx.Server.AdHocQueryFilterField"/> objects which the user defined in the ad-hoc query.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuerySaveSearchListRequest.SortFields">
 <summary>
 Collection of <see cref="T:Blackbaud.AppFx.Server.AdHocQuerySortField"/> objects which the user defined in the ad-hoc query.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuerySaveSearchListRequest.GroupFilterFields">
 <summary>
 Collection of <see cref="T:Blackbaud.AppFx.Server.AdHocQueryGroupFilterField"/> objects which the user defined in the ad-hoc query.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuerySaveSearchListRequest.SuppressDuplicateRows">
 <summary>
 Indicates whether the user wants duplicate rows in the query suppressed.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQuerySaveSearchListReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.AdHocQuerySaveSearchListRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQuerySaveSearchListProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.AdHocQuerySaveSearchListRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQuerySaveSearchListStartedWebEvent">
 <summary>
 Raised when the AdHocQuerySaveSearchList web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQuerySaveSearchListCompletedWebEvent">
 <summary>
 Raised when the AdHocQuerySaveSearchList web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQuerySaveSearchListExceptionWebEvent">
 <summary>
 Raised when the AdHocQuerySaveSearchList web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CancelAsyncOperationStartedWebEvent">
 <summary>
 Raised when the CancelAsyncOperation web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CancelAsyncOperationCompletedWebEvent">
 <summary>
 Raised when the CancelAsyncOperation web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CancelAsyncOperationExceptionWebEvent">
 <summary>
 Raised when the CancelAsyncOperation web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.BatchInsertErrorStartedWebEvent">
 <summary>
 Raised when the BatchInsertError web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.BatchInsertErrorCompletedWebEvent">
 <summary>
 Raised when the BatchInsertError web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.BatchInsertErrorExceptionWebEvent">
 <summary>
 Raised when the BatchInsertError web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.FeatureTipsGetTipSeenStartedWebEvent">
 <summary>
 Raised when the FeatureTipsGetTipSeen web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.FeatureTipsGetTipSeenCompletedWebEvent">
 <summary>
 Raised when the FeatureTipsGetTipSeen web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.FeatureTipsGetTipSeenExceptionWebEvent">
 <summary>
 Raised when the FeatureTipsGetTipSeen web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.FeatureTipsSetTipSeenStartedWebEvent">
 <summary>
 Raised when the FeatureTipsSetTipSeen web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.FeatureTipsSetTipSeenCompletedWebEvent">
 <summary>
 Raised when the FeatureTipsSetTipSeen web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.FeatureTipsSetTipSeenExceptionWebEvent">
 <summary>
 Raised when the FeatureTipsSetTipSeen web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ProcessStatsGetStartedWebEvent">
 <summary>
 Raised when the ProcessStatsGet web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ProcessStatsGetCompletedWebEvent">
 <summary>
 Raised when the ProcessStatsGet web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ProcessStatsGetExceptionWebEvent">
 <summary>
 Raised when the ProcessStatsGet web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SelfServicePasswordResetInfoGetStartedWebEvent">
 <summary>
 Raised when the SelfServicePasswordResetInfoGet web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SelfServicePasswordResetInfoGetCompletedWebEvent">
 <summary>
 Raised when the SelfServicePasswordResetInfoGet web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SelfServicePasswordResetInfoGetExceptionWebEvent">
 <summary>
 Raised when the SelfServicePasswordResetInfoGet web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserBatchTemplateSettingsGetStartedWebEvent">
 <summary>
 Raised when the UserBatchTemplateSettingsGet web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserBatchTemplateSettingsGetCompletedWebEvent">
 <summary>
 Raised when the UserBatchTemplateSettingsGet web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserBatchTemplateSettingsGetExceptionWebEvent">
 <summary>
 Raised when the UserBatchTemplateSettingsGet web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserBatchTemplateSettingsUpdateStartedWebEvent">
 <summary>
 Raised when the UserBatchTemplateSettingsUpdate web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserBatchTemplateSettingsUpdateCompletedWebEvent">
 <summary>
 Raised when the UserBatchTemplateSettingsUpdate web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserBatchTemplateSettingsUpdateExceptionWebEvent">
 <summary>
 Raised when the UserBatchTemplateSettingsUpdate web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserPageSettingsGetTabSettingsStartedWebEvent">
 <summary>
 Raised when the UserPageSettingsGetTabSettings web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserPageSettingsGetTabSettingsCompletedWebEvent">
 <summary>
 Raised when the UserPageSettingsGetTabSettings web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserPageSettingsGetTabSettingsExceptionWebEvent">
 <summary>
 Raised when the UserPageSettingsGetTabSettings web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserPageSettingsUpdateTabSettingsStartedWebEvent">
 <summary>
 Raised when the UserPageSettingsUpdateTabSettings web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserPageSettingsUpdateTabSettingsCompletedWebEvent">
 <summary>
 Raised when the UserPageSettingsUpdateTabSettings web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserPageSettingsUpdateTabSettingsExceptionWebEvent">
 <summary>
 Raised when the UserPageSettingsUpdateTabSettings web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserSearchListPersistentFieldsGetStartedWebEvent">
 <summary>
 Raised when the UserSearchListPersistentFieldsGet web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserSearchListPersistentFieldsGetCompletedWebEvent">
 <summary>
 Raised when the UserSearchListPersistentFieldsGet web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserSearchListPersistentFieldsGetExceptionWebEvent">
 <summary>
 Raised when the UserSearchListPersistentFieldsGet web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserListBuilderSettingsGetStartedWebEvent">
 <summary>
 Raised when the UserListBuilderSettingsGet web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserListBuilderSettingsGetCompletedWebEvent">
 <summary>
 Raised when the UserListBuilderSettingsGet web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserListBuilderSettingsGetExceptionWebEvent">
 <summary>
 Raised when the UserListBuilderSettingsGet web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserListBuilderSettingsUpdateStartedWebEvent">
 <summary>
 Raised when the UserListBuilderSettingsUpdate web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserListBuilderSettingsUpdateCompletedWebEvent">
 <summary>
 Raised when the UserListBuilderSettingsUpdate web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserListBuilderSettingsUpdateExceptionWebEvent">
 <summary>
 Raised when the UserListBuilderSettingsUpdate web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserPasswordResetStartedWebEvent">
 <summary>
 Raised when the UserPasswordReset web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserPasswordResetCompletedWebEvent">
 <summary>
 Raised when the UserPasswordReset web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserPasswordResetExceptionWebEvent">
 <summary>
 Raised when the UserPasswordReset web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserPasswordResetLinkSendStartedWebEvent">
 <summary>
 Raised when the UserPasswordResetLinkSend web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserPasswordResetLinkSendCompletedWebEvent">
 <summary>
 Raised when the UserPasswordResetLinkSend web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserPasswordResetLinkSendExceptionWebEvent">
 <summary>
 Raised when the UserPasswordResetLinkSend web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserPasswordResetTokenValidateStartedWebEvent">
 <summary>
 Raised when the UserPasswordResetTokenValidate web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserPasswordResetTokenValidateCompletedWebEvent">
 <summary>
 Raised when the UserPasswordResetTokenValidate web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserPasswordResetTokenValidateExceptionWebEvent">
 <summary>
 Raised when the UserPasswordResetTokenValidate web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.BatchDismissExceptionsStartedWebEvent">
 <summary>
 Raised when the BatchDismissExceptions web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.BatchDismissExceptionsCompletedWebEvent">
 <summary>
 Raised when the BatchDismissExceptions web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.BatchDismissExceptionsExceptionWebEvent">
 <summary>
 Raised when the BatchDismissExceptions web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQueryBuildReportDefinitionStartedWebEvent">
 <summary>
 Raised when the AdHocQueryBuildReportDefinition web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQueryBuildReportDefinitionCompletedWebEvent">
 <summary>
 Raised when the AdHocQueryBuildReportDefinition web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQueryBuildReportDefinitionExceptionWebEvent">
 <summary>
 Raised when the AdHocQueryBuildReportDefinition web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQueryGetDefinitionForDataListStartedWebEvent">
 <summary>
 Raised when the AdHocQueryGetDefinitionForDataList web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQueryGetDefinitionForDataListCompletedWebEvent">
 <summary>
 Raised when the AdHocQueryGetDefinitionForDataList web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQueryGetDefinitionForDataListExceptionWebEvent">
 <summary>
 Raised when the AdHocQueryGetDefinitionForDataList web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQueryGetDefinitionForReportStartedWebEvent">
 <summary>
 Raised when the AdHocQueryGetDefinitionForReport web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQueryGetDefinitionForReportCompletedWebEvent">
 <summary>
 Raised when the AdHocQueryGetDefinitionForReport web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQueryGetDefinitionForReportExceptionWebEvent">
 <summary>
 Raised when the AdHocQueryGetDefinitionForReport web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQueryGetDefinitionForSmartQueryStartedWebEvent">
 <summary>
 Raised when the AdHocQueryGetDefinitionForSmartQuery web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQueryGetDefinitionForSmartQueryCompletedWebEvent">
 <summary>
 Raised when the AdHocQueryGetDefinitionForSmartQuery web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQueryGetDefinitionForSmartQueryExceptionWebEvent">
 <summary>
 Raised when the AdHocQueryGetDefinitionForSmartQuery web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQueryGetSettingsStartedWebEvent">
 <summary>
 Raised when the AdHocQueryGetSettings web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQueryGetSettingsCompletedWebEvent">
 <summary>
 Raised when the AdHocQueryGetSettings web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQueryGetSettingsExceptionWebEvent">
 <summary>
 Raised when the AdHocQueryGetSettings web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQueryProcessGetDeferredResultStartedWebEvent">
 <summary>
 Raised when the AdHocQueryProcessGetDeferredResult web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQueryProcessGetDeferredResultCompletedWebEvent">
 <summary>
 Raised when the AdHocQueryProcessGetDeferredResult web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQueryProcessGetDeferredResultExceptionWebEvent">
 <summary>
 Raised when the AdHocQueryProcessGetDeferredResult web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQueryRefreshStaticIDSetStartedWebEvent">
 <summary>
 Raised when the AdHocQueryRefreshStaticIDSet web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQueryRefreshStaticIDSetCompletedWebEvent">
 <summary>
 Raised when the AdHocQueryRefreshStaticIDSet web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQueryRefreshStaticIDSetExceptionWebEvent">
 <summary>
 Raised when the AdHocQueryRefreshStaticIDSet web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQuerySaveDataListStartedWebEvent">
 <summary>
 Raised when the AdHocQuerySaveDataList web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQuerySaveDataListCompletedWebEvent">
 <summary>
 Raised when the AdHocQuerySaveDataList web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQuerySaveDataListExceptionWebEvent">
 <summary>
 Raised when the AdHocQuerySaveDataList web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQuerySaveReportStartedWebEvent">
 <summary>
 Raised when the AdHocQuerySaveReport web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQuerySaveReportCompletedWebEvent">
 <summary>
 Raised when the AdHocQuerySaveReport web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQuerySaveReportExceptionWebEvent">
 <summary>
 Raised when the AdHocQuerySaveReport web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQuerySaveReportToCatalogAndReportServerStartedWebEvent">
 <summary>
 Raised when the AdHocQuerySaveReportToCatalogAndReportServer web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQuerySaveReportToCatalogAndReportServerCompletedWebEvent">
 <summary>
 Raised when the AdHocQuerySaveReportToCatalogAndReportServer web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQuerySaveReportToCatalogAndReportServerExceptionWebEvent">
 <summary>
 Raised when the AdHocQuerySaveReportToCatalogAndReportServer web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQuerySaveSmartQueryStartedWebEvent">
 <summary>
 Raised when the AdHocQuerySaveSmartQuery web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQuerySaveSmartQueryCompletedWebEvent">
 <summary>
 Raised when the AdHocQuerySaveSmartQuery web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQuerySaveSmartQueryExceptionWebEvent">
 <summary>
 Raised when the AdHocQuerySaveSmartQuery web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQueryUserGrantedStartedWebEvent">
 <summary>
 Raised when the AdHocQueryUserGranted web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQueryUserGrantedCompletedWebEvent">
 <summary>
 Raised when the AdHocQueryUserGranted web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQueryUserGrantedExceptionWebEvent">
 <summary>
 Raised when the AdHocQueryUserGranted web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.BatchTypeGetMetaDataStartedWebEvent">
 <summary>
 Raised when the BatchTypeGetMetaData web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.BatchTypeGetMetaDataCompletedWebEvent">
 <summary>
 Raised when the BatchTypeGetMetaData web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.BatchTypeGetMetaDataExceptionWebEvent">
 <summary>
 Raised when the BatchTypeGetMetaData web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.BatchValidateStartedWebEvent">
 <summary>
 Raised when the BatchValidate web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.BatchValidateCompletedWebEvent">
 <summary>
 Raised when the BatchValidate web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.BatchValidateExceptionWebEvent">
 <summary>
 Raised when the BatchValidate web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.BusinessProcessGenerateActiveXScriptStartedWebEvent">
 <summary>
 Raised when the BusinessProcessGenerateActiveXScript web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.BusinessProcessGenerateActiveXScriptCompletedWebEvent">
 <summary>
 Raised when the BusinessProcessGenerateActiveXScript web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.BusinessProcessGenerateActiveXScriptExceptionWebEvent">
 <summary>
 Raised when the BusinessProcessGenerateActiveXScript web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.BusinessProcessLaunchGetDeferredResultStartedWebEvent">
 <summary>
 Raised when the BusinessProcessLaunchGetDeferredResult web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.BusinessProcessLaunchGetDeferredResultCompletedWebEvent">
 <summary>
 Raised when the BusinessProcessLaunchGetDeferredResult web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.BusinessProcessLaunchGetDeferredResultExceptionWebEvent">
 <summary>
 Raised when the BusinessProcessLaunchGetDeferredResult web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ConditionSettingExistsStartedWebEvent">
 <summary>
 Raised when the ConditionSettingExists web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ConditionSettingExistsCompletedWebEvent">
 <summary>
 Raised when the ConditionSettingExists web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ConditionSettingExistsExceptionWebEvent">
 <summary>
 Raised when the ConditionSettingExists web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ConfigurationDataInformationStartedWebEvent">
 <summary>
 Raised when the ConfigurationDataInformation web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ConfigurationDataInformationCompletedWebEvent">
 <summary>
 Raised when the ConfigurationDataInformation web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ConfigurationDataInformationExceptionWebEvent">
 <summary>
 Raised when the ConfigurationDataInformation web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ConfigurationDataListStartedWebEvent">
 <summary>
 Raised when the ConfigurationDataList web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ConfigurationDataListCompletedWebEvent">
 <summary>
 Raised when the ConfigurationDataList web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ConfigurationDataListExceptionWebEvent">
 <summary>
 Raised when the ConfigurationDataList web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CountryStateGetIDStartedWebEvent">
 <summary>
 Raised when the CountryStateGetID web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CountryStateGetIDCompletedWebEvent">
 <summary>
 Raised when the CountryStateGetID web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CountryStateGetIDExceptionWebEvent">
 <summary>
 Raised when the CountryStateGetID web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CreditCardVaultStartedWebEvent">
 <summary>
 Raised when the CreditCardVault web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CreditCardVaultCompletedWebEvent">
 <summary>
 Raised when the CreditCardVault web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CreditCardVaultExceptionWebEvent">
 <summary>
 Raised when the CreditCardVault web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CurrencyExchangeRateGetStartedWebEvent">
 <summary>
 Raised when the CurrencyExchangeRateGet web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CurrencyExchangeRateGetCompletedWebEvent">
 <summary>
 Raised when the CurrencyExchangeRateGet web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CurrencyExchangeRateGetExceptionWebEvent">
 <summary>
 Raised when the CurrencyExchangeRateGet web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CurrencyExchangeRateGetLatestStartedWebEvent">
 <summary>
 Raised when the CurrencyExchangeRateGetLatest web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CurrencyExchangeRateGetLatestCompletedWebEvent">
 <summary>
 Raised when the CurrencyExchangeRateGetLatest web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CurrencyExchangeRateGetLatestExceptionWebEvent">
 <summary>
 Raised when the CurrencyExchangeRateGetLatest web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CurrencyGetStartedWebEvent">
 <summary>
 Raised when the CurrencyGet web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CurrencyGetCompletedWebEvent">
 <summary>
 Raised when the CurrencyGet web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CurrencyGetExceptionWebEvent">
 <summary>
 Raised when the CurrencyGet web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.DataFormSupportsWebUIStartedWebEvent">
 <summary>
 Raised when the DataFormSupportsWebUI web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.DataFormSupportsWebUICompletedWebEvent">
 <summary>
 Raised when the DataFormSupportsWebUI web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.DataFormSupportsWebUIExceptionWebEvent">
 <summary>
 Raised when the DataFormSupportsWebUI web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SimpleDataListGetMetaDataStartedWebEvent">
 <summary>
 Raised when the SimpleDataListGetMetaData web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SimpleDataListGetMetaDataCompletedWebEvent">
 <summary>
 Raised when the SimpleDataListGetMetaData web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SimpleDataListGetMetaDataExceptionWebEvent">
 <summary>
 Raised when the SimpleDataListGetMetaData web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.EmailGetDbMailConfigInfoStartedWebEvent">
 <summary>
 Raised when the EmailGetDbMailConfigInfo web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.EmailGetDbMailConfigInfoCompletedWebEvent">
 <summary>
 Raised when the EmailGetDbMailConfigInfo web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.EmailGetDbMailConfigInfoExceptionWebEvent">
 <summary>
 Raised when the EmailGetDbMailConfigInfo web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.EmailSendToAppUserStartedWebEvent">
 <summary>
 Raised when the EmailSendToAppUser web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.EmailSendToAppUserCompletedWebEvent">
 <summary>
 Raised when the EmailSendToAppUser web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.EmailSendToAppUserExceptionWebEvent">
 <summary>
 Raised when the EmailSendToAppUser web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.GetGeneralPurposeEmailStatusStartedWebEvent">
 <summary>
 Raised when the GetGeneralPurposeEmailStatus web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.GetGeneralPurposeEmailStatusCompletedWebEvent">
 <summary>
 Raised when the GetGeneralPurposeEmailStatus web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.GetGeneralPurposeEmailStatusExceptionWebEvent">
 <summary>
 Raised when the GetGeneralPurposeEmailStatus web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SendGeneralPurposeEmailStartedWebEvent">
 <summary>
 Raised when the SendGeneralPurposeEmail web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SendGeneralPurposeEmailCompletedWebEvent">
 <summary>
 Raised when the SendGeneralPurposeEmail web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SendGeneralPurposeEmailExceptionWebEvent">
 <summary>
 Raised when the SendGeneralPurposeEmail web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ExportDefinitionGetIDByNameStartedWebEvent">
 <summary>
 Raised when the ExportDefinitionGetIDByName web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ExportDefinitionGetIDByNameCompletedWebEvent">
 <summary>
 Raised when the ExportDefinitionGetIDByName web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ExportDefinitionGetIDByNameExceptionWebEvent">
 <summary>
 Raised when the ExportDefinitionGetIDByName web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ExportDefinitionLoadStartedWebEvent">
 <summary>
 Raised when the ExportDefinitionLoad web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ExportDefinitionLoadCompletedWebEvent">
 <summary>
 Raised when the ExportDefinitionLoad web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ExportDefinitionLoadExceptionWebEvent">
 <summary>
 Raised when the ExportDefinitionLoad web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ExportDefinitionSaveStartedWebEvent">
 <summary>
 Raised when the ExportDefinitionSave web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ExportDefinitionSaveCompletedWebEvent">
 <summary>
 Raised when the ExportDefinitionSave web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ExportDefinitionSaveExceptionWebEvent">
 <summary>
 Raised when the ExportDefinitionSave web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.GlobalChangeInformationStartedWebEvent">
 <summary>
 Raised when the GlobalChangeInformation web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.GlobalChangeInformationCompletedWebEvent">
 <summary>
 Raised when the GlobalChangeInformation web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.GlobalChangeInformationExceptionWebEvent">
 <summary>
 Raised when the GlobalChangeInformation web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.GlobalChangeListStartedWebEvent">
 <summary>
 Raised when the GlobalChangeList web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.GlobalChangeListCompletedWebEvent">
 <summary>
 Raised when the GlobalChangeList web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.GlobalChangeListExceptionWebEvent">
 <summary>
 Raised when the GlobalChangeList web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.GlobalChangeParametersLoadStartedWebEvent">
 <summary>
 Raised when the GlobalChangeParametersLoad web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.GlobalChangeParametersLoadCompletedWebEvent">
 <summary>
 Raised when the GlobalChangeParametersLoad web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.GlobalChangeParametersLoadExceptionWebEvent">
 <summary>
 Raised when the GlobalChangeParametersLoad web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.GlobalChangeSupportsWebUIStartedWebEvent">
 <summary>
 Raised when the GlobalChangeSupportsWebUI web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.GlobalChangeSupportsWebUICompletedWebEvent">
 <summary>
 Raised when the GlobalChangeSupportsWebUI web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.GlobalChangeSupportsWebUIExceptionWebEvent">
 <summary>
 Raised when the GlobalChangeSupportsWebUI web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AllProductsExpiredStartedWebEvent">
 <summary>
 Raised when the AllProductsExpired web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AllProductsExpiredCompletedWebEvent">
 <summary>
 Raised when the AllProductsExpired web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AllProductsExpiredExceptionWebEvent">
 <summary>
 Raised when the AllProductsExpired web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.GetInstalledProductListStartedWebEvent">
 <summary>
 Raised when the GetInstalledProductList web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.GetInstalledProductListCompletedWebEvent">
 <summary>
 Raised when the GetInstalledProductList web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.GetInstalledProductListExceptionWebEvent">
 <summary>
 Raised when the GetInstalledProductList web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.InstalledProductCountStartedWebEvent">
 <summary>
 Raised when the InstalledProductCount web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.InstalledProductCountCompletedWebEvent">
 <summary>
 Raised when the InstalledProductCount web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.InstalledProductCountExceptionWebEvent">
 <summary>
 Raised when the InstalledProductCount web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ProductIsStartedWebEvent">
 <summary>
 Raised when the ProductIs web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ProductIsCompletedWebEvent">
 <summary>
 Raised when the ProductIs web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ProductIsExceptionWebEvent">
 <summary>
 Raised when the ProductIs web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UnlockModuleStartedWebEvent">
 <summary>
 Raised when the UnlockModule web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UnlockModuleCompletedWebEvent">
 <summary>
 Raised when the UnlockModule web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UnlockModuleExceptionWebEvent">
 <summary>
 Raised when the UnlockModule web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UpdateProductsListStartedWebEvent">
 <summary>
 Raised when the UpdateProductsList web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UpdateProductsListCompletedWebEvent">
 <summary>
 Raised when the UpdateProductsList web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UpdateProductsListExceptionWebEvent">
 <summary>
 Raised when the UpdateProductsList web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.KpiInstanceGetDynamicGoalValueStartedWebEvent">
 <summary>
 Raised when the KpiInstanceGetDynamicGoalValue web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.KpiInstanceGetDynamicGoalValueCompletedWebEvent">
 <summary>
 Raised when the KpiInstanceGetDynamicGoalValue web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.KpiInstanceGetDynamicGoalValueExceptionWebEvent">
 <summary>
 Raised when the KpiInstanceGetDynamicGoalValue web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.KpiDashboardGetMetaDataStartedWebEvent">
 <summary>
 Raised when the KpiDashboardGetMetaData web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.KpiDashboardGetMetaDataCompletedWebEvent">
 <summary>
 Raised when the KpiDashboardGetMetaData web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.KpiDashboardGetMetaDataExceptionWebEvent">
 <summary>
 Raised when the KpiDashboardGetMetaData web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.KpiDashboardSaveStartedWebEvent">
 <summary>
 Raised when the KpiDashboardSave web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.KpiDashboardSaveCompletedWebEvent">
 <summary>
 Raised when the KpiDashboardSave web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.KpiDashboardSaveExceptionWebEvent">
 <summary>
 Raised when the KpiDashboardSave web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.KpiGetDynamicGoalValueStartedWebEvent">
 <summary>
 Raised when the KpiGetDynamicGoalValue web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.KpiGetDynamicGoalValueCompletedWebEvent">
 <summary>
 Raised when the KpiGetDynamicGoalValue web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.KpiGetDynamicGoalValueExceptionWebEvent">
 <summary>
 Raised when the KpiGetDynamicGoalValue web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.KpiGetMetaDataStartedWebEvent">
 <summary>
 Raised when the KpiGetMetaData web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.KpiGetMetaDataCompletedWebEvent">
 <summary>
 Raised when the KpiGetMetaData web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.KpiGetMetaDataExceptionWebEvent">
 <summary>
 Raised when the KpiGetMetaData web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.KpiGetTreeStartedWebEvent">
 <summary>
 Raised when the KpiGetTree web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.KpiGetTreeCompletedWebEvent">
 <summary>
 Raised when the KpiGetTree web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.KpiGetTreeExceptionWebEvent">
 <summary>
 Raised when the KpiGetTree web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.KpiGetValueStartedWebEvent">
 <summary>
 Raised when the KpiGetValue web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.KpiGetValueCompletedWebEvent">
 <summary>
 Raised when the KpiGetValue web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.KpiGetValueExceptionWebEvent">
 <summary>
 Raised when the KpiGetValue web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.KpiInstanceDeleteStartedWebEvent">
 <summary>
 Raised when the KpiInstanceDelete web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.KpiInstanceDeleteCompletedWebEvent">
 <summary>
 Raised when the KpiInstanceDelete web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.KpiInstanceDeleteExceptionWebEvent">
 <summary>
 Raised when the KpiInstanceDelete web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.KpiInstanceGetIDByNameStartedWebEvent">
 <summary>
 Raised when the KpiInstanceGetIDByName web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.KpiInstanceGetIDByNameCompletedWebEvent">
 <summary>
 Raised when the KpiInstanceGetIDByName web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.KpiInstanceGetIDByNameExceptionWebEvent">
 <summary>
 Raised when the KpiInstanceGetIDByName web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.KpiInstanceGetListByKpiCatalogIDStartedWebEvent">
 <summary>
 Raised when the KpiInstanceGetListByKpiCatalogID web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.KpiInstanceGetListByKpiCatalogIDCompletedWebEvent">
 <summary>
 Raised when the KpiInstanceGetListByKpiCatalogID web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.KpiInstanceGetListByKpiCatalogIDExceptionWebEvent">
 <summary>
 Raised when the KpiInstanceGetListByKpiCatalogID web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.KpiInstanceGetMetaDataStartedWebEvent">
 <summary>
 Raised when the KpiInstanceGetMetaData web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.KpiInstanceGetMetaDataCompletedWebEvent">
 <summary>
 Raised when the KpiInstanceGetMetaData web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.KpiInstanceGetMetaDataExceptionWebEvent">
 <summary>
 Raised when the KpiInstanceGetMetaData web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.KpiInstanceGetStatusStartedWebEvent">
 <summary>
 Raised when the KpiInstanceGetStatus web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.KpiInstanceGetStatusCompletedWebEvent">
 <summary>
 Raised when the KpiInstanceGetStatus web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.KpiInstanceGetStatusExceptionWebEvent">
 <summary>
 Raised when the KpiInstanceGetStatus web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.KpiInstanceGetTreeStartedWebEvent">
 <summary>
 Raised when the KpiInstanceGetTree web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.KpiInstanceGetTreeCompletedWebEvent">
 <summary>
 Raised when the KpiInstanceGetTree web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.KpiInstanceGetTreeExceptionWebEvent">
 <summary>
 Raised when the KpiInstanceGetTree web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQueryDeleteStartedWebEvent">
 <summary>
 Raised when the AdHocQueryDelete web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQueryDeleteCompletedWebEvent">
 <summary>
 Raised when the AdHocQueryDelete web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQueryDeleteExceptionWebEvent">
 <summary>
 Raised when the AdHocQueryDelete web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQueryGetDefinitionStartedWebEvent">
 <summary>
 Raised when the AdHocQueryGetDefinition web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQueryGetDefinitionCompletedWebEvent">
 <summary>
 Raised when the AdHocQueryGetDefinition web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQueryGetDefinitionExceptionWebEvent">
 <summary>
 Raised when the AdHocQueryGetDefinition web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQueryGetIDByNameStartedWebEvent">
 <summary>
 Raised when the AdHocQueryGetIDByName web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQueryGetIDByNameCompletedWebEvent">
 <summary>
 Raised when the AdHocQueryGetIDByName web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQueryGetIDByNameExceptionWebEvent">
 <summary>
 Raised when the AdHocQueryGetIDByName web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQueryProcessStartedWebEvent">
 <summary>
 Raised when the AdHocQueryProcess web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQueryProcessCompletedWebEvent">
 <summary>
 Raised when the AdHocQueryProcess web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQueryProcessExceptionWebEvent">
 <summary>
 Raised when the AdHocQueryProcess web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQuerySaveStartedWebEvent">
 <summary>
 Raised when the AdHocQuerySave web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQuerySaveCompletedWebEvent">
 <summary>
 Raised when the AdHocQuerySave web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.AdHocQuerySaveExceptionWebEvent">
 <summary>
 Raised when the AdHocQuerySave web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.BatchDefaultsLoadStartedWebEvent">
 <summary>
 Raised when the BatchDefaultsLoad web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.BatchDefaultsLoadCompletedWebEvent">
 <summary>
 Raised when the BatchDefaultsLoad web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.BatchDefaultsLoadExceptionWebEvent">
 <summary>
 Raised when the BatchDefaultsLoad web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.BatchLoadStartedWebEvent">
 <summary>
 Raised when the BatchLoad web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.BatchLoadCompletedWebEvent">
 <summary>
 Raised when the BatchLoad web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.BatchLoadExceptionWebEvent">
 <summary>
 Raised when the BatchLoad web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.BatchSaveStartedWebEvent">
 <summary>
 Raised when the BatchSave web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.BatchSaveCompletedWebEvent">
 <summary>
 Raised when the BatchSave web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.BatchSaveExceptionWebEvent">
 <summary>
 Raised when the BatchSave web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.BatchTemplateGetMetaDataStartedWebEvent">
 <summary>
 Raised when the BatchTemplateGetMetaData web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.BatchTemplateGetMetaDataCompletedWebEvent">
 <summary>
 Raised when the BatchTemplateGetMetaData web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.BatchTemplateGetMetaDataExceptionWebEvent">
 <summary>
 Raised when the BatchTemplateGetMetaData web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.BusinessProcessInformationStartedWebEvent">
 <summary>
 Raised when the BusinessProcessInformation web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.BusinessProcessInformationCompletedWebEvent">
 <summary>
 Raised when the BusinessProcessInformation web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.BusinessProcessInformationExceptionWebEvent">
 <summary>
 Raised when the BusinessProcessInformation web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.BusinessProcessLaunchStartedWebEvent">
 <summary>
 Raised when the BusinessProcessLaunch web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.BusinessProcessLaunchCompletedWebEvent">
 <summary>
 Raised when the BusinessProcessLaunch web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.BusinessProcessLaunchExceptionWebEvent">
 <summary>
 Raised when the BusinessProcessLaunch web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.BusinessProcessOutputLoadStartedWebEvent">
 <summary>
 Raised when the BusinessProcessOutputLoad web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.BusinessProcessOutputLoadCompletedWebEvent">
 <summary>
 Raised when the BusinessProcessOutputLoad web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.BusinessProcessOutputLoadExceptionWebEvent">
 <summary>
 Raised when the BusinessProcessOutputLoad web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CatalogBrowserGetCatalogItemStartedWebEvent">
 <summary>
 Raised when the CatalogBrowserGetCatalogItem web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CatalogBrowserGetCatalogItemCompletedWebEvent">
 <summary>
 Raised when the CatalogBrowserGetCatalogItem web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CatalogBrowserGetCatalogItemExceptionWebEvent">
 <summary>
 Raised when the CatalogBrowserGetCatalogItem web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CatalogBrowserGetCatalogResourceStartedWebEvent">
 <summary>
 Raised when the CatalogBrowserGetCatalogResource web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CatalogBrowserGetCatalogResourceCompletedWebEvent">
 <summary>
 Raised when the CatalogBrowserGetCatalogResource web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CatalogBrowserGetCatalogResourceExceptionWebEvent">
 <summary>
 Raised when the CatalogBrowserGetCatalogResource web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CatalogBrowserGetDependencyTreeStartedWebEvent">
 <summary>
 Raised when the CatalogBrowserGetDependencyTree web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CatalogBrowserGetDependencyTreeCompletedWebEvent">
 <summary>
 Raised when the CatalogBrowserGetDependencyTree web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CatalogBrowserGetDependencyTreeExceptionWebEvent">
 <summary>
 Raised when the CatalogBrowserGetDependencyTree web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CatalogBrowserGetItemByIDStartedWebEvent">
 <summary>
 Raised when the CatalogBrowserGetItemByID web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CatalogBrowserGetItemByIDCompletedWebEvent">
 <summary>
 Raised when the CatalogBrowserGetItemByID web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CatalogBrowserGetItemByIDExceptionWebEvent">
 <summary>
 Raised when the CatalogBrowserGetItemByID web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CatalogBrowserGetItemsStartedWebEvent">
 <summary>
 Raised when the CatalogBrowserGetItems web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CatalogBrowserGetItemsCompletedWebEvent">
 <summary>
 Raised when the CatalogBrowserGetItems web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CatalogBrowserGetItemsExceptionWebEvent">
 <summary>
 Raised when the CatalogBrowserGetItems web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CatalogBrowserLoadCatalogItemStartedWebEvent">
 <summary>
 Raised when the CatalogBrowserLoadCatalogItem web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CatalogBrowserLoadCatalogItemCompletedWebEvent">
 <summary>
 Raised when the CatalogBrowserLoadCatalogItem web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CatalogBrowserLoadCatalogItemExceptionWebEvent">
 <summary>
 Raised when the CatalogBrowserLoadCatalogItem web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CodeTableEntryAddStartedWebEvent">
 <summary>
 Raised when the CodeTableEntryAdd web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CodeTableEntryAddCompletedWebEvent">
 <summary>
 Raised when the CodeTableEntryAdd web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CodeTableEntryAddExceptionWebEvent">
 <summary>
 Raised when the CodeTableEntryAdd web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CodeTableEntryDeleteStartedWebEvent">
 <summary>
 Raised when the CodeTableEntryDelete web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CodeTableEntryDeleteCompletedWebEvent">
 <summary>
 Raised when the CodeTableEntryDelete web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CodeTableEntryDeleteExceptionWebEvent">
 <summary>
 Raised when the CodeTableEntryDelete web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CodeTableEntryGetDataStartedWebEvent">
 <summary>
 Raised when the CodeTableEntryGetData web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CodeTableEntryGetDataCompletedWebEvent">
 <summary>
 Raised when the CodeTableEntryGetData web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CodeTableEntryGetDataExceptionWebEvent">
 <summary>
 Raised when the CodeTableEntryGetData web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CodeTableEntryGetDescriptionStartedWebEvent">
 <summary>
 Raised when the CodeTableEntryGetDescription web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CodeTableEntryGetDescriptionCompletedWebEvent">
 <summary>
 Raised when the CodeTableEntryGetDescription web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CodeTableEntryGetDescriptionExceptionWebEvent">
 <summary>
 Raised when the CodeTableEntryGetDescription web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CodeTableEntryGetIDStartedWebEvent">
 <summary>
 Raised when the CodeTableEntryGetID web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CodeTableEntryGetIDCompletedWebEvent">
 <summary>
 Raised when the CodeTableEntryGetID web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CodeTableEntryGetIDExceptionWebEvent">
 <summary>
 Raised when the CodeTableEntryGetID web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CodeTableEntryGetListStartedWebEvent">
 <summary>
 Raised when the CodeTableEntryGetList web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CodeTableEntryGetListCompletedWebEvent">
 <summary>
 Raised when the CodeTableEntryGetList web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CodeTableEntryGetListExceptionWebEvent">
 <summary>
 Raised when the CodeTableEntryGetList web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CodeTableEntryUpdateStartedWebEvent">
 <summary>
 Raised when the CodeTableEntryUpdate web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CodeTableEntryUpdateCompletedWebEvent">
 <summary>
 Raised when the CodeTableEntryUpdate web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CodeTableEntryUpdateExceptionWebEvent">
 <summary>
 Raised when the CodeTableEntryUpdate web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CodeTableGetDescriptionStartedWebEvent">
 <summary>
 Raised when the CodeTableGetDescription web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CodeTableGetDescriptionCompletedWebEvent">
 <summary>
 Raised when the CodeTableGetDescription web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CodeTableGetDescriptionExceptionWebEvent">
 <summary>
 Raised when the CodeTableGetDescription web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CodeTableGetLookupInfoStartedWebEvent">
 <summary>
 Raised when the CodeTableGetLookupInfo web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CodeTableGetLookupInfoCompletedWebEvent">
 <summary>
 Raised when the CodeTableGetLookupInfo web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CodeTableGetLookupInfoExceptionWebEvent">
 <summary>
 Raised when the CodeTableGetLookupInfo web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CountryGetFormatsStartedWebEvent">
 <summary>
 Raised when the CountryGetFormats web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CountryGetFormatsCompletedWebEvent">
 <summary>
 Raised when the CountryGetFormats web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CountryGetFormatsExceptionWebEvent">
 <summary>
 Raised when the CountryGetFormats web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.DashboardGetDataStartedWebEvent">
 <summary>
 Raised when the DashboardGetData web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.DashboardGetDataCompletedWebEvent">
 <summary>
 Raised when the DashboardGetData web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.DashboardGetDataExceptionWebEvent">
 <summary>
 Raised when the DashboardGetData web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.DashboardGetMetaDataStartedWebEvent">
 <summary>
 Raised when the DashboardGetMetaData web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.DashboardGetMetaDataCompletedWebEvent">
 <summary>
 Raised when the DashboardGetMetaData web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.DashboardGetMetaDataExceptionWebEvent">
 <summary>
 Raised when the DashboardGetMetaData web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.DataFormGetDropDownValueListStartedWebEvent">
 <summary>
 Raised when the DataFormGetDropDownValueList web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.DataFormGetDropDownValueListCompletedWebEvent">
 <summary>
 Raised when the DataFormGetDropDownValueList web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.DataFormGetDropDownValueListExceptionWebEvent">
 <summary>
 Raised when the DataFormGetDropDownValueList web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.DataFormInstanceGetMetaDataStartedWebEvent">
 <summary>
 Raised when the DataFormInstanceGetMetaData web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.DataFormInstanceGetMetaDataCompletedWebEvent">
 <summary>
 Raised when the DataFormInstanceGetMetaData web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.DataFormInstanceGetMetaDataExceptionWebEvent">
 <summary>
 Raised when the DataFormInstanceGetMetaData web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.DataFormLoadStartedWebEvent">
 <summary>
 Raised when the DataFormLoad web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.DataFormLoadCompletedWebEvent">
 <summary>
 Raised when the DataFormLoad web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.DataFormLoadExceptionWebEvent">
 <summary>
 Raised when the DataFormLoad web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.DataFormSaveStartedWebEvent">
 <summary>
 Raised when the DataFormSave web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.DataFormSaveCompletedWebEvent">
 <summary>
 Raised when the DataFormSave web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.DataFormSaveExceptionWebEvent">
 <summary>
 Raised when the DataFormSave web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.DataListGetMetaDataStartedWebEvent">
 <summary>
 Raised when the DataListGetMetaData web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.DataListGetMetaDataCompletedWebEvent">
 <summary>
 Raised when the DataListGetMetaData web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.DataListGetMetaDataExceptionWebEvent">
 <summary>
 Raised when the DataListGetMetaData web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.DataListLoadStartedWebEvent">
 <summary>
 Raised when the DataListLoad web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.DataListLoadCompletedWebEvent">
 <summary>
 Raised when the DataListLoad web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.DataListLoadExceptionWebEvent">
 <summary>
 Raised when the DataListLoad web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.DataListLoadMoreStartedWebEvent">
 <summary>
 Raised when the DataListLoadMore web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.DataListLoadMoreCompletedWebEvent">
 <summary>
 Raised when the DataListLoadMore web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.DataListLoadMoreExceptionWebEvent">
 <summary>
 Raised when the DataListLoadMore web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SimpleDataListGetTranslationStartedWebEvent">
 <summary>
 Raised when the SimpleDataListGetTranslation web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SimpleDataListGetTranslationCompletedWebEvent">
 <summary>
 Raised when the SimpleDataListGetTranslation web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SimpleDataListGetTranslationExceptionWebEvent">
 <summary>
 Raised when the SimpleDataListGetTranslation web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SimpleDataListLoadStartedWebEvent">
 <summary>
 Raised when the SimpleDataListLoad web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SimpleDataListLoadCompletedWebEvent">
 <summary>
 Raised when the SimpleDataListLoad web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SimpleDataListLoadExceptionWebEvent">
 <summary>
 Raised when the SimpleDataListLoad web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.IDMapStartedWebEvent">
 <summary>
 Raised when the IDMap web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.IDMapCompletedWebEvent">
 <summary>
 Raised when the IDMap web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.IDMapExceptionWebEvent">
 <summary>
 Raised when the IDMap web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.KpiInstanceSaveStartedWebEvent">
 <summary>
 Raised when the KpiInstanceSave web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.KpiInstanceSaveCompletedWebEvent">
 <summary>
 Raised when the KpiInstanceSave web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.KpiInstanceSaveExceptionWebEvent">
 <summary>
 Raised when the KpiInstanceSave web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.KpiSupportsWebUIStartedWebEvent">
 <summary>
 Raised when the KpiSupportsWebUI web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.KpiSupportsWebUICompletedWebEvent">
 <summary>
 Raised when the KpiSupportsWebUI web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.KpiSupportsWebUIExceptionWebEvent">
 <summary>
 Raised when the KpiSupportsWebUI web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.MapEntityLoadStartedWebEvent">
 <summary>
 Raised when the MapEntityLoad web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.MapEntityLoadCompletedWebEvent">
 <summary>
 Raised when the MapEntityLoad web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.MapEntityLoadExceptionWebEvent">
 <summary>
 Raised when the MapEntityLoad web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.MergeTaskGetMetaDataStartedWebEvent">
 <summary>
 Raised when the MergeTaskGetMetaData web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.MergeTaskGetMetaDataCompletedWebEvent">
 <summary>
 Raised when the MergeTaskGetMetaData web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.MergeTaskGetMetaDataExceptionWebEvent">
 <summary>
 Raised when the MergeTaskGetMetaData web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.NotificationGetByRecordTypeStartedWebEvent">
 <summary>
 Raised when the NotificationGetByRecordType web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.NotificationGetByRecordTypeCompletedWebEvent">
 <summary>
 Raised when the NotificationGetByRecordType web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.NotificationGetByRecordTypeExceptionWebEvent">
 <summary>
 Raised when the NotificationGetByRecordType web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.NotificationListForRecordStartedWebEvent">
 <summary>
 Raised when the NotificationListForRecord web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.NotificationListForRecordCompletedWebEvent">
 <summary>
 Raised when the NotificationListForRecord web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.NotificationListForRecordExceptionWebEvent">
 <summary>
 Raised when the NotificationListForRecord web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.PageDefinitionGetListByRecordTypeStartedWebEvent">
 <summary>
 Raised when the PageDefinitionGetListByRecordType web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.PageDefinitionGetListByRecordTypeCompletedWebEvent">
 <summary>
 Raised when the PageDefinitionGetListByRecordType web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.PageDefinitionGetListByRecordTypeExceptionWebEvent">
 <summary>
 Raised when the PageDefinitionGetListByRecordType web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.PageDefinitionGetMetaDataStartedWebEvent">
 <summary>
 Raised when the PageDefinitionGetMetaData web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.PageDefinitionGetMetaDataCompletedWebEvent">
 <summary>
 Raised when the PageDefinitionGetMetaData web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.PageDefinitionGetMetaDataExceptionWebEvent">
 <summary>
 Raised when the PageDefinitionGetMetaData web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.QueryViewGetLookUpValuesStartedWebEvent">
 <summary>
 Raised when the QueryViewGetLookUpValues web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.QueryViewGetLookUpValuesCompletedWebEvent">
 <summary>
 Raised when the QueryViewGetLookUpValues web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.QueryViewGetLookUpValuesExceptionWebEvent">
 <summary>
 Raised when the QueryViewGetLookUpValues web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.QueryViewGetMetaDataStartedWebEvent">
 <summary>
 Raised when the QueryViewGetMetaData web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.QueryViewGetMetaDataCompletedWebEvent">
 <summary>
 Raised when the QueryViewGetMetaData web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.QueryViewGetMetaDataExceptionWebEvent">
 <summary>
 Raised when the QueryViewGetMetaData web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.QueryViewGetRootListStartedWebEvent">
 <summary>
 Raised when the QueryViewGetRootList web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.QueryViewGetRootListCompletedWebEvent">
 <summary>
 Raised when the QueryViewGetRootList web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.QueryViewGetRootListExceptionWebEvent">
 <summary>
 Raised when the QueryViewGetRootList web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.QueryViewGetTreeStartedWebEvent">
 <summary>
 Raised when the QueryViewGetTree web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.QueryViewGetTreeCompletedWebEvent">
 <summary>
 Raised when the QueryViewGetTree web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.QueryViewGetTreeExceptionWebEvent">
 <summary>
 Raised when the QueryViewGetTree web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.QueryViewGetTreeNodeStartedWebEvent">
 <summary>
 Raised when the QueryViewGetTreeNode web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.QueryViewGetTreeNodeCompletedWebEvent">
 <summary>
 Raised when the QueryViewGetTreeNode web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.QueryViewGetTreeNodeExceptionWebEvent">
 <summary>
 Raised when the QueryViewGetTreeNode web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.RecordOperationGetMetaDataStartedWebEvent">
 <summary>
 Raised when the RecordOperationGetMetaData web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.RecordOperationGetMetaDataCompletedWebEvent">
 <summary>
 Raised when the RecordOperationGetMetaData web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.RecordOperationGetMetaDataExceptionWebEvent">
 <summary>
 Raised when the RecordOperationGetMetaData web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.RecordOperationPerformGetDeferredResultStartedWebEvent">
 <summary>
 Raised when the RecordOperationPerformGetDeferredResult web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.RecordOperationPerformGetDeferredResultCompletedWebEvent">
 <summary>
 Raised when the RecordOperationPerformGetDeferredResult web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.RecordOperationPerformGetDeferredResultExceptionWebEvent">
 <summary>
 Raised when the RecordOperationPerformGetDeferredResult web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.RecordOperationGetPromptStartedWebEvent">
 <summary>
 Raised when the RecordOperationGetPrompt web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.RecordOperationGetPromptCompletedWebEvent">
 <summary>
 Raised when the RecordOperationGetPrompt web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.RecordOperationGetPromptExceptionWebEvent">
 <summary>
 Raised when the RecordOperationGetPrompt web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.RecordOperationPerformStartedWebEvent">
 <summary>
 Raised when the RecordOperationPerform web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.RecordOperationPerformCompletedWebEvent">
 <summary>
 Raised when the RecordOperationPerform web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.RecordOperationPerformExceptionWebEvent">
 <summary>
 Raised when the RecordOperationPerform web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ReportsExportStartedWebEvent">
 <summary>
 Raised when the ReportsExport web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ReportsExportCompletedWebEvent">
 <summary>
 Raised when the ReportsExport web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ReportsExportExceptionWebEvent">
 <summary>
 Raised when the ReportsExport web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ReportsSaveLinkedReportStartedWebEvent">
 <summary>
 Raised when the ReportsSaveLinkedReport web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ReportsSaveLinkedReportCompletedWebEvent">
 <summary>
 Raised when the ReportsSaveLinkedReport web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ReportsSaveLinkedReportExceptionWebEvent">
 <summary>
 Raised when the ReportsSaveLinkedReport web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ReportsGetReportParametersStartedWebEvent">
 <summary>
 Raised when the ReportsGetReportParameters web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ReportsGetReportParametersCompletedWebEvent">
 <summary>
 Raised when the ReportsGetReportParameters web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ReportsGetReportParametersExceptionWebEvent">
 <summary>
 Raised when the ReportsGetReportParameters web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ReportsGetReportSpecByNameStartedWebEvent">
 <summary>
 Raised when the ReportsGetReportSpecByName web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ReportsGetReportSpecByNameCompletedWebEvent">
 <summary>
 Raised when the ReportsGetReportSpecByName web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ReportsGetReportSpecByNameExceptionWebEvent">
 <summary>
 Raised when the ReportsGetReportSpecByName web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ReportRootFoldersGetListStartedWebEvent">
 <summary>
 Raised when the ReportRootFoldersGetList web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ReportRootFoldersGetListCompletedWebEvent">
 <summary>
 Raised when the ReportRootFoldersGetList web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ReportRootFoldersGetListExceptionWebEvent">
 <summary>
 Raised when the ReportRootFoldersGetList web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ReportsGenerateReportModelStartedWebEvent">
 <summary>
 Raised when the ReportsGenerateReportModel web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ReportsGenerateReportModelCompletedWebEvent">
 <summary>
 Raised when the ReportsGenerateReportModel web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ReportsGenerateReportModelExceptionWebEvent">
 <summary>
 Raised when the ReportsGenerateReportModel web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ReportsGetDataSourceStartedWebEvent">
 <summary>
 Raised when the ReportsGetDataSource web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ReportsGetDataSourceCompletedWebEvent">
 <summary>
 Raised when the ReportsGetDataSource web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ReportsGetDataSourceExceptionWebEvent">
 <summary>
 Raised when the ReportsGetDataSource web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ReportsGetReportSpecStartedWebEvent">
 <summary>
 Raised when the ReportsGetReportSpec web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ReportsGetReportSpecCompletedWebEvent">
 <summary>
 Raised when the ReportsGetReportSpec web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ReportsGetReportSpecExceptionWebEvent">
 <summary>
 Raised when the ReportsGetReportSpec web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ReportsGetURLsStartedWebEvent">
 <summary>
 Raised when the ReportsGetURLs web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ReportsGetURLsCompletedWebEvent">
 <summary>
 Raised when the ReportsGetURLs web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ReportsGetURLsExceptionWebEvent">
 <summary>
 Raised when the ReportsGetURLs web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ReportsPublishServerReportToCatalogStartedWebEvent">
 <summary>
 Raised when the ReportsPublishServerReportToCatalog web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ReportsPublishServerReportToCatalogCompletedWebEvent">
 <summary>
 Raised when the ReportsPublishServerReportToCatalog web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ReportsPublishServerReportToCatalogExceptionWebEvent">
 <summary>
 Raised when the ReportsPublishServerReportToCatalog web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.RSSGetFeedStartedWebEvent">
 <summary>
 Raised when the RSSGetFeed web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.RSSGetFeedCompletedWebEvent">
 <summary>
 Raised when the RSSGetFeed web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.RSSGetFeedExceptionWebEvent">
 <summary>
 Raised when the RSSGetFeed web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SearchListFormSupportsWebUIStartedWebEvent">
 <summary>
 Raised when the SearchListFormSupportsWebUI web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SearchListFormSupportsWebUICompletedWebEvent">
 <summary>
 Raised when the SearchListFormSupportsWebUI web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SearchListFormSupportsWebUIExceptionWebEvent">
 <summary>
 Raised when the SearchListFormSupportsWebUI web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SearchListGetListStartedWebEvent">
 <summary>
 Raised when the SearchListGetList web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SearchListGetListCompletedWebEvent">
 <summary>
 Raised when the SearchListGetList web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SearchListGetListExceptionWebEvent">
 <summary>
 Raised when the SearchListGetList web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SearchListGetMetaDataStartedWebEvent">
 <summary>
 Raised when the SearchListGetMetaData web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SearchListGetMetaDataCompletedWebEvent">
 <summary>
 Raised when the SearchListGetMetaData web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SearchListGetMetaDataExceptionWebEvent">
 <summary>
 Raised when the SearchListGetMetaData web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SearchListGetTranslationStartedWebEvent">
 <summary>
 Raised when the SearchListGetTranslation web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SearchListGetTranslationCompletedWebEvent">
 <summary>
 Raised when the SearchListGetTranslation web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SearchListGetTranslationExceptionWebEvent">
 <summary>
 Raised when the SearchListGetTranslation web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SearchListLoadStartedWebEvent">
 <summary>
 Raised when the SearchListLoad web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SearchListLoadCompletedWebEvent">
 <summary>
 Raised when the SearchListLoad web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SearchListLoadExceptionWebEvent">
 <summary>
 Raised when the SearchListLoad web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SearchListReplacementGetStartedWebEvent">
 <summary>
 Raised when the SearchListReplacementGet web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SearchListReplacementGetCompletedWebEvent">
 <summary>
 Raised when the SearchListReplacementGet web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SearchListReplacementGetExceptionWebEvent">
 <summary>
 Raised when the SearchListReplacementGet web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.GetSiteHierarchyStartedWebEvent">
 <summary>
 Raised when the GetSiteHierarchy web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.GetSiteHierarchyCompletedWebEvent">
 <summary>
 Raised when the GetSiteHierarchy web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.GetSiteHierarchyExceptionWebEvent">
 <summary>
 Raised when the GetSiteHierarchy web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SiteFilterGetRowsStartedWebEvent">
 <summary>
 Raised when the SiteFilterGetRows web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SiteFilterGetRowsCompletedWebEvent">
 <summary>
 Raised when the SiteFilterGetRows web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SiteFilterGetRowsExceptionWebEvent">
 <summary>
 Raised when the SiteFilterGetRows web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.GetADGroupSidStartedWebEvent">
 <summary>
 Raised when the GetADGroupSid web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.GetADGroupSidCompletedWebEvent">
 <summary>
 Raised when the GetADGroupSid web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.GetADGroupSidExceptionWebEvent">
 <summary>
 Raised when the GetADGroupSid web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SystemRoleAddWebLocalUserStartedWebEvent">
 <summary>
 Raised when the SystemRoleAddWebLocalUser web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SystemRoleAddWebLocalUserCompletedWebEvent">
 <summary>
 Raised when the SystemRoleAddWebLocalUser web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SystemRoleAddWebLocalUserExceptionWebEvent">
 <summary>
 Raised when the SystemRoleAddWebLocalUser web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SelectionGetQueryInfoStartedWebEvent">
 <summary>
 Raised when the SelectionGetQueryInfo web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SelectionGetQueryInfoCompletedWebEvent">
 <summary>
 Raised when the SelectionGetQueryInfo web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SelectionGetQueryInfoExceptionWebEvent">
 <summary>
 Raised when the SelectionGetQueryInfo web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.DataSourceGetLastUpdatedStartedWebEvent">
 <summary>
 Raised when the DataSourceGetLastUpdated web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.DataSourceGetLastUpdatedCompletedWebEvent">
 <summary>
 Raised when the DataSourceGetLastUpdated web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.DataSourceGetLastUpdatedExceptionWebEvent">
 <summary>
 Raised when the DataSourceGetLastUpdated web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.GetFiscalYearLastMonthStartedWebEvent">
 <summary>
 Raised when the GetFiscalYearLastMonth web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.GetFiscalYearLastMonthCompletedWebEvent">
 <summary>
 Raised when the GetFiscalYearLastMonth web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.GetFiscalYearLastMonthExceptionWebEvent">
 <summary>
 Raised when the GetFiscalYearLastMonth web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.GetFormatPhonesSettingStartedWebEvent">
 <summary>
 Raised when the GetFormatPhonesSetting web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.GetFormatPhonesSettingCompletedWebEvent">
 <summary>
 Raised when the GetFormatPhonesSetting web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.GetFormatPhonesSettingExceptionWebEvent">
 <summary>
 Raised when the GetFormatPhonesSetting web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.InvokeServiceStartedWebEvent">
 <summary>
 Raised when the InvokeService web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.InvokeServiceCompletedWebEvent">
 <summary>
 Raised when the InvokeService web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.InvokeServiceExceptionWebEvent">
 <summary>
 Raised when the InvokeService web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ServiceInfoGetStartedWebEvent">
 <summary>
 Raised when the ServiceInfoGet web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ServiceInfoGetCompletedWebEvent">
 <summary>
 Raised when the ServiceInfoGet web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ServiceInfoGetExceptionWebEvent">
 <summary>
 Raised when the ServiceInfoGet web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ShellFeatureSearchStartedWebEvent">
 <summary>
 Raised when the ShellFeatureSearch web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ShellFeatureSearchCompletedWebEvent">
 <summary>
 Raised when the ShellFeatureSearch web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ShellFeatureSearchExceptionWebEvent">
 <summary>
 Raised when the ShellFeatureSearch web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ShellGetBrandOptionsStartedWebEvent">
 <summary>
 Raised when the ShellGetBrandOptions web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ShellGetBrandOptionsCompletedWebEvent">
 <summary>
 Raised when the ShellGetBrandOptions web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ShellGetBrandOptionsExceptionWebEvent">
 <summary>
 Raised when the ShellGetBrandOptions web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ShellGetQuickFindTasksStartedWebEvent">
 <summary>
 Raised when the ShellGetQuickFindTasks web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ShellGetQuickFindTasksCompletedWebEvent">
 <summary>
 Raised when the ShellGetQuickFindTasks web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ShellGetQuickFindTasksExceptionWebEvent">
 <summary>
 Raised when the ShellGetQuickFindTasks web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ShellGetTaskStartedWebEvent">
 <summary>
 Raised when the ShellGetTask web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ShellGetTaskCompletedWebEvent">
 <summary>
 Raised when the ShellGetTask web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ShellGetTaskExceptionWebEvent">
 <summary>
 Raised when the ShellGetTask web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ShellGetTaskStatusStartedWebEvent">
 <summary>
 Raised when the ShellGetTaskStatus web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ShellGetTaskStatusCompletedWebEvent">
 <summary>
 Raised when the ShellGetTaskStatus web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ShellGetTaskStatusExceptionWebEvent">
 <summary>
 Raised when the ShellGetTaskStatus web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ShellGetTaskWizardStartedWebEvent">
 <summary>
 Raised when the ShellGetTaskWizard web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ShellGetTaskWizardCompletedWebEvent">
 <summary>
 Raised when the ShellGetTaskWizard web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ShellGetTaskWizardExceptionWebEvent">
 <summary>
 Raised when the ShellGetTaskWizard web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ShellGetUIWidgetStartedWebEvent">
 <summary>
 Raised when the ShellGetUIWidget web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ShellGetUIWidgetCompletedWebEvent">
 <summary>
 Raised when the ShellGetUIWidget web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ShellGetUIWidgetExceptionWebEvent">
 <summary>
 Raised when the ShellGetUIWidget web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ShellGetUserAvailableUIWidgetsStartedWebEvent">
 <summary>
 Raised when the ShellGetUserAvailableUIWidgets web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ShellGetUserAvailableUIWidgetsCompletedWebEvent">
 <summary>
 Raised when the ShellGetUserAvailableUIWidgets web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ShellGetUserAvailableUIWidgetsExceptionWebEvent">
 <summary>
 Raised when the ShellGetUserAvailableUIWidgets web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SecurityGetRoleFeaturePermTreeStartedWebEvent">
 <summary>
 Raised when the SecurityGetRoleFeaturePermTree web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SecurityGetRoleFeaturePermTreeCompletedWebEvent">
 <summary>
 Raised when the SecurityGetRoleFeaturePermTree web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SecurityGetRoleFeaturePermTreeExceptionWebEvent">
 <summary>
 Raised when the SecurityGetRoleFeaturePermTree web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SecurityUserGrantedFeatureStartedWebEvent">
 <summary>
 Raised when the SecurityUserGrantedFeature web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SecurityUserGrantedFeatureCompletedWebEvent">
 <summary>
 Raised when the SecurityUserGrantedFeature web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SecurityUserGrantedFeatureExceptionWebEvent">
 <summary>
 Raised when the SecurityUserGrantedFeature web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SyncRoleUsersStartedWebEvent">
 <summary>
 Raised when the SyncRoleUsers web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SyncRoleUsersCompletedWebEvent">
 <summary>
 Raised when the SyncRoleUsers web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SyncRoleUsersExceptionWebEvent">
 <summary>
 Raised when the SyncRoleUsers web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CurrentUserInfoGetStartedWebEvent">
 <summary>
 Raised when the CurrentUserInfoGet web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CurrentUserInfoGetCompletedWebEvent">
 <summary>
 Raised when the CurrentUserInfoGet web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.CurrentUserInfoGetExceptionWebEvent">
 <summary>
 Raised when the CurrentUserInfoGet web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.PingStartedWebEvent">
 <summary>
 Raised when the Ping web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.PingCompletedWebEvent">
 <summary>
 Raised when the Ping web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.PingExceptionWebEvent">
 <summary>
 Raised when the Ping web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SessionEndStartedWebEvent">
 <summary>
 Raised when the SessionEnd web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SessionEndCompletedWebEvent">
 <summary>
 Raised when the SessionEnd web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SessionEndExceptionWebEvent">
 <summary>
 Raised when the SessionEnd web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.GetAvailableREDatabasesStartedWebEvent">
 <summary>
 Raised when the GetAvailableREDatabases web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.GetAvailableREDatabasesCompletedWebEvent">
 <summary>
 Raised when the GetAvailableREDatabases web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.GetAvailableREDatabasesExceptionWebEvent">
 <summary>
 Raised when the GetAvailableREDatabases web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ShellGetAllTasksStartedWebEvent">
 <summary>
 Raised when the ShellGetAllTasks web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ShellGetAllTasksCompletedWebEvent">
 <summary>
 Raised when the ShellGetAllTasks web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ShellGetAllTasksExceptionWebEvent">
 <summary>
 Raised when the ShellGetAllTasks web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ShellGetNavigationStartedWebEvent">
 <summary>
 Raised when the ShellGetNavigation web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ShellGetNavigationCompletedWebEvent">
 <summary>
 Raised when the ShellGetNavigation web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ShellGetNavigationExceptionWebEvent">
 <summary>
 Raised when the ShellGetNavigation web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SmartFieldInformationStartedWebEvent">
 <summary>
 Raised when the SmartFieldInformation web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SmartFieldInformationCompletedWebEvent">
 <summary>
 Raised when the SmartFieldInformation web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SmartFieldInformationExceptionWebEvent">
 <summary>
 Raised when the SmartFieldInformation web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SmartFieldListStartedWebEvent">
 <summary>
 Raised when the SmartFieldList web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SmartFieldListCompletedWebEvent">
 <summary>
 Raised when the SmartFieldList web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SmartFieldListExceptionWebEvent">
 <summary>
 Raised when the SmartFieldList web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SmartFieldParametersLoadStartedWebEvent">
 <summary>
 Raised when the SmartFieldParametersLoad web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SmartFieldParametersLoadCompletedWebEvent">
 <summary>
 Raised when the SmartFieldParametersLoad web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SmartFieldParametersLoadExceptionWebEvent">
 <summary>
 Raised when the SmartFieldParametersLoad web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SmartFieldSupportsWebUIStartedWebEvent">
 <summary>
 Raised when the SmartFieldSupportsWebUI web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SmartFieldSupportsWebUICompletedWebEvent">
 <summary>
 Raised when the SmartFieldSupportsWebUI web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SmartFieldSupportsWebUIExceptionWebEvent">
 <summary>
 Raised when the SmartFieldSupportsWebUI web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SmartQueryInstanceUserGrantedStartedWebEvent">
 <summary>
 Raised when the SmartQueryInstanceUserGranted web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SmartQueryInstanceUserGrantedCompletedWebEvent">
 <summary>
 Raised when the SmartQueryInstanceUserGranted web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SmartQueryInstanceUserGrantedExceptionWebEvent">
 <summary>
 Raised when the SmartQueryInstanceUserGranted web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SmartQueryLoadGetDeferredResultStartedWebEvent">
 <summary>
 Raised when the SmartQueryLoadGetDeferredResult web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SmartQueryLoadGetDeferredResultCompletedWebEvent">
 <summary>
 Raised when the SmartQueryLoadGetDeferredResult web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SmartQueryLoadGetDeferredResultExceptionWebEvent">
 <summary>
 Raised when the SmartQueryLoadGetDeferredResult web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SmartQuerySupportsWebUIStartedWebEvent">
 <summary>
 Raised when the SmartQuerySupportsWebUI web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SmartQuerySupportsWebUICompletedWebEvent">
 <summary>
 Raised when the SmartQuerySupportsWebUI web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SmartQuerySupportsWebUIExceptionWebEvent">
 <summary>
 Raised when the SmartQuerySupportsWebUI web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SmartQueryInstanceDeleteStartedWebEvent">
 <summary>
 Raised when the SmartQueryInstanceDelete web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SmartQueryInstanceDeleteCompletedWebEvent">
 <summary>
 Raised when the SmartQueryInstanceDelete web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SmartQueryInstanceDeleteExceptionWebEvent">
 <summary>
 Raised when the SmartQueryInstanceDelete web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SmartQueryInstanceGetIDByNameStartedWebEvent">
 <summary>
 Raised when the SmartQueryInstanceGetIDByName web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SmartQueryInstanceGetIDByNameCompletedWebEvent">
 <summary>
 Raised when the SmartQueryInstanceGetIDByName web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SmartQueryInstanceGetIDByNameExceptionWebEvent">
 <summary>
 Raised when the SmartQueryInstanceGetIDByName web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SmartQueryInstanceGetMetaDataStartedWebEvent">
 <summary>
 Raised when the SmartQueryInstanceGetMetaData web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SmartQueryInstanceGetMetaDataCompletedWebEvent">
 <summary>
 Raised when the SmartQueryInstanceGetMetaData web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SmartQueryInstanceGetMetaDataExceptionWebEvent">
 <summary>
 Raised when the SmartQueryInstanceGetMetaData web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SmartQueryInstanceSaveStartedWebEvent">
 <summary>
 Raised when the SmartQueryInstanceSave web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SmartQueryInstanceSaveCompletedWebEvent">
 <summary>
 Raised when the SmartQueryInstanceSave web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SmartQueryInstanceSaveExceptionWebEvent">
 <summary>
 Raised when the SmartQueryInstanceSave web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SmartQueryGetMetaDataStartedWebEvent">
 <summary>
 Raised when the SmartQueryGetMetaData web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SmartQueryGetMetaDataCompletedWebEvent">
 <summary>
 Raised when the SmartQueryGetMetaData web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SmartQueryGetMetaDataExceptionWebEvent">
 <summary>
 Raised when the SmartQueryGetMetaData web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SmartQueryGetListStartedWebEvent">
 <summary>
 Raised when the SmartQueryGetList web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SmartQueryGetListCompletedWebEvent">
 <summary>
 Raised when the SmartQueryGetList web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SmartQueryGetListExceptionWebEvent">
 <summary>
 Raised when the SmartQueryGetList web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SmartQueryLoadStartedWebEvent">
 <summary>
 Raised when the SmartQueryLoad web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SmartQueryLoadCompletedWebEvent">
 <summary>
 Raised when the SmartQueryLoad web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SmartQueryLoadExceptionWebEvent">
 <summary>
 Raised when the SmartQueryLoad web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SessionStartStartedWebEvent">
 <summary>
 Raised when the SessionStart web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SessionStartCompletedWebEvent">
 <summary>
 Raised when the SessionStart web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SessionStartExceptionWebEvent">
 <summary>
 Raised when the SessionStart web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SmartQueryRefreshStaticIDSetStartedWebEvent">
 <summary>
 Raised when the SmartQueryRefreshStaticIDSet web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SmartQueryRefreshStaticIDSetCompletedWebEvent">
 <summary>
 Raised when the SmartQueryRefreshStaticIDSet web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.SmartQueryRefreshStaticIDSetExceptionWebEvent">
 <summary>
 Raised when the SmartQueryRefreshStaticIDSet web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.BatchSettingsGetStartedWebEvent">
 <summary>
 Raised when the BatchSettingsGet web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.BatchSettingsGetCompletedWebEvent">
 <summary>
 Raised when the BatchSettingsGet web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.BatchSettingsGetExceptionWebEvent">
 <summary>
 Raised when the BatchSettingsGet web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.BatchSettingsSaveStartedWebEvent">
 <summary>
 Raised when the BatchSettingsSave web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.BatchSettingsSaveCompletedWebEvent">
 <summary>
 Raised when the BatchSettingsSave web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.BatchSettingsSaveExceptionWebEvent">
 <summary>
 Raised when the BatchSettingsSave web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ShellSettingsGetStartedWebEvent">
 <summary>
 Raised when the ShellSettingsGet web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ShellSettingsGetCompletedWebEvent">
 <summary>
 Raised when the ShellSettingsGet web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ShellSettingsGetExceptionWebEvent">
 <summary>
 Raised when the ShellSettingsGet web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ShellSettingsSaveStartedWebEvent">
 <summary>
 Raised when the ShellSettingsSave web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ShellSettingsSaveCompletedWebEvent">
 <summary>
 Raised when the ShellSettingsSave web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.ShellSettingsSaveExceptionWebEvent">
 <summary>
 Raised when the ShellSettingsSave web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserDataFormSettingsGetStartedWebEvent">
 <summary>
 Raised when the UserDataFormSettingsGet web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserDataFormSettingsGetCompletedWebEvent">
 <summary>
 Raised when the UserDataFormSettingsGet web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserDataFormSettingsGetExceptionWebEvent">
 <summary>
 Raised when the UserDataFormSettingsGet web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserDataFormSettingsUpdateStartedWebEvent">
 <summary>
 Raised when the UserDataFormSettingsUpdate web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserDataFormSettingsUpdateCompletedWebEvent">
 <summary>
 Raised when the UserDataFormSettingsUpdate web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserDataFormSettingsUpdateExceptionWebEvent">
 <summary>
 Raised when the UserDataFormSettingsUpdate web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserDataListSettingsGetStartedWebEvent">
 <summary>
 Raised when the UserDataListSettingsGet web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserDataListSettingsGetCompletedWebEvent">
 <summary>
 Raised when the UserDataListSettingsGet web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserDataListSettingsGetExceptionWebEvent">
 <summary>
 Raised when the UserDataListSettingsGet web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserFavoritesGetStartedWebEvent">
 <summary>
 Raised when the UserFavoritesGet web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserFavoritesGetCompletedWebEvent">
 <summary>
 Raised when the UserFavoritesGet web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserFavoritesGetExceptionWebEvent">
 <summary>
 Raised when the UserFavoritesGet web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserFavoritesSaveStartedWebEvent">
 <summary>
 Raised when the UserFavoritesSave web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserFavoritesSaveCompletedWebEvent">
 <summary>
 Raised when the UserFavoritesSave web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserFavoritesSaveExceptionWebEvent">
 <summary>
 Raised when the UserFavoritesSave web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserHomePageGetStartedWebEvent">
 <summary>
 Raised when the UserHomePageGet web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserHomePageGetCompletedWebEvent">
 <summary>
 Raised when the UserHomePageGet web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserHomePageGetExceptionWebEvent">
 <summary>
 Raised when the UserHomePageGet web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserHomePageSaveStartedWebEvent">
 <summary>
 Raised when the UserHomePageSave web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserHomePageSaveCompletedWebEvent">
 <summary>
 Raised when the UserHomePageSave web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserHomePageSaveExceptionWebEvent">
 <summary>
 Raised when the UserHomePageSave web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserMultiPageHistoryGetStartedWebEvent">
 <summary>
 Raised when the UserMultiPageHistoryGet web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserMultiPageHistoryGetCompletedWebEvent">
 <summary>
 Raised when the UserMultiPageHistoryGet web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserMultiPageHistoryGetExceptionWebEvent">
 <summary>
 Raised when the UserMultiPageHistoryGet web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserPageHistoryGetStartedWebEvent">
 <summary>
 Raised when the UserPageHistoryGet web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserPageHistoryGetCompletedWebEvent">
 <summary>
 Raised when the UserPageHistoryGet web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserPageHistoryGetExceptionWebEvent">
 <summary>
 Raised when the UserPageHistoryGet web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserPageHistoryUpdateStartedWebEvent">
 <summary>
 Raised when the UserPageHistoryUpdate web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserPageHistoryUpdateCompletedWebEvent">
 <summary>
 Raised when the UserPageHistoryUpdate web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserPageHistoryUpdateExceptionWebEvent">
 <summary>
 Raised when the UserPageHistoryUpdate web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserPrimarySiteGetStartedWebEvent">
 <summary>
 Raised when the UserPrimarySiteGet web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserPrimarySiteGetCompletedWebEvent">
 <summary>
 Raised when the UserPrimarySiteGet web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserPrimarySiteGetExceptionWebEvent">
 <summary>
 Raised when the UserPrimarySiteGet web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserSearchListSettingsGetStartedWebEvent">
 <summary>
 Raised when the UserSearchListSettingsGet web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserSearchListSettingsGetCompletedWebEvent">
 <summary>
 Raised when the UserSearchListSettingsGet web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserSearchListSettingsGetExceptionWebEvent">
 <summary>
 Raised when the UserSearchListSettingsGet web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserSearchListSettingsUpdateStartedWebEvent">
 <summary>
 Raised when the UserSearchListSettingsUpdate web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserSearchListSettingsUpdateCompletedWebEvent">
 <summary>
 Raised when the UserSearchListSettingsUpdate web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserSearchListSettingsUpdateExceptionWebEvent">
 <summary>
 Raised when the UserSearchListSettingsUpdate web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserSearchListTaskHistoryGetStartedWebEvent">
 <summary>
 Raised when the UserSearchListTaskHistoryGet web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserSearchListTaskHistoryGetCompletedWebEvent">
 <summary>
 Raised when the UserSearchListTaskHistoryGet web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserSearchListTaskHistoryGetExceptionWebEvent">
 <summary>
 Raised when the UserSearchListTaskHistoryGet web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserSearchListTaskHistoryGetListStartedWebEvent">
 <summary>
 Raised when the UserSearchListTaskHistoryGetList web method starts execution
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserSearchListTaskHistoryGetListCompletedWebEvent">
 <summary>
 Raised when the UserSearchListTaskHistoryGetList web method completes with no exceptions
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeEvents.UserSearchListTaskHistoryGetListExceptionWebEvent">
 <summary>
 Raised when the UserSearchListTaskHistoryGetList web method has an exception
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.AccessDeniedWebEvent">
 <summary>
 Raised when a SecurityCheck fails or other security access request is denied.
 </summary>
 <remarks>
 Indicates that a request was made for a resource by a user who has not been granted that resource.
 
 Inherits from System.Web.Management.WebFailureAuditEvent so that the default profile will route this to the Event Log.
 </remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.Owin.HealthMonitoringLogger">
 <summary>
 Converts OWIN ILogger events to ASP.NET Health Monitoring events
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestFeatureType">
 <summary>
 Describes the type of feature used by the request
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.ServiceRequestDetail">
 <summary>
 Used to provide request-specific details like which catalog features are used to a consumer (like the monitoring application)
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.WebHealth.ServiceRequestDetail.Feature1TypeCode">
 <summary>
 Describes the type of the primary catalog feature used by the request
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.WebHealth.ServiceRequestDetail.Feature1Id">
 <summary>
 The ID of the primary feature used by the request
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.WebHealth.ServiceRequestDetail.Feature2TypeCode">
 <summary>
 Describes the type of a secondary catalog feature used by the request
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.WebHealth.ServiceRequestDetail.Feature2Id">
 <summary>
 The ID of a secondary feature used by the request
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.WebHealth.ServiceRequestDetail.RecordId">
 <summary>
 The record ID from the request
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.WebHealth.ServiceRequestDetail.ContextRecordId">
 <summary>
 The context record ID from the request
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.WebHealth.ServiceRequestDetail.XmlData">
 <summary>
 Can be used to contain complex details about the request (such as a dataFormItem)
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.WebHealth.ServiceRequestDetail.AddRequestDetails(System.Web.Management.WebEventFormatter)">
 <summary>
 Builds a string containing the information in this class's properties and adds it to the WebEventFormatter
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.IServiceRequestDetailProvider">
 <summary>
 Can be implemented by service requests to surface request-specific details to a consumer
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.WebHealth.IServiceRequestDetailProvider.GetServiceRequestDetails">
 <summary>
 Returns a <see cref="T:Blackbaud.AppFx.Server.WebHealth.ServiceRequestDetail" /> object that contains request-specific details
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.ExternallyAuthenticatedAppUserWebEvent">
 <summary>
 Raised when a RequestContext is created from an externally authenticated AppuserID.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.IServiceMethodHandler">
 <summary>
 Common interface for HTTP handlers that corresponds to a SlowRequestWarnSeconds
 key in Web.config.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.WebHealth.IServiceMethodHandler.RequestMethodName">
 <summary>
 The name of the request method, which should match the name of the corresponding SOAP
 method in order to keep slow request warning thresholds the same over the different
 ways a request may be submitted.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.ServiceRequestWebSuccessAuditEvent">
 <summary>
 Base class for SessionStarted and SessionEnded web events
 </summary>
 <remarks>Provides a base class to allow ease of mapping in web.config to monitor both SessionStarted and SessionEnded web events.</remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.SessionEndedWebEvent">
 <summary>
 Raised when the SessionEnd request is processed
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.IServiceRequestWebEvent">
 <summary>
 Common interface for AppFx WebHealth events that occur during the processing of a Service Request
 </summary>
 <remarks>Provides common properties related to a ServiceRequest.  Web events that implement this interface are raised during the processing of ServiceRequests by the AppFx service.</remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeWebEvent">
 <summary>
 Base class for all RequestLifetimeStarted and RequestLifetimeEnded requests.
 </summary>
 <remarks>Having a common base class for all request lifetime web events allows ease of mapping in web.config to rules and providers.</remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeStartedWebEvent">
 <summary>
 Base class for all specific Service request lifetime started events
 </summary>
 <remarks>For every service request type there is a specific class which inherits RequestLifetimeStartedWebEvent that can be used to monitor the starting of the processing of that request.</remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.RequestLifetimeCompletedWebEvent">
 <summary>
 Base class for all specific Service request lifetime started events
 </summary>
 <remarks>For every service request type there is a specific class which inherits RequestLifetimeCompletedWebEvent that can be used to monitor the completion of the processing of that request.</remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.ServiceRequestWebEvent">
 <summary>
 Base class provides common implementation of IServiceRequestWebEvent for various other more specific Web Event classes
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.WebHealth.ServiceRequestWebEvent.#ctor(System.String,Blackbaud.AppFx.Server.ServiceRequest,System.Int32,System.Int32)">
 <param name="detailcode">Available codes can be found in Blackbaud.AppFx.Server.WebHealth.WebHealthEventCodes</param>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.ServiceWebRequestEvent">
 <summary>
 Custom web event that can be raised from AppFx Service
 </summary>
 <remarks>Use this class to raise a miscelleaneous web event not in the context of a currently processing ServiceRequest.</remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.SessionStateWebEvent">
 <summary>
 Base class for SessionStateEstablished and SessionStateRemoved web events
 </summary>
 <remarks>Provides a base class to allow ease of mapping in web.config to monitor both SessionStateEstablished and SessionStateRemoved web events.</remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.SessionStartedWebEvent">
 <summary>
 Raised when the SessionStart request is processed
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.WebHealth.TraceWebEvent.#ctor(System.String,Blackbaud.AppFx.Server.ServiceRequest,Blackbaud.AppFx.Server.WebHealth.TraceWebEventCategory,System.Int32)">
 <param name="detailcode">Available codes can be found in Blackbaud.AppFx.Server.WebHealth.WebHealthEventCodes</param>
</member>
<member name="M:Blackbaud.AppFx.Server.WebHealth.TraceInfoWebEvent.#ctor(System.String,Blackbaud.AppFx.Server.ServiceRequest,System.Int32)">
 <param name="detailcode">Available codes can be found in Blackbaud.AppFx.Server.WebHealth.WebHealthEventCodes</param>
</member>
<member name="M:Blackbaud.AppFx.Server.WebHealth.TraceWarningWebEvent.#ctor(System.String,Blackbaud.AppFx.Server.ServiceRequest,System.Int32)">
 <param name="detailcode">Available codes can be found in Blackbaud.AppFx.Server.WebHealth.WebHealthEventCodes</param>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.TraceErrorWebEvent">
 <summary>
 Raised when critical errors occur during the processing of a request.
 </summary>
 <remarks>
 Used to indicate a critical error that an administrator should be notified of.  The raising of this event indicates that the service has experienced an unexpected condition that should be investigated.
 
 This class inherits System.Web.Management.WebRequestErrorEvent so that the default profile will route this event to the Event Log.
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.WebHealth.TraceErrorWebEvent.#ctor(System.String,Blackbaud.AppFx.Server.ServiceRequest,System.Int32,System.Exception)">
 <param name="detailcode">Available codes can be found in Blackbaud.AppFx.Server.WebHealth.WebHealthEventCodes</param>
</member>
<member name="M:Blackbaud.AppFx.Server.WebHealth.TraceErrorWebEvent.#ctor(System.String,Blackbaud.AppFx.Server.ServiceRequest,System.Int32)">
 <param name="detailcode">Available codes can be found in Blackbaud.AppFx.Server.WebHealth.WebHealthEventCodes</param>
</member>
<member name="T:Blackbaud.AppFx.Server.WebHealth.WebHealthEventCodes">
 <summary>
 Contains specific codes used to distinguish various WebHealth events that are raised by the AppFx service
 </summary>
 <remarks>The specific codes in this module can be used in the configuration of the event mapping in the web.config webhealth section.  Codes are segmented into ranges based on a particular event type which allows mapping using range specification in web.config in addition to using the event classname.</remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.AppFxWebService">
 <summary>
 The web service facade class for the Blackbaud Application Framework Server.
 </summary>
 <remarks>This class exposes the WebMethods that serve as the entry point into the features of the Blackbaud Application Framework service.
 <para>
 All WebMethod methods use doc/literal/bare with a single parameter.
 All WebMethod methods have a single parameter and the parameter and reply type have explicity XMLElement names specified.
 This helps with interoperability and enforces the "message-ness" of the methods.
 </para>
 <para>
 This class can be inheritited from and each method overridden to wrap each method with custom functionality.
 </para>
 </remarks>
 
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.AdHocQuerySaveSearchList(Blackbaud.AppFx.Server.AdHocQuerySaveSearchListRequest)">
 <summary>
 Creates or updates a search list based on ad-hoc query metadata and adds it to the catalog so it can be consumed by other areas of the application.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.CancelAsyncOperation(Blackbaud.AppFx.Server.CancelAsyncOperationRequest)">
 <summary>
 Cancels a running adhoc query
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.BatchInsertError(Blackbaud.AppFx.Server.BatchInsertErrorRequest)">
 <summary>
 Associates an error message with a batch row.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.FeatureTipsGetTipSeen(Blackbaud.AppFx.Server.FeatureTipsGetTipSeenRequest)">
 <summary>
 Returns whether or not the current application user has seen the specified feature tip.  Optionally can set that the user has now seen the tip.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.FeatureTipsSetTipSeen(Blackbaud.AppFx.Server.FeatureTipsSetTipSeenRequest)">
 <summary>
 Sets whether or not the current application user has seen the specified feature tip
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.ProcessStatsGet(Blackbaud.AppFx.Server.ProcessStatsGetRequest)">
 <summary>
 Returns information about the web server process hosting this web application.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.SelfServicePasswordResetInfoGet(Blackbaud.AppFx.Server.SelfServicePasswordResetInfoGetRequest)">
 <summary>
 Returns the self-service password reset fields from the INSTALLATIONINFO table.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.UserBatchTemplateSettingsGet(Blackbaud.AppFx.Server.UserBatchTemplateSettingsGetRequest)">
 <summary>
 Returns the user settings for a batch template.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.UserBatchTemplateSettingsUpdate(Blackbaud.AppFx.Server.UserBatchTemplateSettingsUpdateRequest)">
 <summary>
 Updates the user settings for a batch template.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.UserPageSettingsGetTabSettings(Blackbaud.AppFx.Server.UserPageSettingsGetTabSettingsRequest)">
 <summary>
 Returns the user settings for the tabs on a page.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.UserPageSettingsUpdateTabSettings(Blackbaud.AppFx.Server.UserPageSettingsUpdateTabSettingsRequest)">
 <summary>
 Updates the user settings for the tabs on a page.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.UserSearchListPersistentFieldsGet(Blackbaud.AppFx.Server.UserSearchListPersistentFieldsGetRequest)">
 <summary>
 Returns the persistent fields for a search list.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.UserListBuilderSettingsGet(Blackbaud.AppFx.Server.UserListBuilderSettingsGetRequest)">
 <summary>
 Gets the user settings for a list builder.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.UserListBuilderSettingsUpdate(Blackbaud.AppFx.Server.UserListBuilderSettingsUpdateRequest)">
 <summary>
 Updates the user settings for a list builder.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.UserPasswordReset(Blackbaud.AppFx.Server.UserPasswordResetRequest)">
 <summary>
 Resets a user's password given a valid token.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.UserPasswordResetLinkSend(Blackbaud.AppFx.Server.UserPasswordResetLinkSendRequest)">
 <summary>
 Checks whether a user exists with the specified email address and sends that user an email containing the user's login name and a link where the user's password can be reset.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.UserPasswordResetTokenValidate(Blackbaud.AppFx.Server.UserPasswordResetTokenValidateRequest)">
 <summary>
 Returns a flag indicating whether the provided password reset token is valid.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.BatchDismissExceptions(Blackbaud.AppFx.Server.BatchDismissExceptionsRequest)">
 <summary>
 Dismisses one or all exceptions for a batch which cannot be resolved automatically.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.AdHocQueryBuildReportDefinition(Blackbaud.AppFx.Server.AdHocQueryBuildReportDefinitionRequest)">
 <summary>
 Creates a report definition RDL based on ad-hoc query metadata and returns the xml as a reply.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.AdHocQueryGetDefinitionForDataList(Blackbaud.AppFx.Server.AdHocQueryGetDefinitionForDataListRequest)">
 <summary>
 Returns the query definition and a list of query fields used to create the data list for the given data list ID
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.AdHocQueryGetDefinitionForReport(Blackbaud.AppFx.Server.AdHocQueryGetDefinitionForReportRequest)">
 <summary>
 Returns the query definition and a list of query fields used to create the report for the given data list ID.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.AdHocQueryGetDefinitionForSmartQuery(Blackbaud.AppFx.Server.AdHocQueryGetDefinitionForSmartQueryRequest)">
 <summary>
 Returns the query definition and a list of query fields used to create the smart query for the given smart query ID
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.AdHocQueryGetSettings(Blackbaud.AppFx.Server.AdHocQueryGetSettingsRequest)">
 <summary>
 Returns the default settings for a query
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.BeginAdHocQueryProcessGetDeferredResult(Blackbaud.AppFx.Server.AdHocQueryProcessGetDeferredResultRequest,System.AsyncCallback,System.Object)">
 <summary>
 Starts invocation of Asynchronous process
 Gets the response from a recently executed ad-hoc query process
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.EndAdHocQueryProcessGetDeferredResult(System.IAsyncResult)">
 <summary>
 Ends invocation of Asynchronous process
 Gets the response from a recently executed ad-hoc query process
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.AdHocQueryRefreshStaticIDSet(Blackbaud.AppFx.Server.AdHocQueryRefreshStaticIDSetRequest)">
 <summary>
 Refreshes the set of IDs in a Static Selection.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.AdHocQuerySaveDataList(Blackbaud.AppFx.Server.AdHocQuerySaveDataListRequest)">
 <summary>
 Creates or updates a data list based on ad-hoc query metadata and adds it to the catalog so it can be consumed by other areas of the application.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.AdHocQuerySaveReport(Blackbaud.AppFx.Server.AdHocQuerySaveReportRequest)">
 <summary>
 Creates or updates a report based on ad-hoc query metadata and adds it to the catalog so it can be consumed by other areas of the application.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.AdHocQuerySaveReportToCatalogAndReportServer(Blackbaud.AppFx.Server.AdHocQuerySaveReportToCatalogAndReportServerRequest)">
 <summary>
 Creates or updates a report based on ad-hoc query metadata and adds it to the catalog and the Report Server so it can be consumed by other areas of the application.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.AdHocQuerySaveSmartQuery(Blackbaud.AppFx.Server.AdHocQuerySaveSmartQueryRequest)">
 <summary>
 Creates or updates a smart query based on ad-hoc query metadata and adds it to the catalog so it can be consumed by other areas of the application.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.AdHocQueryUserGranted(Blackbaud.AppFx.Server.AdHocQueryUserGrantedRequest)">
 <summary>
 Used to determine if the requesting user has been granted (and not denied) permission to a query with the given ID.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.BatchTypeGetMetaData(Blackbaud.AppFx.Server.BatchTypeGetMetaDataRequest)">
 <summary>
 Gets the metadata for the specified batch type ID
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.BatchValidate(Blackbaud.AppFx.Server.BatchValidateRequest)">
 <summary>
 Validates the data for a batch defined by the supplied batch ID
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.BusinessProcessGenerateActiveXScript(Blackbaud.AppFx.Server.BusinessProcessGenerateActiveXScriptRequest)">
 <summary>
 Generates an ActiveX script which can be executed to launch a business process
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.BeginBusinessProcessLaunchGetDeferredResult(Blackbaud.AppFx.Server.BusinessProcessLaunchGetDeferredResultRequest,System.AsyncCallback,System.Object)">
 <summary>
 Starts invocation of Asynchronous process
 Gets the response from a recently executed business process launch
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.EndBusinessProcessLaunchGetDeferredResult(System.IAsyncResult)">
 <summary>
 Ends invocation of Asynchronous process
 Gets the response from a recently executed business process launch
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.ConditionSettingExists(Blackbaud.AppFx.Server.ConditionSettingExistsRequest)">
 <summary>
 Checks whether the supplied condition setting exists in the database.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.ConfigurationDataInformation(Blackbaud.AppFx.Server.ConfigurationDataInformationRequest)">
 <summary>
 Returns information on a given configuration data definition
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.ConfigurationDataList(Blackbaud.AppFx.Server.ConfigurationDataListRequest)">
 <summary>
 Returns a list of all available configuration data definitions.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.CountryStateGetID(Blackbaud.AppFx.Server.CountryStateGetIDRequest)">
 <summary>
 Returns the ID for the given country and state.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.CreditCardVault(Blackbaud.AppFx.Server.CreditCardVaultRequest)">
 <summary>
 Stores credit card information to BBPS
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.CurrencyExchangeRateGet(Blackbaud.AppFx.Server.CurrencyExchangeRateGetRequest)">
 <summary>
 Returns properties for the specified currency exchange rate.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.CurrencyExchangeRateGetLatest(Blackbaud.AppFx.Server.CurrencyExchangeRateGetLatestRequest)">
 <summary>
 Returns properties for the latest currency exchange rate matching the supplied parameters.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.CurrencyGet(Blackbaud.AppFx.Server.CurrencyGetRequest)">
 <summary>
 Returns a currency ID and currency formatting information for the specified currency.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.DataFormSupportsWebUI(Blackbaud.AppFx.Server.DataFormSupportsWebUIRequest)">
 <summary>
 Determines whether or not the specified data form instance can be rendered in a web browser.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.SimpleDataListGetMetaData(Blackbaud.AppFx.Server.SimpleDataListGetMetaDataRequest)">
 <summary>
 Returns the simple data list parameter form definition given the ID
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.EmailGetDbMailConfigInfo(Blackbaud.AppFx.Server.EmailGetDbMailConfigInfoRequest)">
 <summary>
 Returns information about the configuration for email alerts.  The caller must have permission to use the Alert Settings view form or edit form or be a system administrator.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.EmailSendToAppUser(Blackbaud.AppFx.Server.EmailSendToAppUserRequest)">
 <summary>
 Sends an email to the given application user.  Database mail must be configured and the caller must have the Send Email To Application Users privilege.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.GetGeneralPurposeEmailStatus(Blackbaud.AppFx.Server.GetGeneralPurposeEmailStatusRequest)">
 <summary>
 Gets a general purpose email's status by wrapping up EmailServices' GetGeneralPurposeEmailStatus.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.SendGeneralPurposeEmail(Blackbaud.AppFx.Server.SendGeneralPurposeEmailRequest)">
 <summary>
 Sends a general purpose email by wrapping up EmailServices' SendGeneralPurposeEmail.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.ExportDefinitionGetIDByName(Blackbaud.AppFx.Server.ExportDefinitionGetIDByNameRequest)">
 <summary>
 Returns the export definition system ID given the name
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.ExportDefinitionLoad(Blackbaud.AppFx.Server.ExportDefinitionLoadRequest)">
 <summary>
 Returns the export definition and a list of fields and export criteria used for the given ID
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.ExportDefinitionSave(Blackbaud.AppFx.Server.ExportDefinitionSaveRequest)">
 <summary>
 Validates and saves an export definition object to the database
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.GlobalChangeInformation(Blackbaud.AppFx.Server.GlobalChangeInformationRequest)">
 <summary>
 Returns information on a given global change definition
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.GlobalChangeList(Blackbaud.AppFx.Server.GlobalChangeListRequest)">
 <summary>
 Returns a list of all available global changes.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.GlobalChangeParametersLoad(Blackbaud.AppFx.Server.GlobalChangeParametersLoadRequest)">
 <summary>
 Returns the saved parameters for a global change instance.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.GlobalChangeSupportsWebUI(Blackbaud.AppFx.Server.GlobalChangeSupportsWebUIRequest)">
 <summary>
 Determines whether or not the specified global change can be rendered in a web browser.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.AllProductsExpired(Blackbaud.AppFx.Server.AllProductsExpiredRequest)">
 <summary>
 Determines whether or not all optionally installed features are expired.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.GetInstalledProductList(Blackbaud.AppFx.Server.GetInstalledProductListRequest)">
 <summary>
 Returns a list of all currently installed optional components.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.InstalledProductCount(Blackbaud.AppFx.Server.InstalledProductCountRequest)">
 <summary>
 Returns the number of optionally installed features are available.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.ProductIs(Blackbaud.AppFx.Server.ProductIsRequest)">
 <summary>
 Determines whether or not the specified feature has been installed.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.UnlockModule(Blackbaud.AppFx.Server.UnlockModuleRequest)">
 <summary>
 Unlocks the optionally installed component referenced by the unique activation key specified.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.UpdateProductsList(Blackbaud.AppFx.Server.UpdateProductsListRequest)">
 <summary>
 Updates the product with all purchased modules from Blackbaud.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.KpiInstanceGetDynamicGoalValue(Blackbaud.AppFx.Server.KpiInstanceGetDynamicGoalValueRequest)">
 <summary>
 Returns the goal value for a KPI instance which uses a stored procedure to calculate the goal value using a set of parameters defined in the KPI spec.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.KpiDashboardGetMetaData(Blackbaud.AppFx.Server.KpiDashboardGetMetaDataRequest)">
 <summary>
 Gets the metadata for the pages, tabs, and KPI instances a user has chosen for his personalized KPI dashboard.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.KpiDashboardSave(Blackbaud.AppFx.Server.KpiDashboardSaveRequest)">
 <summary>
 Saves the pages, tabs, and KPI instances a user has chosen for his personalized KPI dashboard.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.BeginKpiGetDynamicGoalValue(Blackbaud.AppFx.Server.KpiGetDynamicGoalValueRequest,System.AsyncCallback,System.Object)">
 <summary>
 Starts invocation of Asynchronous process
 Returns the goal value for a KPI which uses a stored procedure to calculate the goal value using a set of parameters defined in the KPI spec.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.EndKpiGetDynamicGoalValue(System.IAsyncResult)">
 <summary>
 Ends invocation of Asynchronous process
 Returns the goal value for a KPI which uses a stored procedure to calculate the goal value using a set of parameters defined in the KPI spec.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.KpiGetMetaData(Blackbaud.AppFx.Server.KpiGetMetaDataRequest)">
 <summary>
 Retrieves a KPI catalog item from the database.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.KpiGetTree(Blackbaud.AppFx.Server.KpiGetTreeRequest)">
 <summary>
 Returns a list of KPI catalog items to be displayed in a tree view.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.BeginKpiGetValue(Blackbaud.AppFx.Server.KpiGetValueRequest,System.AsyncCallback,System.Object)">
 <summary>
 Starts invocation of Asynchronous process
 Gets the value of a KPI based on the provided parameters.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.EndKpiGetValue(System.IAsyncResult)">
 <summary>
 Ends invocation of Asynchronous process
 Gets the value of a KPI based on the provided parameters.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.KpiInstanceDelete(Blackbaud.AppFx.Server.KpiInstanceDeleteRequest)">
 <summary>
 Deletes a KPI instance from the database.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.KpiInstanceGetIDByName(Blackbaud.AppFx.Server.KpiInstanceGetIDByNameRequest)">
 <summary>
 Returns the KPI instance system ID given the name
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.KpiInstanceGetListByKpiCatalogID(Blackbaud.AppFx.Server.KpiInstanceGetListByKpiCatalogIDRequest)">
 <summary>
 Returns a list of KPI instances for a given KPI catalog item.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.KpiInstanceGetMetaData(Blackbaud.AppFx.Server.KpiInstanceGetMetaDataRequest)">
 <summary>
 Retrieves a KPI instance from the database.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.KpiInstanceGetStatus(Blackbaud.AppFx.Server.KpiInstanceGetStatusRequest)">
 <summary>
 Gets the value along with the variance, percent of goal, etc. for a KPI instance based on the provided KPI instance ID.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.KpiInstanceGetTree(Blackbaud.AppFx.Server.KpiInstanceGetTreeRequest)">
 <summary>
 Returns a list of KPI instances to be displayed in a tree view.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.AdHocQueryDelete(Blackbaud.AppFx.Server.AdHocQueryDeleteRequest)">
 <summary>
 Deletes a Query from the Ad-Hoc Query table
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.AdHocQueryGetDefinition(Blackbaud.AppFx.Server.AdHocQueryGetDefinitionRequest)">
 <summary>
 Returns the query definition and a list of query fields used for the given ID
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.AdHocQueryGetIDByName(Blackbaud.AppFx.Server.AdHocQueryGetIDByNameRequest)">
 <summary>
 Returns the query system ID given the name
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.BeginAdHocQueryProcess(Blackbaud.AppFx.Server.AdHocQueryProcessRequest,System.AsyncCallback,System.Object)">
 <summary>
 Starts invocation of Asynchronous process
 Returns the results for the given query ID or query definition
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.EndAdHocQueryProcess(System.IAsyncResult)">
 <summary>
 Ends invocation of Asynchronous process
 Returns the results for the given query ID or query definition
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.AdHocQuerySave(Blackbaud.AppFx.Server.AdHocQuerySaveRequest)">
 <summary>
 Validates and saves a query definition object to the database
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.BatchDefaultsLoad(Blackbaud.AppFx.Server.BatchDefaultsLoadRequest)">
 <summary>
 Returns the value translations for a dataformitem containing default fields for a batch given the formfields that make up the batch
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.BatchLoad(Blackbaud.AppFx.Server.BatchLoadRequest)">
 <summary>
 Gets the data (for edit or view) for a batch defined by the supplied batch ID
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.BatchSave(Blackbaud.AppFx.Server.BatchSaveRequest)">
 <summary>
 Saves the data (for edit or view) for a batch defined by the supplied batch ID
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.BatchTemplateGetMetaData(Blackbaud.AppFx.Server.BatchTemplateGetMetaDataRequest)">
 <summary>
 Gets the metadata for the specified batch template ID
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.BusinessProcessInformation(Blackbaud.AppFx.Server.BusinessProcessInformationRequest)">
 <summary>
 Returns information on a given business process type
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.BeginBusinessProcessLaunch(Blackbaud.AppFx.Server.BusinessProcessLaunchRequest,System.AsyncCallback,System.Object)">
 <summary>
 Starts invocation of Asynchronous process
 Launches a given business process
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.EndBusinessProcessLaunch(System.IAsyncResult)">
 <summary>
 Ends invocation of Asynchronous process
 Launches a given business process
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.BusinessProcessOutputLoad(Blackbaud.AppFx.Server.BusinessProcessOutputLoadRequest)">
 <summary>
 Loads data from a business process output table.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.CatalogBrowserGetCatalogItem(Blackbaud.AppFx.Server.CatalogBrowserGetCatalogItemRequest)">
 <summary>
 Returns the requested catalog item
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.CatalogBrowserGetCatalogResource(Blackbaud.AppFx.Server.CatalogBrowserGetCatalogResourceRequest)">
 <summary>
 Returns the contents of the requested catalog resource.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.CatalogBrowserGetDependencyTree(Blackbaud.AppFx.Server.CatalogBrowserGetDependencyTreeRequest)">
 <summary>
 Returns the dependency tree for the given catalog item
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.CatalogBrowserGetItemByID(Blackbaud.AppFx.Server.CatalogBrowserGetItemByIDRequest)">
 <summary>
 Returns the requested loaded catalog item definition from the database.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.CatalogBrowserGetItems(Blackbaud.AppFx.Server.CatalogBrowserGetItemsRequest)">
 <summary>
 Returns the available catalog items
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.CatalogBrowserLoadCatalogItem(Blackbaud.AppFx.Server.CatalogBrowserLoadCatalogItemRequest)">
 <summary>
 Loads/updates the given catalog item
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.CodeTableEntryAdd(Blackbaud.AppFx.Server.CodeTableEntryAddRequest)">
 <summary>
 Creates a new CodeTable entry item
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.CodeTableEntryDelete(Blackbaud.AppFx.Server.CodeTableEntryDeleteRequest)">
 <summary>
 Deletes a CodeTable entry item
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.CodeTableEntryGetData(Blackbaud.AppFx.Server.CodeTableEntryGetDataRequest)">
 <summary>
 Gets the data for an individual code table entry item
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.CodeTableEntryGetDescription(Blackbaud.AppFx.Server.CodeTableEntryGetDescriptionRequest)">
 <summary>
 Returns the description for the given code table ID.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.CodeTableEntryGetID(Blackbaud.AppFx.Server.CodeTableEntryGetIDRequest)">
 <summary>
 Returns the ID for the given table entry.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.CodeTableEntryGetList(Blackbaud.AppFx.Server.CodeTableEntryGetListRequest)">
 <summary>
 Returns the list of table entries for the given code table.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.CodeTableEntryUpdate(Blackbaud.AppFx.Server.CodeTableEntryUpdateRequest)">
 <summary>
 Updates a CodeTable entry description and active status
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.CodeTableGetDescription(Blackbaud.AppFx.Server.CodeTableGetDescriptionRequest)">
 <summary>
 Returns the user-friendly name for the given code table name.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.CodeTableGetLookupInfo(Blackbaud.AppFx.Server.CodeTableGetLookupInfoRequest)">
 <summary>
 Returns information such as user permissions for the given code table name.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.CountryGetFormats(Blackbaud.AppFx.Server.CountryGetFormatsRequest)">
 <summary>
 Retrieves formatting information for all countries.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.BeginDashboardGetData(Blackbaud.AppFx.Server.DashboardGetDataRequest,System.AsyncCallback,System.Object)">
 <summary>
 Starts invocation of Asynchronous process
 Gets the dataset for the given Dashboard ID
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.EndDashboardGetData(System.IAsyncResult)">
 <summary>
 Ends invocation of Asynchronous process
 Gets the dataset for the given Dashboard ID
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.DashboardGetMetaData(Blackbaud.AppFx.Server.DashboardGetMetaDataRequest)">
 <summary>
 Gets the metadata that defines the dashboard
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.DataFormGetDropDownValueList(Blackbaud.AppFx.Server.DataFormGetDropDownValueListRequest)">
 <summary>
 Returns a list of DataFormDropDownValue rows for the given DataForm
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.DataFormInstanceGetMetaData(Blackbaud.AppFx.Server.DataFormInstanceGetMetaDataRequest)">
 <summary>
 Returns the data form definition for a given data form name or ID.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.DataFormLoad(Blackbaud.AppFx.Server.DataFormLoadRequest)">
 <summary>
 Gets the data (for edit or view) for a record defined by the supplied Form ID
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.DataFormSave(Blackbaud.AppFx.Server.DataFormSaveRequest)">
 <summary>
 Saves (insert or update) the data for a record defined by the supplied Form ID
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.DataListGetMetaData(Blackbaud.AppFx.Server.DataListGetMetaDataRequest)">
 <summary>
 Returns the data list ouptut definition and parameter form definition given the name or ID
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.BeginDataListLoad(Blackbaud.AppFx.Server.DataListLoadRequest,System.AsyncCallback,System.Object)">
 <summary>
 Starts invocation of Asynchronous process
 Loads the data for a datalist given the ID or Name and any parameters
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.EndDataListLoad(System.IAsyncResult)">
 <summary>
 Ends invocation of Asynchronous process
 Loads the data for a datalist given the ID or Name and any parameters
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.DataListLoadMore(Blackbaud.AppFx.Server.DataListLoadMoreRequest)">
 <summary>
 Loads a window of rows from a previous call to DataListLoad which had more TotalAvailableRows than the TotalRequestRows in the reply.  Used to support paging of data in large result sets.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.SimpleDataListGetTranslation(Blackbaud.AppFx.Server.SimpleDataListGetTranslationRequest)">
 <summary>
 Returns the translation text for a simple datalist entry ID
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.SimpleDataListLoad(Blackbaud.AppFx.Server.SimpleDataListLoadRequest)">
 <summary>
 Gets the data for a simple datalist given the ID or Name and any parameters
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.IDMap(Blackbaud.AppFx.Server.IDMapRequest)">
 <summary>
 Maps an ID of one record type to an ID of another record type.  Can also be used to map the current AppUserID to an associated ID of a particular record type.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.KpiInstanceSave(Blackbaud.AppFx.Server.KpiInstanceSaveRequest)">
 <summary>
 Saves a KPI instance to the database.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.KpiSupportsWebUI(Blackbaud.AppFx.Server.KpiSupportsWebUIRequest)">
 <summary>
 Determines whether or not the specified KPI can be rendered in a web browser.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.BeginMapEntityLoad(Blackbaud.AppFx.Server.MapEntityLoadRequest,System.AsyncCallback,System.Object)">
 <summary>
 Starts invocation of Asynchronous process
 Loads the data for a map entity given the ID or Name and any parameters
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.EndMapEntityLoad(System.IAsyncResult)">
 <summary>
 Ends invocation of Asynchronous process
 Loads the data for a map entity given the ID or Name and any parameters
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.MergeTaskGetMetaData(Blackbaud.AppFx.Server.MergeTaskGetMetaDataRequest)">
 <summary>
 Retrieves a MergeTask catalog item from the database.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.NotificationGetByRecordType(Blackbaud.AppFx.Server.NotificationGetByRecordTypeRequest)">
 <summary>
 Returns a list of notifications based on a given record type ID or name.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.NotificationListForRecord(Blackbaud.AppFx.Server.NotificationListForRecordRequest)">
 <summary>
 Returns a list of notifications for a given record.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.PageDefinitionGetListByRecordType(Blackbaud.AppFx.Server.PageDefinitionGetListByRecordTypeRequest)">
 <summary>
 Returns a list of page definitions based on a given record type.  The list will also be filtered by pages containing expression data forms to which the current user has rights (where applicable).
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.PageDefinitionGetMetaData(Blackbaud.AppFx.Server.PageDefinitionGetMetaDataRequest)">
 <summary>
 Returns the metadata for a page definition given the ID or Name
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.QueryViewGetLookUpValues(Blackbaud.AppFx.Server.QueryViewGetLookUpValuesRequest)">
 <summary>
 Returns a list of lookup values for a query field
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.QueryViewGetMetaData(Blackbaud.AppFx.Server.QueryViewGetMetaDataRequest)">
 <summary>
 Returns the query view field definitions given the name or ID.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.QueryViewGetRootList(Blackbaud.AppFx.Server.QueryViewGetRootListRequest)">
 <summary>
 Returns a list of query view root objects.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.QueryViewGetTree(Blackbaud.AppFx.Server.QueryViewGetTreeRequest)">
 <summary>
 Returns the initial query design tree for the given query type or root query object
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.QueryViewGetTreeNode(Blackbaud.AppFx.Server.QueryViewGetTreeNodeRequest)">
 <summary>
 Returns a query tree node given the query view path
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.RecordOperationGetMetaData(Blackbaud.AppFx.Server.RecordOperationGetMetaDataRequest)">
 <summary>
 Returns the record operation parameter form definition given the name or ID
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.BeginRecordOperationPerformGetDeferredResult(Blackbaud.AppFx.Server.RecordOperationPerformGetDeferredResultRequest,System.AsyncCallback,System.Object)">
 <summary>
 Starts invocation of Asynchronous process
 Gets the response from a recently executed record operation perform
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.EndRecordOperationPerformGetDeferredResult(System.IAsyncResult)">
 <summary>
 Ends invocation of Asynchronous process
 Gets the response from a recently executed record operation perform
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.RecordOperationGetPrompt(Blackbaud.AppFx.Server.RecordOperationGetPromptRequest)">
 <summary>
 Retrieves the prompt as defined by the supplied Record Operation name or ID
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.RecordOperationPerform(Blackbaud.AppFx.Server.RecordOperationPerformRequest)">
 <summary>
 Performs the operation on a record as defined by the supplied Record Operation name or ID
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.ReportsExport(Blackbaud.AppFx.Server.ReportsExportRequest)">
 <summary>
 Exports the content of a report.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.ReportsSaveLinkedReport(Blackbaud.AppFx.Server.ReportsSaveLinkedReportRequest)">
 <summary>
 Saves or updates a linked report.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.ReportsGetReportParameters(Blackbaud.AppFx.Server.ReportsGetReportParametersRequest)">
 <summary>
 Retrieves a list of parameters for a report.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.ReportsGetReportSpecByName(Blackbaud.AppFx.Server.ReportsGetReportSpecByNameRequest)">
 <summary>
 Retrieves the Report Specification By Name
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.ReportRootFoldersGetList(Blackbaud.AppFx.Server.ReportRootFoldersGetListRequest)">
 <summary>
 Retrieves a list of Report Services root folders.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.ReportsGenerateReportModel(Blackbaud.AppFx.Server.ReportsGenerateReportModelRequest)">
 <summary>
 Generates a report model based on the provided query view metadata.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.ReportsGetDataSource(Blackbaud.AppFx.Server.ReportsGetDataSourceRequest)">
 <summary>
 Retrieves the fully qualified Report Service data source name for this database.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.ReportsGetReportSpec(Blackbaud.AppFx.Server.ReportsGetReportSpecRequest)">
 <summary>
 Retrieves the Report Specification
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.ReportsGetURLs(Blackbaud.AppFx.Server.ReportsGetURLsRequest)">
 <summary>
 Retrieves the Report Web Service and Report Rendering Engine URLs
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.ReportsPublishServerReportToCatalog(Blackbaud.AppFx.Server.ReportsPublishServerReportToCatalogRequest)">
 <summary>
 Creates a report spec for a report that only exists on the SQL Server report server and loads that spec to the catalog.  This web service is used primarily to enable a report created by a user-generated report model to be used by Page Designer.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.BeginRSSGetFeed(Blackbaud.AppFx.Server.RSSGetFeedRequest,System.AsyncCallback,System.Object)">
 <summary>
 Starts invocation of Asynchronous process
 Returns an RSS feed for the given datalistID.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.EndRSSGetFeed(System.IAsyncResult)">
 <summary>
 Ends invocation of Asynchronous process
 Returns an RSS feed for the given datalistID.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.SearchListFormSupportsWebUI(Blackbaud.AppFx.Server.SearchListFormSupportsWebUIRequest)">
 <summary>
 Determines whether or not the specified search list's parameter form can be rendered in a web browser.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.SearchListGetList(Blackbaud.AppFx.Server.SearchListGetListRequest)">
 <summary>
 Returns a list of search list entries given the record type
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.SearchListGetMetaData(Blackbaud.AppFx.Server.SearchListGetMetaDataRequest)">
 <summary>
 Returns the search list field definitions and filter form definition given the name or ID.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.SearchListGetTranslation(Blackbaud.AppFx.Server.SearchListGetTranslationRequest)">
 <summary>
 Returns the translation text for a search list entry ID
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.BeginSearchListLoad(Blackbaud.AppFx.Server.SearchListLoadRequest,System.AsyncCallback,System.Object)">
 <summary>
 Starts invocation of Asynchronous process
 Gets the data for a search list given the search list ID or Name and any filters
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.EndSearchListLoad(System.IAsyncResult)">
 <summary>
 Ends invocation of Asynchronous process
 Gets the data for a search list given the search list ID or Name and any filters
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.SearchListReplacementGet(Blackbaud.AppFx.Server.SearchListReplacementGetRequest)">
 <summary>
 Gets the search list replacement ID given the search list ID
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.GetSiteHierarchy(Blackbaud.AppFx.Server.GetSiteHierarchyRequest)">
 <summary>
 Retrieves the current site hierarchy.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.SiteFilterGetRows(Blackbaud.AppFx.Server.SiteFilterGetRowsRequest)">
 <summary>
 Retrieves information needed to load the popup for site filtering.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.GetADGroupSid(Blackbaud.AppFx.Server.GetADGroupSidRequest)">
 <summary>
 Returns the Active Directory group sid given the group name
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.SystemRoleAddWebLocalUser(Blackbaud.AppFx.Server.SystemRoleAddWebLocalUserRequest)">
 <summary>
 Adds the local user account on the web server identified by the given name to the System Role with the supplied ID
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.SelectionGetQueryInfo(Blackbaud.AppFx.Server.SelectionGetQueryInfoRequest)">
 <summary>
 Returns the type of query (Ad-hoc or Smart) that a selection is based on.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.DataSourceGetLastUpdated(Blackbaud.AppFx.Server.DataSourceGetLastUpdatedRequest)">
 <summary>
 Returns the date a given data source was last updated.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.GetFiscalYearLastMonth(Blackbaud.AppFx.Server.GetFiscalYearLastMonthRequest)">
 <summary>
 Returns the FISCALYEARLASTMONTH value from the INSTALLATIONINFO table.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.GetFormatPhonesSetting(Blackbaud.AppFx.Server.GetFormatPhonesSettingRequest)">
 <summary>
 Returns the FORMATPHONES value from the INSTALLATIONINFO table.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.InvokeService(Blackbaud.AppFx.Server.InvokeServiceRequest)">
 <summary>
 Invokes a generic service.  Provide assembly and class name to define the generic service to run.  Service parameters are defined in a dataformitem.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.ServiceInfoGetVersionNumber">
 <summary>
 Obsolete Web Service method that returns the current version of the Service.
 </summary>
 <remarks>This value has been superseded by the ServiceInfoGetVersionInfo function.</remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.ServiceInfoGetVersionInfo">
 <summary>
 Web Service method that returns information about the current version of the Service and Environment.
 </summary>
 <returns>Returns the current version of the Service and information about the OS and framework version the service is running on.'</returns>
 <remarks>Use this method to check the current version of the service vs. a known minimum version that your code requires.</remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.ServiceInfoGet(Blackbaud.AppFx.Server.ServiceInfoGetRequest)">
 <summary>
 Returns various server properties such as version information.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.ShellFeatureSearch(Blackbaud.AppFx.Server.ShellFeatureSearchRequest)">
 <summary>
 Returns a list of application features based on the specified criteria.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.ShellGetBrandOptions(Blackbaud.AppFx.Server.ShellGetBrandOptionsRequest)">
 <summary>
 Returns the branding options for the application, which is used to build the Shell UI.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.ShellGetQuickFindTasks(Blackbaud.AppFx.Server.ShellGetQuickFindTasksRequest)">
 <summary>
 Returns a list of tasks for the current user that go to a page via a search list that supports quick find
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.ShellGetTask(Blackbaud.AppFx.Server.ShellGetTaskRequest)">
 <summary>
 Returns information about the specified task and its respective functional area defined in the system.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.ShellGetTaskStatus(Blackbaud.AppFx.Server.ShellGetTaskStatusRequest)">
 <summary>
 Returns information about the completion status of the specified task.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.ShellGetTaskWizard(Blackbaud.AppFx.Server.ShellGetTaskWizardRequest)">
 <summary>
 Returns information about the specified task wizard.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.ShellGetUIWidget(Blackbaud.AppFx.Server.ShellGetUIWidgetRequest)">
 <summary>
 Returns information about the specified UI widget defined in the system.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.ShellGetUserAvailableUIWidgets(Blackbaud.AppFx.Server.ShellGetUserAvailableUIWidgetsRequest)">
 <summary>
 Gets a list of UI widgets available for the current user to add to a functional area.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.SecurityGetRoleFeaturePermTree(Blackbaud.AppFx.Server.SecurityGetRoleFeaturePermTreeRequest)">
 <summary>
 Returns information the granted and denied features for a specific System Role.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.SecurityUserGrantedFeature(Blackbaud.AppFx.Server.SecurityUserGrantedFeatureRequest)">
 <summary>
 Used to determine if the requesting user has been granted (and not denied) a feature in a system role.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.SyncRoleUsers(Blackbaud.AppFx.Server.SyncRoleUsersRequest)">
 <summary>
 Adds users in the supplied userXML into the role defined by the supplied role ID
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.CurrentUserInfoGet(Blackbaud.AppFx.Server.CurrentUserInfoGetRequest)">
 <summary>
 Returns information about the calling user.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.Ping(Blackbaud.AppFx.Server.PingRequest)">
 <summary>
 Used to test availability of the service.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.SessionEndOneWay(Blackbaud.AppFx.Server.SessionEndOneWayRequest)">
 <summary>
 Releases session state associated with the user.
 </summary>    
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.SessionEnd(Blackbaud.AppFx.Server.SessionEndRequest)">
 <summary>
 Releases session state associated with the user.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.GetAvailableREDatabases(Blackbaud.AppFx.Server.GetAvailableREDatabasesRequest)">
 <summary>
 Returns the list of RE databases that are available.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.ShellGetAllTasks(Blackbaud.AppFx.Server.ShellGetAllTasksRequest)">
 <summary>
 Returns information about all tasks and their respective functional areas defined in the system.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.ShellGetNavigation(Blackbaud.AppFx.Server.ShellGetNavigationRequest)">
 <summary>
 Returns the navigation tree for the current user, which is used to build the Shell UI.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.SmartFieldInformation(Blackbaud.AppFx.Server.SmartFieldInformationRequest)">
 <summary>
 Returns information on a given smart field definition
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.SmartFieldList(Blackbaud.AppFx.Server.SmartFieldListRequest)">
 <summary>
 Returns a list of all available smart fields.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.SmartFieldParametersLoad(Blackbaud.AppFx.Server.SmartFieldParametersLoadRequest)">
 <summary>
 Returns the saved parameters for a smart field instance.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.SmartFieldSupportsWebUI(Blackbaud.AppFx.Server.SmartFieldSupportsWebUIRequest)">
 <summary>
 Determines whether or not the specified Smart Field can be rendered in a web browser.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.SmartQueryInstanceUserGranted(Blackbaud.AppFx.Server.SmartQueryInstanceUserGrantedRequest)">
 <summary>
 Used to determine if the requesting user has been granted (and not denied) permission to edit a smart query instance with the given ID.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.BeginSmartQueryLoadGetDeferredResult(Blackbaud.AppFx.Server.SmartQueryLoadGetDeferredResultRequest,System.AsyncCallback,System.Object)">
 <summary>
 Starts invocation of Asynchronous process
 Gets the response from a recently executed smart query load
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.EndSmartQueryLoadGetDeferredResult(System.IAsyncResult)">
 <summary>
 Ends invocation of Asynchronous process
 Gets the response from a recently executed smart query load
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.SmartQuerySupportsWebUI(Blackbaud.AppFx.Server.SmartQuerySupportsWebUIRequest)">
 <summary>
 Determines whether or not the specified Smart Query can be rendered in a web browser.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.SmartQueryInstanceDelete(Blackbaud.AppFx.Server.SmartQueryInstanceDeleteRequest)">
 <summary>
 Deletes the smart query instance given the smart query instance ID.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.SmartQueryInstanceGetIDByName(Blackbaud.AppFx.Server.SmartQueryInstanceGetIDByNameRequest)">
 <summary>
 Returns the smart query instance system ID given the name
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.SmartQueryInstanceGetMetaData(Blackbaud.AppFx.Server.SmartQueryInstanceGetMetaDataRequest)">
 <summary>
 Returns the data input by a user for a Smart Query
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.SmartQueryInstanceSave(Blackbaud.AppFx.Server.SmartQueryInstanceSaveRequest)">
 <summary>
 Saves the data input by a user for a Smart Query
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.SmartQueryGetMetaData(Blackbaud.AppFx.Server.SmartQueryGetMetaDataRequest)">
 <summary>
 Returns the smart query field definitions and filter form definition given the name or ID.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.SmartQueryGetList(Blackbaud.AppFx.Server.SmartQueryGetListRequest)">
 <summary>
 Returns a list of smart query entries given the record type
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.BeginSmartQueryLoad(Blackbaud.AppFx.Server.SmartQueryLoadRequest,System.AsyncCallback,System.Object)">
 <summary>
 Starts invocation of Asynchronous process
 Gets the data for a smart query given the smart query ID or Name and any filters
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.EndSmartQueryLoad(System.IAsyncResult)">
 <summary>
 Ends invocation of Asynchronous process
 Gets the data for a smart query given the smart query ID or Name and any filters
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.PingSimple(System.String)">
 <summary>
 Trivial Web Service method that returns a string passed to it.
 </summary>
 <returns>The string 'ping {server date} - {echo}'</returns>
 <remarks>Use this method to test access to the web service.  No security or database access is invoked with this method.</remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.SmartQueryRefreshStaticIDSet(Blackbaud.AppFx.Server.SmartQueryRefreshStaticIDSetRequest)">
 <summary>
 Refreshes the set of IDs in a Static Selection created from a Smart query.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.BatchSettingsGet(Blackbaud.AppFx.Server.BatchSettingsGetRequest)">
 <summary>
 Returns the set of user settings available for a given batch type.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.BatchSettingsSave(Blackbaud.AppFx.Server.BatchSettingsSaveRequest)">
 <summary>
 Saves the batch settings defined by the current application user for a given batch type.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.ShellSettingsGet(Blackbaud.AppFx.Server.ShellSettingsGetRequest)">
 <summary>
 Returns the set of user settings available for the shell application.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.ShellSettingsSave(Blackbaud.AppFx.Server.ShellSettingsSaveRequest)">
 <summary>
 Saves the shell settings defined by the current application user
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.UserDataFormSettingsGet(Blackbaud.AppFx.Server.UserDataFormSettingsGetRequest)">
 <summary>
 Returns the user settings for a data form.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.UserDataFormSettingsUpdate(Blackbaud.AppFx.Server.UserDataFormSettingsUpdateRequest)">
 <summary>
 Updates the user settings for a data form.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.UserDataListSettingsGet(Blackbaud.AppFx.Server.UserDataListSettingsGetRequest)">
 <summary>
 Returns the user settings for a data list.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.UserFavoritesGet(Blackbaud.AppFx.Server.UserFavoritesGetRequest)">
 <summary>
 Returns the favorites defined for the current application user
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.UserFavoritesSave(Blackbaud.AppFx.Server.UserFavoritesSaveRequest)">
 <summary>
 Saves the favorites defined by the current application user
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.UserHomePageGet(Blackbaud.AppFx.Server.UserHomePageGetRequest)">
 <summary>
 Returns the home page defined for the current application user
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.UserHomePageSave(Blackbaud.AppFx.Server.UserHomePageSaveRequest)">
 <summary>
 Saves the home page defined by the current application user
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.UserMultiPageHistoryGet(Blackbaud.AppFx.Server.UserMultiPageHistoryGetRequest)">
 <summary>
 Returns the page history defined for the current application user for the given set of pages
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.UserPageHistoryGet(Blackbaud.AppFx.Server.UserPageHistoryGetRequest)">
 <summary>
 Returns the page history defined for the current application user
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.UserPageHistoryUpdate(Blackbaud.AppFx.Server.UserPageHistoryUpdateRequest)">
 <summary>
 Updates the name, image key and context id for the specified page history for the current application user
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.UserPrimarySiteGet(Blackbaud.AppFx.Server.UserPrimarySiteGetRequest)">
 <summary>
 Returns the primary site defined for the current application user.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.UserSearchListSettingsGet(Blackbaud.AppFx.Server.UserSearchListSettingsGetRequest)">
 <summary>
 Returns the user settings for a search list task.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.UserSearchListSettingsUpdate(Blackbaud.AppFx.Server.UserSearchListSettingsUpdateRequest)">
 <summary>
 Updates the user settings for a search list.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.UserSearchListTaskHistoryGet(Blackbaud.AppFx.Server.UserSearchListTaskHistoryGetRequest)">
 <summary>
 Returns the user settings for a search list task.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.UserSearchListTaskHistoryGetList(Blackbaud.AppFx.Server.UserSearchListTaskHistoryGetListRequest)">
 <summary>
 Returns the user's search task history.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppFxWebService.SessionStart(Blackbaud.AppFx.Server.SessionStartRequest)">
 <summary>
 Returns a session key to be used to maintain client state between calls to the service.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.AdHocQuerySaveSearchList(Blackbaud.AppFx.Server.AdHocQuerySaveSearchListRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Creates or updates a search list based on ad-hoc query metadata and adds it to the catalog so it can be consumed by other areas of the application.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.AdHocQuerySaveSearchList(Blackbaud.AppFx.Server.AdHocQuerySaveSearchListRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Creates or updates a search list based on ad-hoc query metadata and adds it to the catalog so it can be consumed by other areas of the application.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.CancelAsyncOperation(Blackbaud.AppFx.Server.CancelAsyncOperationRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Cancels a running adhoc query
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.CancelAsyncOperation(Blackbaud.AppFx.Server.CancelAsyncOperationRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Cancels a running adhoc query
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.BatchInsertError(Blackbaud.AppFx.Server.BatchInsertErrorRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Associates an error message with a batch row.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.BatchInsertError(Blackbaud.AppFx.Server.BatchInsertErrorRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Associates an error message with a batch row.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.FeatureTipsGetTipSeen(Blackbaud.AppFx.Server.FeatureTipsGetTipSeenRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns whether or not the current application user has seen the specified feature tip.  Optionally can set that the user has now seen the tip.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.FeatureTipsGetTipSeen(Blackbaud.AppFx.Server.FeatureTipsGetTipSeenRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns whether or not the current application user has seen the specified feature tip.  Optionally can set that the user has now seen the tip.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.FeatureTipsSetTipSeen(Blackbaud.AppFx.Server.FeatureTipsSetTipSeenRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Sets whether or not the current application user has seen the specified feature tip
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.FeatureTipsSetTipSeen(Blackbaud.AppFx.Server.FeatureTipsSetTipSeenRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Sets whether or not the current application user has seen the specified feature tip
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ProcessStatsGet(Blackbaud.AppFx.Server.ProcessStatsGetRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns information about the web server process hosting this web application.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ProcessStatsGet(Blackbaud.AppFx.Server.ProcessStatsGetRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns information about the web server process hosting this web application.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SelfServicePasswordResetInfoGet(Blackbaud.AppFx.Server.SelfServicePasswordResetInfoGetRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the self-service password reset fields from the INSTALLATIONINFO table.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SelfServicePasswordResetInfoGet(Blackbaud.AppFx.Server.SelfServicePasswordResetInfoGetRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the self-service password reset fields from the INSTALLATIONINFO table.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserBatchTemplateSettingsGet(Blackbaud.AppFx.Server.UserBatchTemplateSettingsGetRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the user settings for a batch template.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserBatchTemplateSettingsGet(Blackbaud.AppFx.Server.UserBatchTemplateSettingsGetRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the user settings for a batch template.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserBatchTemplateSettingsUpdate(Blackbaud.AppFx.Server.UserBatchTemplateSettingsUpdateRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Updates the user settings for a batch template.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserBatchTemplateSettingsUpdate(Blackbaud.AppFx.Server.UserBatchTemplateSettingsUpdateRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Updates the user settings for a batch template.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserPageSettingsGetTabSettings(Blackbaud.AppFx.Server.UserPageSettingsGetTabSettingsRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the user settings for the tabs on a page.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserPageSettingsGetTabSettings(Blackbaud.AppFx.Server.UserPageSettingsGetTabSettingsRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the user settings for the tabs on a page.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserPageSettingsUpdateTabSettings(Blackbaud.AppFx.Server.UserPageSettingsUpdateTabSettingsRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Updates the user settings for the tabs on a page.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserPageSettingsUpdateTabSettings(Blackbaud.AppFx.Server.UserPageSettingsUpdateTabSettingsRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Updates the user settings for the tabs on a page.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserSearchListPersistentFieldsGet(Blackbaud.AppFx.Server.UserSearchListPersistentFieldsGetRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the persistent fields for a search list.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserSearchListPersistentFieldsGet(Blackbaud.AppFx.Server.UserSearchListPersistentFieldsGetRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the persistent fields for a search list.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserListBuilderSettingsGet(Blackbaud.AppFx.Server.UserListBuilderSettingsGetRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Gets the user settings for a list builder.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserListBuilderSettingsGet(Blackbaud.AppFx.Server.UserListBuilderSettingsGetRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Gets the user settings for a list builder.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserListBuilderSettingsUpdate(Blackbaud.AppFx.Server.UserListBuilderSettingsUpdateRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Updates the user settings for a list builder.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserListBuilderSettingsUpdate(Blackbaud.AppFx.Server.UserListBuilderSettingsUpdateRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Updates the user settings for a list builder.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserPasswordReset(Blackbaud.AppFx.Server.UserPasswordResetRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Resets a user's password given a valid token.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserPasswordReset(Blackbaud.AppFx.Server.UserPasswordResetRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Resets a user's password given a valid token.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserPasswordResetLinkSend(Blackbaud.AppFx.Server.UserPasswordResetLinkSendRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Checks whether a user exists with the specified email address and sends that user an email containing the user's login name and a link where the user's password can be reset.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserPasswordResetLinkSend(Blackbaud.AppFx.Server.UserPasswordResetLinkSendRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Checks whether a user exists with the specified email address and sends that user an email containing the user's login name and a link where the user's password can be reset.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserPasswordResetTokenValidate(Blackbaud.AppFx.Server.UserPasswordResetTokenValidateRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns a flag indicating whether the provided password reset token is valid.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserPasswordResetTokenValidate(Blackbaud.AppFx.Server.UserPasswordResetTokenValidateRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns a flag indicating whether the provided password reset token is valid.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.BatchDismissExceptions(Blackbaud.AppFx.Server.BatchDismissExceptionsRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Dismisses one or all exceptions for a batch which cannot be resolved automatically.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.BatchDismissExceptions(Blackbaud.AppFx.Server.BatchDismissExceptionsRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Dismisses one or all exceptions for a batch which cannot be resolved automatically.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.AdHocQueryBuildReportDefinition(Blackbaud.AppFx.Server.AdHocQueryBuildReportDefinitionRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Creates a report definition RDL based on ad-hoc query metadata and returns the xml as a reply.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.AdHocQueryBuildReportDefinition(Blackbaud.AppFx.Server.AdHocQueryBuildReportDefinitionRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Creates a report definition RDL based on ad-hoc query metadata and returns the xml as a reply.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.AdHocQueryGetDefinitionForDataList(Blackbaud.AppFx.Server.AdHocQueryGetDefinitionForDataListRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the query definition and a list of query fields used to create the data list for the given data list ID
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.AdHocQueryGetDefinitionForDataList(Blackbaud.AppFx.Server.AdHocQueryGetDefinitionForDataListRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the query definition and a list of query fields used to create the data list for the given data list ID
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.AdHocQueryGetDefinitionForReport(Blackbaud.AppFx.Server.AdHocQueryGetDefinitionForReportRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the query definition and a list of query fields used to create the report for the given data list ID.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.AdHocQueryGetDefinitionForReport(Blackbaud.AppFx.Server.AdHocQueryGetDefinitionForReportRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the query definition and a list of query fields used to create the report for the given data list ID.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.AdHocQueryGetDefinitionForSmartQuery(Blackbaud.AppFx.Server.AdHocQueryGetDefinitionForSmartQueryRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the query definition and a list of query fields used to create the smart query for the given smart query ID
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.AdHocQueryGetDefinitionForSmartQuery(Blackbaud.AppFx.Server.AdHocQueryGetDefinitionForSmartQueryRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the query definition and a list of query fields used to create the smart query for the given smart query ID
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.AdHocQueryGetSettings(Blackbaud.AppFx.Server.AdHocQueryGetSettingsRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the default settings for a query
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.AdHocQueryGetSettings(Blackbaud.AppFx.Server.AdHocQueryGetSettingsRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the default settings for a query
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.AdHocQueryProcessGetDeferredResult(Blackbaud.AppFx.Server.AdHocQueryProcessGetDeferredResultRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Gets the response from a recently executed ad-hoc query process
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.AdHocQueryProcessGetDeferredResult(Blackbaud.AppFx.Server.AdHocQueryProcessGetDeferredResultRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Gets the response from a recently executed ad-hoc query process
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.AdHocQueryRefreshStaticIDSet(Blackbaud.AppFx.Server.AdHocQueryRefreshStaticIDSetRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Refreshes the set of IDs in a Static Selection.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.AdHocQueryRefreshStaticIDSet(Blackbaud.AppFx.Server.AdHocQueryRefreshStaticIDSetRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Refreshes the set of IDs in a Static Selection.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.AdHocQuerySaveDataList(Blackbaud.AppFx.Server.AdHocQuerySaveDataListRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Creates or updates a data list based on ad-hoc query metadata and adds it to the catalog so it can be consumed by other areas of the application.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.AdHocQuerySaveDataList(Blackbaud.AppFx.Server.AdHocQuerySaveDataListRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Creates or updates a data list based on ad-hoc query metadata and adds it to the catalog so it can be consumed by other areas of the application.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.AdHocQuerySaveReport(Blackbaud.AppFx.Server.AdHocQuerySaveReportRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Creates or updates a report based on ad-hoc query metadata and adds it to the catalog so it can be consumed by other areas of the application.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.AdHocQuerySaveReport(Blackbaud.AppFx.Server.AdHocQuerySaveReportRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Creates or updates a report based on ad-hoc query metadata and adds it to the catalog so it can be consumed by other areas of the application.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.AdHocQuerySaveReportToCatalogAndReportServer(Blackbaud.AppFx.Server.AdHocQuerySaveReportToCatalogAndReportServerRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Creates or updates a report based on ad-hoc query metadata and adds it to the catalog and the Report Server so it can be consumed by other areas of the application.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.AdHocQuerySaveReportToCatalogAndReportServer(Blackbaud.AppFx.Server.AdHocQuerySaveReportToCatalogAndReportServerRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Creates or updates a report based on ad-hoc query metadata and adds it to the catalog and the Report Server so it can be consumed by other areas of the application.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.AdHocQuerySaveSmartQuery(Blackbaud.AppFx.Server.AdHocQuerySaveSmartQueryRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Creates or updates a smart query based on ad-hoc query metadata and adds it to the catalog so it can be consumed by other areas of the application.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.AdHocQuerySaveSmartQuery(Blackbaud.AppFx.Server.AdHocQuerySaveSmartQueryRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Creates or updates a smart query based on ad-hoc query metadata and adds it to the catalog so it can be consumed by other areas of the application.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.AdHocQueryUserGranted(Blackbaud.AppFx.Server.AdHocQueryUserGrantedRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Used to determine if the requesting user has been granted (and not denied) permission to a query with the given ID.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.AdHocQueryUserGranted(Blackbaud.AppFx.Server.AdHocQueryUserGrantedRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Used to determine if the requesting user has been granted (and not denied) permission to a query with the given ID.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.BatchTypeGetMetaData(Blackbaud.AppFx.Server.BatchTypeGetMetaDataRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Gets the metadata for the specified batch type ID
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.BatchTypeGetMetaData(Blackbaud.AppFx.Server.BatchTypeGetMetaDataRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Gets the metadata for the specified batch type ID
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.BatchValidate(Blackbaud.AppFx.Server.BatchValidateRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Validates the data for a batch defined by the supplied batch ID
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.BatchValidate(Blackbaud.AppFx.Server.BatchValidateRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Validates the data for a batch defined by the supplied batch ID
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.BusinessProcessGenerateActiveXScript(Blackbaud.AppFx.Server.BusinessProcessGenerateActiveXScriptRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Generates an ActiveX script which can be executed to launch a business process
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.BusinessProcessGenerateActiveXScript(Blackbaud.AppFx.Server.BusinessProcessGenerateActiveXScriptRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Generates an ActiveX script which can be executed to launch a business process
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.BusinessProcessLaunchGetDeferredResult(Blackbaud.AppFx.Server.BusinessProcessLaunchGetDeferredResultRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Gets the response from a recently executed business process launch
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.BusinessProcessLaunchGetDeferredResult(Blackbaud.AppFx.Server.BusinessProcessLaunchGetDeferredResultRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Gets the response from a recently executed business process launch
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ConditionSettingExists(Blackbaud.AppFx.Server.ConditionSettingExistsRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Checks whether the supplied condition setting exists in the database.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ConditionSettingExists(Blackbaud.AppFx.Server.ConditionSettingExistsRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Checks whether the supplied condition setting exists in the database.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ConfigurationDataInformation(Blackbaud.AppFx.Server.ConfigurationDataInformationRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns information on a given configuration data definition
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ConfigurationDataInformation(Blackbaud.AppFx.Server.ConfigurationDataInformationRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns information on a given configuration data definition
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ConfigurationDataList(Blackbaud.AppFx.Server.ConfigurationDataListRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns a list of all available configuration data definitions.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ConfigurationDataList(Blackbaud.AppFx.Server.ConfigurationDataListRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns a list of all available configuration data definitions.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.CountryStateGetID(Blackbaud.AppFx.Server.CountryStateGetIDRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the ID for the given country and state.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.CountryStateGetID(Blackbaud.AppFx.Server.CountryStateGetIDRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the ID for the given country and state.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.CreditCardVault(Blackbaud.AppFx.Server.CreditCardVaultRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Stores credit card information to BBPS
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.CreditCardVault(Blackbaud.AppFx.Server.CreditCardVaultRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Stores credit card information to BBPS
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.CurrencyExchangeRateGet(Blackbaud.AppFx.Server.CurrencyExchangeRateGetRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns properties for the specified currency exchange rate.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.CurrencyExchangeRateGet(Blackbaud.AppFx.Server.CurrencyExchangeRateGetRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns properties for the specified currency exchange rate.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.CurrencyExchangeRateGetLatest(Blackbaud.AppFx.Server.CurrencyExchangeRateGetLatestRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns properties for the latest currency exchange rate matching the supplied parameters.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.CurrencyExchangeRateGetLatest(Blackbaud.AppFx.Server.CurrencyExchangeRateGetLatestRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns properties for the latest currency exchange rate matching the supplied parameters.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.CurrencyGet(Blackbaud.AppFx.Server.CurrencyGetRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns a currency ID and currency formatting information for the specified currency.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.CurrencyGet(Blackbaud.AppFx.Server.CurrencyGetRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns a currency ID and currency formatting information for the specified currency.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.DataFormSupportsWebUI(Blackbaud.AppFx.Server.DataFormSupportsWebUIRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Determines whether or not the specified data form instance can be rendered in a web browser.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.DataFormSupportsWebUI(Blackbaud.AppFx.Server.DataFormSupportsWebUIRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Determines whether or not the specified data form instance can be rendered in a web browser.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SimpleDataListGetMetaData(Blackbaud.AppFx.Server.SimpleDataListGetMetaDataRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the simple data list parameter form definition given the ID
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SimpleDataListGetMetaData(Blackbaud.AppFx.Server.SimpleDataListGetMetaDataRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the simple data list parameter form definition given the ID
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.EmailGetDbMailConfigInfo(Blackbaud.AppFx.Server.EmailGetDbMailConfigInfoRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns information about the configuration for email alerts.  The caller must have permission to use the Alert Settings view form or edit form or be a system administrator.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.EmailGetDbMailConfigInfo(Blackbaud.AppFx.Server.EmailGetDbMailConfigInfoRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns information about the configuration for email alerts.  The caller must have permission to use the Alert Settings view form or edit form or be a system administrator.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.EmailSendToAppUser(Blackbaud.AppFx.Server.EmailSendToAppUserRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Sends an email to the given application user.  Database mail must be configured and the caller must have the Send Email To Application Users privilege.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.EmailSendToAppUser(Blackbaud.AppFx.Server.EmailSendToAppUserRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Sends an email to the given application user.  Database mail must be configured and the caller must have the Send Email To Application Users privilege.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.GetGeneralPurposeEmailStatus(Blackbaud.AppFx.Server.GetGeneralPurposeEmailStatusRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Gets a general purpose email's status by wrapping up EmailServices' GetGeneralPurposeEmailStatus.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.GetGeneralPurposeEmailStatus(Blackbaud.AppFx.Server.GetGeneralPurposeEmailStatusRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Gets a general purpose email's status by wrapping up EmailServices' GetGeneralPurposeEmailStatus.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SendGeneralPurposeEmail(Blackbaud.AppFx.Server.SendGeneralPurposeEmailRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Sends a general purpose email by wrapping up EmailServices' SendGeneralPurposeEmail.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SendGeneralPurposeEmail(Blackbaud.AppFx.Server.SendGeneralPurposeEmailRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Sends a general purpose email by wrapping up EmailServices' SendGeneralPurposeEmail.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ExportDefinitionGetIDByName(Blackbaud.AppFx.Server.ExportDefinitionGetIDByNameRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the export definition system ID given the name
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ExportDefinitionGetIDByName(Blackbaud.AppFx.Server.ExportDefinitionGetIDByNameRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the export definition system ID given the name
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ExportDefinitionLoad(Blackbaud.AppFx.Server.ExportDefinitionLoadRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the export definition and a list of fields and export criteria used for the given ID
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ExportDefinitionLoad(Blackbaud.AppFx.Server.ExportDefinitionLoadRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the export definition and a list of fields and export criteria used for the given ID
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ExportDefinitionSave(Blackbaud.AppFx.Server.ExportDefinitionSaveRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Validates and saves an export definition object to the database
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ExportDefinitionSave(Blackbaud.AppFx.Server.ExportDefinitionSaveRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Validates and saves an export definition object to the database
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.GlobalChangeInformation(Blackbaud.AppFx.Server.GlobalChangeInformationRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns information on a given global change definition
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.GlobalChangeInformation(Blackbaud.AppFx.Server.GlobalChangeInformationRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns information on a given global change definition
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.GlobalChangeList(Blackbaud.AppFx.Server.GlobalChangeListRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns a list of all available global changes.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.GlobalChangeList(Blackbaud.AppFx.Server.GlobalChangeListRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns a list of all available global changes.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.GlobalChangeParametersLoad(Blackbaud.AppFx.Server.GlobalChangeParametersLoadRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the saved parameters for a global change instance.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.GlobalChangeParametersLoad(Blackbaud.AppFx.Server.GlobalChangeParametersLoadRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the saved parameters for a global change instance.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.GlobalChangeSupportsWebUI(Blackbaud.AppFx.Server.GlobalChangeSupportsWebUIRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Determines whether or not the specified global change can be rendered in a web browser.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.GlobalChangeSupportsWebUI(Blackbaud.AppFx.Server.GlobalChangeSupportsWebUIRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Determines whether or not the specified global change can be rendered in a web browser.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.AllProductsExpired(Blackbaud.AppFx.Server.AllProductsExpiredRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Determines whether or not all optionally installed features are expired.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.AllProductsExpired(Blackbaud.AppFx.Server.AllProductsExpiredRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Determines whether or not all optionally installed features are expired.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.GetInstalledProductList(Blackbaud.AppFx.Server.GetInstalledProductListRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns a list of all currently installed optional components.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.GetInstalledProductList(Blackbaud.AppFx.Server.GetInstalledProductListRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns a list of all currently installed optional components.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.InstalledProductCount(Blackbaud.AppFx.Server.InstalledProductCountRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the number of optionally installed features are available.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.InstalledProductCount(Blackbaud.AppFx.Server.InstalledProductCountRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the number of optionally installed features are available.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ProductIs(Blackbaud.AppFx.Server.ProductIsRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Determines whether or not the specified feature has been installed.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ProductIs(Blackbaud.AppFx.Server.ProductIsRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Determines whether or not the specified feature has been installed.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UnlockModule(Blackbaud.AppFx.Server.UnlockModuleRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Unlocks the optionally installed component referenced by the unique activation key specified.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UnlockModule(Blackbaud.AppFx.Server.UnlockModuleRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Unlocks the optionally installed component referenced by the unique activation key specified.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UpdateProductsList(Blackbaud.AppFx.Server.UpdateProductsListRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Updates the product with all purchased modules from Blackbaud.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UpdateProductsList(Blackbaud.AppFx.Server.UpdateProductsListRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Updates the product with all purchased modules from Blackbaud.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.KpiInstanceGetDynamicGoalValue(Blackbaud.AppFx.Server.KpiInstanceGetDynamicGoalValueRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the goal value for a KPI instance which uses a stored procedure to calculate the goal value using a set of parameters defined in the KPI spec.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.KpiInstanceGetDynamicGoalValue(Blackbaud.AppFx.Server.KpiInstanceGetDynamicGoalValueRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the goal value for a KPI instance which uses a stored procedure to calculate the goal value using a set of parameters defined in the KPI spec.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.KpiDashboardGetMetaData(Blackbaud.AppFx.Server.KpiDashboardGetMetaDataRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Gets the metadata for the pages, tabs, and KPI instances a user has chosen for his personalized KPI dashboard.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.KpiDashboardGetMetaData(Blackbaud.AppFx.Server.KpiDashboardGetMetaDataRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Gets the metadata for the pages, tabs, and KPI instances a user has chosen for his personalized KPI dashboard.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.KpiDashboardSave(Blackbaud.AppFx.Server.KpiDashboardSaveRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Saves the pages, tabs, and KPI instances a user has chosen for his personalized KPI dashboard.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.KpiDashboardSave(Blackbaud.AppFx.Server.KpiDashboardSaveRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Saves the pages, tabs, and KPI instances a user has chosen for his personalized KPI dashboard.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.KpiGetDynamicGoalValue(Blackbaud.AppFx.Server.KpiGetDynamicGoalValueRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the goal value for a KPI which uses a stored procedure to calculate the goal value using a set of parameters defined in the KPI spec.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.KpiGetDynamicGoalValue(Blackbaud.AppFx.Server.KpiGetDynamicGoalValueRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the goal value for a KPI which uses a stored procedure to calculate the goal value using a set of parameters defined in the KPI spec.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.KpiGetMetaData(Blackbaud.AppFx.Server.KpiGetMetaDataRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Retrieves a KPI catalog item from the database.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.KpiGetMetaData(Blackbaud.AppFx.Server.KpiGetMetaDataRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Retrieves a KPI catalog item from the database.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.KpiGetTree(Blackbaud.AppFx.Server.KpiGetTreeRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns a list of KPI catalog items to be displayed in a tree view.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.KpiGetTree(Blackbaud.AppFx.Server.KpiGetTreeRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns a list of KPI catalog items to be displayed in a tree view.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.KpiGetValue(Blackbaud.AppFx.Server.KpiGetValueRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Gets the value of a KPI based on the provided parameters.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.KpiGetValue(Blackbaud.AppFx.Server.KpiGetValueRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Gets the value of a KPI based on the provided parameters.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.KpiInstanceDelete(Blackbaud.AppFx.Server.KpiInstanceDeleteRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Deletes a KPI instance from the database.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.KpiInstanceDelete(Blackbaud.AppFx.Server.KpiInstanceDeleteRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Deletes a KPI instance from the database.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.KpiInstanceGetIDByName(Blackbaud.AppFx.Server.KpiInstanceGetIDByNameRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the KPI instance system ID given the name
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.KpiInstanceGetIDByName(Blackbaud.AppFx.Server.KpiInstanceGetIDByNameRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the KPI instance system ID given the name
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.KpiInstanceGetListByKpiCatalogID(Blackbaud.AppFx.Server.KpiInstanceGetListByKpiCatalogIDRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns a list of KPI instances for a given KPI catalog item.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.KpiInstanceGetListByKpiCatalogID(Blackbaud.AppFx.Server.KpiInstanceGetListByKpiCatalogIDRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns a list of KPI instances for a given KPI catalog item.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.KpiInstanceGetMetaData(Blackbaud.AppFx.Server.KpiInstanceGetMetaDataRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Retrieves a KPI instance from the database.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.KpiInstanceGetMetaData(Blackbaud.AppFx.Server.KpiInstanceGetMetaDataRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Retrieves a KPI instance from the database.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.KpiInstanceGetStatus(Blackbaud.AppFx.Server.KpiInstanceGetStatusRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Gets the value along with the variance, percent of goal, etc. for a KPI instance based on the provided KPI instance ID.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.KpiInstanceGetStatus(Blackbaud.AppFx.Server.KpiInstanceGetStatusRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Gets the value along with the variance, percent of goal, etc. for a KPI instance based on the provided KPI instance ID.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.KpiInstanceGetTree(Blackbaud.AppFx.Server.KpiInstanceGetTreeRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns a list of KPI instances to be displayed in a tree view.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.KpiInstanceGetTree(Blackbaud.AppFx.Server.KpiInstanceGetTreeRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns a list of KPI instances to be displayed in a tree view.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.AdHocQueryDelete(Blackbaud.AppFx.Server.AdHocQueryDeleteRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Deletes a Query from the Ad-Hoc Query table
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.AdHocQueryDelete(Blackbaud.AppFx.Server.AdHocQueryDeleteRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Deletes a Query from the Ad-Hoc Query table
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.AdHocQueryGetDefinition(Blackbaud.AppFx.Server.AdHocQueryGetDefinitionRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the query definition and a list of query fields used for the given ID
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.AdHocQueryGetDefinition(Blackbaud.AppFx.Server.AdHocQueryGetDefinitionRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the query definition and a list of query fields used for the given ID
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.AdHocQueryGetIDByName(Blackbaud.AppFx.Server.AdHocQueryGetIDByNameRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the query system ID given the name
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.AdHocQueryGetIDByName(Blackbaud.AppFx.Server.AdHocQueryGetIDByNameRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the query system ID given the name
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.AdHocQueryProcess(Blackbaud.AppFx.Server.AdHocQueryProcessRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the results for the given query ID or query definition
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.AdHocQueryProcess(Blackbaud.AppFx.Server.AdHocQueryProcessRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the results for the given query ID or query definition
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.AdHocQuerySave(Blackbaud.AppFx.Server.AdHocQuerySaveRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Validates and saves a query definition object to the database
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.AdHocQuerySave(Blackbaud.AppFx.Server.AdHocQuerySaveRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Validates and saves a query definition object to the database
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.BatchDefaultsLoad(Blackbaud.AppFx.Server.BatchDefaultsLoadRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the value translations for a dataformitem containing default fields for a batch given the formfields that make up the batch
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.BatchDefaultsLoad(Blackbaud.AppFx.Server.BatchDefaultsLoadRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the value translations for a dataformitem containing default fields for a batch given the formfields that make up the batch
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.BatchLoad(Blackbaud.AppFx.Server.BatchLoadRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Gets the data (for edit or view) for a batch defined by the supplied batch ID
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.BatchLoad(Blackbaud.AppFx.Server.BatchLoadRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Gets the data (for edit or view) for a batch defined by the supplied batch ID
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.BatchSave(Blackbaud.AppFx.Server.BatchSaveRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Saves the data (for edit or view) for a batch defined by the supplied batch ID
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.BatchSave(Blackbaud.AppFx.Server.BatchSaveRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Saves the data (for edit or view) for a batch defined by the supplied batch ID
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.BatchTemplateGetMetaData(Blackbaud.AppFx.Server.BatchTemplateGetMetaDataRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Gets the metadata for the specified batch template ID
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.BatchTemplateGetMetaData(Blackbaud.AppFx.Server.BatchTemplateGetMetaDataRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Gets the metadata for the specified batch template ID
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.BusinessProcessInformation(Blackbaud.AppFx.Server.BusinessProcessInformationRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns information on a given business process type
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.BusinessProcessInformation(Blackbaud.AppFx.Server.BusinessProcessInformationRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns information on a given business process type
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.BusinessProcessLaunch(Blackbaud.AppFx.Server.BusinessProcessLaunchRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Launches a given business process
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.BusinessProcessLaunch(Blackbaud.AppFx.Server.BusinessProcessLaunchRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Launches a given business process
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.BusinessProcessOutputLoad(Blackbaud.AppFx.Server.BusinessProcessOutputLoadRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Loads data from a business process output table.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.BusinessProcessOutputLoad(Blackbaud.AppFx.Server.BusinessProcessOutputLoadRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Loads data from a business process output table.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.CatalogBrowserGetCatalogItem(Blackbaud.AppFx.Server.CatalogBrowserGetCatalogItemRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the requested catalog item
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.CatalogBrowserGetCatalogItem(Blackbaud.AppFx.Server.CatalogBrowserGetCatalogItemRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the requested catalog item
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.CatalogBrowserGetCatalogResource(Blackbaud.AppFx.Server.CatalogBrowserGetCatalogResourceRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the contents of the requested catalog resource.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.CatalogBrowserGetCatalogResource(Blackbaud.AppFx.Server.CatalogBrowserGetCatalogResourceRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the contents of the requested catalog resource.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.CatalogBrowserGetDependencyTree(Blackbaud.AppFx.Server.CatalogBrowserGetDependencyTreeRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the dependency tree for the given catalog item
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.CatalogBrowserGetDependencyTree(Blackbaud.AppFx.Server.CatalogBrowserGetDependencyTreeRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the dependency tree for the given catalog item
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.CatalogBrowserGetItemByID(Blackbaud.AppFx.Server.CatalogBrowserGetItemByIDRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the requested loaded catalog item definition from the database.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.CatalogBrowserGetItemByID(Blackbaud.AppFx.Server.CatalogBrowserGetItemByIDRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the requested loaded catalog item definition from the database.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.CatalogBrowserGetItems(Blackbaud.AppFx.Server.CatalogBrowserGetItemsRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the available catalog items
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.CatalogBrowserGetItems(Blackbaud.AppFx.Server.CatalogBrowserGetItemsRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the available catalog items
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.CatalogBrowserLoadCatalogItem(Blackbaud.AppFx.Server.CatalogBrowserLoadCatalogItemRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Loads/updates the given catalog item
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.CatalogBrowserLoadCatalogItem(Blackbaud.AppFx.Server.CatalogBrowserLoadCatalogItemRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Loads/updates the given catalog item
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.CodeTableEntryAdd(Blackbaud.AppFx.Server.CodeTableEntryAddRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Creates a new CodeTable entry item
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.CodeTableEntryAdd(Blackbaud.AppFx.Server.CodeTableEntryAddRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Creates a new CodeTable entry item
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.CodeTableEntryDelete(Blackbaud.AppFx.Server.CodeTableEntryDeleteRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Deletes a CodeTable entry item
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.CodeTableEntryDelete(Blackbaud.AppFx.Server.CodeTableEntryDeleteRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Deletes a CodeTable entry item
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.CodeTableEntryGetData(Blackbaud.AppFx.Server.CodeTableEntryGetDataRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Gets the data for an individual code table entry item
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.CodeTableEntryGetData(Blackbaud.AppFx.Server.CodeTableEntryGetDataRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Gets the data for an individual code table entry item
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.CodeTableEntryGetDescription(Blackbaud.AppFx.Server.CodeTableEntryGetDescriptionRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the description for the given code table ID.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.CodeTableEntryGetDescription(Blackbaud.AppFx.Server.CodeTableEntryGetDescriptionRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the description for the given code table ID.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.CodeTableEntryGetID(Blackbaud.AppFx.Server.CodeTableEntryGetIDRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the ID for the given table entry.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.CodeTableEntryGetID(Blackbaud.AppFx.Server.CodeTableEntryGetIDRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the ID for the given table entry.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.CodeTableEntryGetList(Blackbaud.AppFx.Server.CodeTableEntryGetListRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the list of table entries for the given code table.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.CodeTableEntryGetList(Blackbaud.AppFx.Server.CodeTableEntryGetListRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the list of table entries for the given code table.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.CodeTableEntryUpdate(Blackbaud.AppFx.Server.CodeTableEntryUpdateRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Updates a CodeTable entry description and active status
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.CodeTableEntryUpdate(Blackbaud.AppFx.Server.CodeTableEntryUpdateRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Updates a CodeTable entry description and active status
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.CodeTableGetDescription(Blackbaud.AppFx.Server.CodeTableGetDescriptionRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the user-friendly name for the given code table name.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.CodeTableGetDescription(Blackbaud.AppFx.Server.CodeTableGetDescriptionRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the user-friendly name for the given code table name.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.CodeTableGetLookupInfo(Blackbaud.AppFx.Server.CodeTableGetLookupInfoRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns information such as user permissions for the given code table name.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.CodeTableGetLookupInfo(Blackbaud.AppFx.Server.CodeTableGetLookupInfoRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns information such as user permissions for the given code table name.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.CountryGetFormats(Blackbaud.AppFx.Server.CountryGetFormatsRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Retrieves formatting information for all countries.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.CountryGetFormats(Blackbaud.AppFx.Server.CountryGetFormatsRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Retrieves formatting information for all countries.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.DashboardGetData(Blackbaud.AppFx.Server.DashboardGetDataRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Gets the dataset for the given Dashboard ID
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.DashboardGetData(Blackbaud.AppFx.Server.DashboardGetDataRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Gets the dataset for the given Dashboard ID
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.DashboardGetMetaData(Blackbaud.AppFx.Server.DashboardGetMetaDataRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Gets the metadata that defines the dashboard
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.DashboardGetMetaData(Blackbaud.AppFx.Server.DashboardGetMetaDataRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Gets the metadata that defines the dashboard
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.DataFormGetDropDownValueList(Blackbaud.AppFx.Server.DataFormGetDropDownValueListRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns a list of DataFormDropDownValue rows for the given DataForm
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.DataFormGetDropDownValueList(Blackbaud.AppFx.Server.DataFormGetDropDownValueListRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns a list of DataFormDropDownValue rows for the given DataForm
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.DataFormInstanceGetMetaData(Blackbaud.AppFx.Server.DataFormInstanceGetMetaDataRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the data form definition for a given data form name or ID.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.DataFormInstanceGetMetaData(Blackbaud.AppFx.Server.DataFormInstanceGetMetaDataRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the data form definition for a given data form name or ID.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.DataFormLoad(Blackbaud.AppFx.Server.DataFormLoadRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Gets the data (for edit or view) for a record defined by the supplied Form ID
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.DataFormLoad(Blackbaud.AppFx.Server.DataFormLoadRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Gets the data (for edit or view) for a record defined by the supplied Form ID
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.DataFormSave(Blackbaud.AppFx.Server.DataFormSaveRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Saves (insert or update) the data for a record defined by the supplied Form ID
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.DataFormSave(Blackbaud.AppFx.Server.DataFormSaveRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Saves (insert or update) the data for a record defined by the supplied Form ID
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.DataListGetMetaData(Blackbaud.AppFx.Server.DataListGetMetaDataRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the data list ouptut definition and parameter form definition given the name or ID
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.DataListGetMetaData(Blackbaud.AppFx.Server.DataListGetMetaDataRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the data list ouptut definition and parameter form definition given the name or ID
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.DataListLoad(Blackbaud.AppFx.Server.DataListLoadRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Loads the data for a datalist given the ID or Name and any parameters
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.DataListLoad(Blackbaud.AppFx.Server.DataListLoadRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Loads the data for a datalist given the ID or Name and any parameters
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.DataListLoadMore(Blackbaud.AppFx.Server.DataListLoadMoreRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Loads a window of rows from a previous call to DataListLoad which had more TotalAvailableRows than the TotalRequestRows in the reply.  Used to support paging of data in large result sets.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.DataListLoadMore(Blackbaud.AppFx.Server.DataListLoadMoreRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Loads a window of rows from a previous call to DataListLoad which had more TotalAvailableRows than the TotalRequestRows in the reply.  Used to support paging of data in large result sets.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SimpleDataListGetTranslation(Blackbaud.AppFx.Server.SimpleDataListGetTranslationRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the translation text for a simple datalist entry ID
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SimpleDataListGetTranslation(Blackbaud.AppFx.Server.SimpleDataListGetTranslationRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the translation text for a simple datalist entry ID
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SimpleDataListLoad(Blackbaud.AppFx.Server.SimpleDataListLoadRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Gets the data for a simple datalist given the ID or Name and any parameters
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SimpleDataListLoad(Blackbaud.AppFx.Server.SimpleDataListLoadRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Gets the data for a simple datalist given the ID or Name and any parameters
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.IDMap(Blackbaud.AppFx.Server.IDMapRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Maps an ID of one record type to an ID of another record type.  Can also be used to map the current AppUserID to an associated ID of a particular record type.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.IDMap(Blackbaud.AppFx.Server.IDMapRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Maps an ID of one record type to an ID of another record type.  Can also be used to map the current AppUserID to an associated ID of a particular record type.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.KpiInstanceSave(Blackbaud.AppFx.Server.KpiInstanceSaveRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Saves a KPI instance to the database.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.KpiInstanceSave(Blackbaud.AppFx.Server.KpiInstanceSaveRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Saves a KPI instance to the database.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.KpiSupportsWebUI(Blackbaud.AppFx.Server.KpiSupportsWebUIRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Determines whether or not the specified KPI can be rendered in a web browser.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.KpiSupportsWebUI(Blackbaud.AppFx.Server.KpiSupportsWebUIRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Determines whether or not the specified KPI can be rendered in a web browser.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.MapEntityLoad(Blackbaud.AppFx.Server.MapEntityLoadRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Loads the data for a map entity given the ID or Name and any parameters
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.MapEntityLoad(Blackbaud.AppFx.Server.MapEntityLoadRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Loads the data for a map entity given the ID or Name and any parameters
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.MergeTaskGetMetaData(Blackbaud.AppFx.Server.MergeTaskGetMetaDataRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Retrieves a MergeTask catalog item from the database.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.MergeTaskGetMetaData(Blackbaud.AppFx.Server.MergeTaskGetMetaDataRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Retrieves a MergeTask catalog item from the database.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.NotificationGetByRecordType(Blackbaud.AppFx.Server.NotificationGetByRecordTypeRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns a list of notifications based on a given record type ID or name.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.NotificationGetByRecordType(Blackbaud.AppFx.Server.NotificationGetByRecordTypeRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns a list of notifications based on a given record type ID or name.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.NotificationListForRecord(Blackbaud.AppFx.Server.NotificationListForRecordRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns a list of notifications for a given record.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.NotificationListForRecord(Blackbaud.AppFx.Server.NotificationListForRecordRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns a list of notifications for a given record.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.PageDefinitionGetListByRecordType(Blackbaud.AppFx.Server.PageDefinitionGetListByRecordTypeRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns a list of page definitions based on a given record type.  The list will also be filtered by pages containing expression data forms to which the current user has rights (where applicable).
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.PageDefinitionGetListByRecordType(Blackbaud.AppFx.Server.PageDefinitionGetListByRecordTypeRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns a list of page definitions based on a given record type.  The list will also be filtered by pages containing expression data forms to which the current user has rights (where applicable).
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.PageDefinitionGetMetaData(Blackbaud.AppFx.Server.PageDefinitionGetMetaDataRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the metadata for a page definition given the ID or Name
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.PageDefinitionGetMetaData(Blackbaud.AppFx.Server.PageDefinitionGetMetaDataRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the metadata for a page definition given the ID or Name
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.QueryViewGetLookUpValues(Blackbaud.AppFx.Server.QueryViewGetLookUpValuesRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns a list of lookup values for a query field
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.QueryViewGetLookUpValues(Blackbaud.AppFx.Server.QueryViewGetLookUpValuesRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns a list of lookup values for a query field
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.QueryViewGetMetaData(Blackbaud.AppFx.Server.QueryViewGetMetaDataRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the query view field definitions given the name or ID.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.QueryViewGetMetaData(Blackbaud.AppFx.Server.QueryViewGetMetaDataRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the query view field definitions given the name or ID.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.QueryViewGetRootList(Blackbaud.AppFx.Server.QueryViewGetRootListRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns a list of query view root objects.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.QueryViewGetRootList(Blackbaud.AppFx.Server.QueryViewGetRootListRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns a list of query view root objects.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.QueryViewGetTree(Blackbaud.AppFx.Server.QueryViewGetTreeRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the initial query design tree for the given query type or root query object
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.QueryViewGetTree(Blackbaud.AppFx.Server.QueryViewGetTreeRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the initial query design tree for the given query type or root query object
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.QueryViewGetTreeNode(Blackbaud.AppFx.Server.QueryViewGetTreeNodeRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns a query tree node given the query view path
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.QueryViewGetTreeNode(Blackbaud.AppFx.Server.QueryViewGetTreeNodeRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns a query tree node given the query view path
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.RecordOperationGetMetaData(Blackbaud.AppFx.Server.RecordOperationGetMetaDataRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the record operation parameter form definition given the name or ID
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.RecordOperationGetMetaData(Blackbaud.AppFx.Server.RecordOperationGetMetaDataRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the record operation parameter form definition given the name or ID
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.RecordOperationPerformGetDeferredResult(Blackbaud.AppFx.Server.RecordOperationPerformGetDeferredResultRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Gets the response from a recently executed record operation perform
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.RecordOperationPerformGetDeferredResult(Blackbaud.AppFx.Server.RecordOperationPerformGetDeferredResultRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Gets the response from a recently executed record operation perform
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.RecordOperationGetPrompt(Blackbaud.AppFx.Server.RecordOperationGetPromptRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Retrieves the prompt as defined by the supplied Record Operation name or ID
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.RecordOperationGetPrompt(Blackbaud.AppFx.Server.RecordOperationGetPromptRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Retrieves the prompt as defined by the supplied Record Operation name or ID
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.RecordOperationPerform(Blackbaud.AppFx.Server.RecordOperationPerformRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Performs the operation on a record as defined by the supplied Record Operation name or ID
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.RecordOperationPerform(Blackbaud.AppFx.Server.RecordOperationPerformRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Performs the operation on a record as defined by the supplied Record Operation name or ID
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ReportsExport(Blackbaud.AppFx.Server.ReportsExportRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Exports the content of a report.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ReportsExport(Blackbaud.AppFx.Server.ReportsExportRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Exports the content of a report.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ReportsSaveLinkedReport(Blackbaud.AppFx.Server.ReportsSaveLinkedReportRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Saves or updates a linked report.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ReportsSaveLinkedReport(Blackbaud.AppFx.Server.ReportsSaveLinkedReportRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Saves or updates a linked report.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ReportsGetReportParameters(Blackbaud.AppFx.Server.ReportsGetReportParametersRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Retrieves a list of parameters for a report.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ReportsGetReportParameters(Blackbaud.AppFx.Server.ReportsGetReportParametersRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Retrieves a list of parameters for a report.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ReportsGetReportSpecByName(Blackbaud.AppFx.Server.ReportsGetReportSpecByNameRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Retrieves the Report Specification By Name
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ReportsGetReportSpecByName(Blackbaud.AppFx.Server.ReportsGetReportSpecByNameRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Retrieves the Report Specification By Name
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ReportRootFoldersGetList(Blackbaud.AppFx.Server.ReportRootFoldersGetListRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Retrieves a list of Report Services root folders.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ReportRootFoldersGetList(Blackbaud.AppFx.Server.ReportRootFoldersGetListRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Retrieves a list of Report Services root folders.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ReportsGenerateReportModel(Blackbaud.AppFx.Server.ReportsGenerateReportModelRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Generates a report model based on the provided query view metadata.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ReportsGenerateReportModel(Blackbaud.AppFx.Server.ReportsGenerateReportModelRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Generates a report model based on the provided query view metadata.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ReportsGetDataSource(Blackbaud.AppFx.Server.ReportsGetDataSourceRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Retrieves the fully qualified Report Service data source name for this database.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ReportsGetDataSource(Blackbaud.AppFx.Server.ReportsGetDataSourceRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Retrieves the fully qualified Report Service data source name for this database.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ReportsGetReportSpec(Blackbaud.AppFx.Server.ReportsGetReportSpecRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Retrieves the Report Specification
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ReportsGetReportSpec(Blackbaud.AppFx.Server.ReportsGetReportSpecRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Retrieves the Report Specification
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ReportsGetURLs(Blackbaud.AppFx.Server.ReportsGetURLsRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Retrieves the Report Web Service and Report Rendering Engine URLs
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ReportsGetURLs(Blackbaud.AppFx.Server.ReportsGetURLsRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Retrieves the Report Web Service and Report Rendering Engine URLs
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ReportsPublishServerReportToCatalog(Blackbaud.AppFx.Server.ReportsPublishServerReportToCatalogRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Creates a report spec for a report that only exists on the SQL Server report server and loads that spec to the catalog.  This web service is used primarily to enable a report created by a user-generated report model to be used by Page Designer.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ReportsPublishServerReportToCatalog(Blackbaud.AppFx.Server.ReportsPublishServerReportToCatalogRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Creates a report spec for a report that only exists on the SQL Server report server and loads that spec to the catalog.  This web service is used primarily to enable a report created by a user-generated report model to be used by Page Designer.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.RSSGetFeed(Blackbaud.AppFx.Server.RSSGetFeedRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns an RSS feed for the given datalistID.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.RSSGetFeed(Blackbaud.AppFx.Server.RSSGetFeedRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns an RSS feed for the given datalistID.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SearchListFormSupportsWebUI(Blackbaud.AppFx.Server.SearchListFormSupportsWebUIRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Determines whether or not the specified search list's parameter form can be rendered in a web browser.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SearchListFormSupportsWebUI(Blackbaud.AppFx.Server.SearchListFormSupportsWebUIRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Determines whether or not the specified search list's parameter form can be rendered in a web browser.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SearchListGetList(Blackbaud.AppFx.Server.SearchListGetListRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns a list of search list entries given the record type
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SearchListGetList(Blackbaud.AppFx.Server.SearchListGetListRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns a list of search list entries given the record type
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SearchListGetMetaData(Blackbaud.AppFx.Server.SearchListGetMetaDataRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the search list field definitions and filter form definition given the name or ID.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SearchListGetMetaData(Blackbaud.AppFx.Server.SearchListGetMetaDataRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the search list field definitions and filter form definition given the name or ID.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SearchListGetTranslation(Blackbaud.AppFx.Server.SearchListGetTranslationRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the translation text for a search list entry ID
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SearchListGetTranslation(Blackbaud.AppFx.Server.SearchListGetTranslationRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the translation text for a search list entry ID
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SearchListLoad(Blackbaud.AppFx.Server.SearchListLoadRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Gets the data for a search list given the search list ID or Name and any filters
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SearchListLoad(Blackbaud.AppFx.Server.SearchListLoadRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Gets the data for a search list given the search list ID or Name and any filters
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SearchListReplacementGet(Blackbaud.AppFx.Server.SearchListReplacementGetRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Gets the search list replacement ID given the search list ID
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SearchListReplacementGet(Blackbaud.AppFx.Server.SearchListReplacementGetRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Gets the search list replacement ID given the search list ID
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.GetSiteHierarchy(Blackbaud.AppFx.Server.GetSiteHierarchyRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Retrieves the current site hierarchy.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.GetSiteHierarchy(Blackbaud.AppFx.Server.GetSiteHierarchyRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Retrieves the current site hierarchy.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SiteFilterGetRows(Blackbaud.AppFx.Server.SiteFilterGetRowsRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Retrieves information needed to load the popup for site filtering.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SiteFilterGetRows(Blackbaud.AppFx.Server.SiteFilterGetRowsRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Retrieves information needed to load the popup for site filtering.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.GetADGroupSid(Blackbaud.AppFx.Server.GetADGroupSidRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the Active Directory group sid given the group name
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.GetADGroupSid(Blackbaud.AppFx.Server.GetADGroupSidRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the Active Directory group sid given the group name
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SystemRoleAddWebLocalUser(Blackbaud.AppFx.Server.SystemRoleAddWebLocalUserRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Adds the local user account on the web server identified by the given name to the System Role with the supplied ID
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SystemRoleAddWebLocalUser(Blackbaud.AppFx.Server.SystemRoleAddWebLocalUserRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Adds the local user account on the web server identified by the given name to the System Role with the supplied ID
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SelectionGetQueryInfo(Blackbaud.AppFx.Server.SelectionGetQueryInfoRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the type of query (Ad-hoc or Smart) that a selection is based on.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SelectionGetQueryInfo(Blackbaud.AppFx.Server.SelectionGetQueryInfoRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the type of query (Ad-hoc or Smart) that a selection is based on.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.DataSourceGetLastUpdated(Blackbaud.AppFx.Server.DataSourceGetLastUpdatedRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the date a given data source was last updated.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.DataSourceGetLastUpdated(Blackbaud.AppFx.Server.DataSourceGetLastUpdatedRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the date a given data source was last updated.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.GetFiscalYearLastMonth(Blackbaud.AppFx.Server.GetFiscalYearLastMonthRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the FISCALYEARLASTMONTH value from the INSTALLATIONINFO table.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.GetFiscalYearLastMonth(Blackbaud.AppFx.Server.GetFiscalYearLastMonthRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the FISCALYEARLASTMONTH value from the INSTALLATIONINFO table.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.GetFormatPhonesSetting(Blackbaud.AppFx.Server.GetFormatPhonesSettingRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the FORMATPHONES value from the INSTALLATIONINFO table.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.GetFormatPhonesSetting(Blackbaud.AppFx.Server.GetFormatPhonesSettingRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the FORMATPHONES value from the INSTALLATIONINFO table.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.InvokeService(Blackbaud.AppFx.Server.InvokeServiceRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Invokes a generic service.  Provide assembly and class name to define the generic service to run.  Service parameters are defined in a dataformitem.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.InvokeService(Blackbaud.AppFx.Server.InvokeServiceRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Invokes a generic service.  Provide assembly and class name to define the generic service to run.  Service parameters are defined in a dataformitem.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ServiceInfoGet(Blackbaud.AppFx.Server.ServiceInfoGetRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns various server properties such as version information.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ServiceInfoGet(Blackbaud.AppFx.Server.ServiceInfoGetRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns various server properties such as version information.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ShellFeatureSearch(Blackbaud.AppFx.Server.ShellFeatureSearchRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns a list of application features based on the specified criteria.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ShellFeatureSearch(Blackbaud.AppFx.Server.ShellFeatureSearchRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns a list of application features based on the specified criteria.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ShellGetBrandOptions(Blackbaud.AppFx.Server.ShellGetBrandOptionsRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the branding options for the application, which is used to build the Shell UI.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ShellGetBrandOptions(Blackbaud.AppFx.Server.ShellGetBrandOptionsRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the branding options for the application, which is used to build the Shell UI.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ShellGetQuickFindTasks(Blackbaud.AppFx.Server.ShellGetQuickFindTasksRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns a list of tasks for the current user that go to a page via a search list that supports quick find
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ShellGetQuickFindTasks(Blackbaud.AppFx.Server.ShellGetQuickFindTasksRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns a list of tasks for the current user that go to a page via a search list that supports quick find
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ShellGetTask(Blackbaud.AppFx.Server.ShellGetTaskRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns information about the specified task and its respective functional area defined in the system.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ShellGetTask(Blackbaud.AppFx.Server.ShellGetTaskRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns information about the specified task and its respective functional area defined in the system.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ShellGetTaskStatus(Blackbaud.AppFx.Server.ShellGetTaskStatusRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns information about the completion status of the specified task.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ShellGetTaskStatus(Blackbaud.AppFx.Server.ShellGetTaskStatusRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns information about the completion status of the specified task.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ShellGetTaskWizard(Blackbaud.AppFx.Server.ShellGetTaskWizardRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns information about the specified task wizard.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ShellGetTaskWizard(Blackbaud.AppFx.Server.ShellGetTaskWizardRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns information about the specified task wizard.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ShellGetUIWidget(Blackbaud.AppFx.Server.ShellGetUIWidgetRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns information about the specified UI widget defined in the system.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ShellGetUIWidget(Blackbaud.AppFx.Server.ShellGetUIWidgetRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns information about the specified UI widget defined in the system.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ShellGetUserAvailableUIWidgets(Blackbaud.AppFx.Server.ShellGetUserAvailableUIWidgetsRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Gets a list of UI widgets available for the current user to add to a functional area.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ShellGetUserAvailableUIWidgets(Blackbaud.AppFx.Server.ShellGetUserAvailableUIWidgetsRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Gets a list of UI widgets available for the current user to add to a functional area.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SecurityGetRoleFeaturePermTree(Blackbaud.AppFx.Server.SecurityGetRoleFeaturePermTreeRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns information the granted and denied features for a specific System Role.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SecurityGetRoleFeaturePermTree(Blackbaud.AppFx.Server.SecurityGetRoleFeaturePermTreeRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns information the granted and denied features for a specific System Role.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SecurityUserGrantedFeature(Blackbaud.AppFx.Server.SecurityUserGrantedFeatureRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Used to determine if the requesting user has been granted (and not denied) a feature in a system role.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SecurityUserGrantedFeature(Blackbaud.AppFx.Server.SecurityUserGrantedFeatureRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Used to determine if the requesting user has been granted (and not denied) a feature in a system role.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SyncRoleUsers(Blackbaud.AppFx.Server.SyncRoleUsersRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Adds users in the supplied userXML into the role defined by the supplied role ID
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SyncRoleUsers(Blackbaud.AppFx.Server.SyncRoleUsersRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Adds users in the supplied userXML into the role defined by the supplied role ID
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.CurrentUserInfoGet(Blackbaud.AppFx.Server.CurrentUserInfoGetRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns information about the calling user.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.CurrentUserInfoGet(Blackbaud.AppFx.Server.CurrentUserInfoGetRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns information about the calling user.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.Ping(Blackbaud.AppFx.Server.PingRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Used to test availability of the service.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.Ping(Blackbaud.AppFx.Server.PingRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Used to test availability of the service.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SessionEnd(Blackbaud.AppFx.Server.SessionEndRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Releases session state associated with the user.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SessionEnd(Blackbaud.AppFx.Server.SessionEndRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Releases session state associated with the user.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.GetAvailableREDatabases(Blackbaud.AppFx.Server.GetAvailableREDatabasesRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the list of RE databases that are available.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.GetAvailableREDatabases(Blackbaud.AppFx.Server.GetAvailableREDatabasesRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the list of RE databases that are available.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ShellGetAllTasks(Blackbaud.AppFx.Server.ShellGetAllTasksRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns information about all tasks and their respective functional areas defined in the system.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ShellGetAllTasks(Blackbaud.AppFx.Server.ShellGetAllTasksRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns information about all tasks and their respective functional areas defined in the system.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ShellGetNavigation(Blackbaud.AppFx.Server.ShellGetNavigationRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the navigation tree for the current user, which is used to build the Shell UI.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ShellGetNavigation(Blackbaud.AppFx.Server.ShellGetNavigationRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the navigation tree for the current user, which is used to build the Shell UI.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SmartFieldInformation(Blackbaud.AppFx.Server.SmartFieldInformationRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns information on a given smart field definition
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SmartFieldInformation(Blackbaud.AppFx.Server.SmartFieldInformationRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns information on a given smart field definition
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SmartFieldList(Blackbaud.AppFx.Server.SmartFieldListRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns a list of all available smart fields.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SmartFieldList(Blackbaud.AppFx.Server.SmartFieldListRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns a list of all available smart fields.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SmartFieldParametersLoad(Blackbaud.AppFx.Server.SmartFieldParametersLoadRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the saved parameters for a smart field instance.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SmartFieldParametersLoad(Blackbaud.AppFx.Server.SmartFieldParametersLoadRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the saved parameters for a smart field instance.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SmartFieldSupportsWebUI(Blackbaud.AppFx.Server.SmartFieldSupportsWebUIRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Determines whether or not the specified Smart Field can be rendered in a web browser.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SmartFieldSupportsWebUI(Blackbaud.AppFx.Server.SmartFieldSupportsWebUIRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Determines whether or not the specified Smart Field can be rendered in a web browser.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SmartQueryInstanceUserGranted(Blackbaud.AppFx.Server.SmartQueryInstanceUserGrantedRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Used to determine if the requesting user has been granted (and not denied) permission to edit a smart query instance with the given ID.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SmartQueryInstanceUserGranted(Blackbaud.AppFx.Server.SmartQueryInstanceUserGrantedRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Used to determine if the requesting user has been granted (and not denied) permission to edit a smart query instance with the given ID.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SmartQueryLoadGetDeferredResult(Blackbaud.AppFx.Server.SmartQueryLoadGetDeferredResultRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Gets the response from a recently executed smart query load
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SmartQueryLoadGetDeferredResult(Blackbaud.AppFx.Server.SmartQueryLoadGetDeferredResultRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Gets the response from a recently executed smart query load
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SmartQuerySupportsWebUI(Blackbaud.AppFx.Server.SmartQuerySupportsWebUIRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Determines whether or not the specified Smart Query can be rendered in a web browser.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SmartQuerySupportsWebUI(Blackbaud.AppFx.Server.SmartQuerySupportsWebUIRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Determines whether or not the specified Smart Query can be rendered in a web browser.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SmartQueryInstanceDelete(Blackbaud.AppFx.Server.SmartQueryInstanceDeleteRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Deletes the smart query instance given the smart query instance ID.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SmartQueryInstanceDelete(Blackbaud.AppFx.Server.SmartQueryInstanceDeleteRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Deletes the smart query instance given the smart query instance ID.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SmartQueryInstanceGetIDByName(Blackbaud.AppFx.Server.SmartQueryInstanceGetIDByNameRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the smart query instance system ID given the name
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SmartQueryInstanceGetIDByName(Blackbaud.AppFx.Server.SmartQueryInstanceGetIDByNameRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the smart query instance system ID given the name
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SmartQueryInstanceGetMetaData(Blackbaud.AppFx.Server.SmartQueryInstanceGetMetaDataRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the data input by a user for a Smart Query
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SmartQueryInstanceGetMetaData(Blackbaud.AppFx.Server.SmartQueryInstanceGetMetaDataRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the data input by a user for a Smart Query
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SmartQueryInstanceSave(Blackbaud.AppFx.Server.SmartQueryInstanceSaveRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Saves the data input by a user for a Smart Query
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SmartQueryInstanceSave(Blackbaud.AppFx.Server.SmartQueryInstanceSaveRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Saves the data input by a user for a Smart Query
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SmartQueryGetMetaData(Blackbaud.AppFx.Server.SmartQueryGetMetaDataRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the smart query field definitions and filter form definition given the name or ID.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SmartQueryGetMetaData(Blackbaud.AppFx.Server.SmartQueryGetMetaDataRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the smart query field definitions and filter form definition given the name or ID.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SmartQueryGetList(Blackbaud.AppFx.Server.SmartQueryGetListRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns a list of smart query entries given the record type
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SmartQueryGetList(Blackbaud.AppFx.Server.SmartQueryGetListRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns a list of smart query entries given the record type
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SmartQueryLoad(Blackbaud.AppFx.Server.SmartQueryLoadRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Gets the data for a smart query given the smart query ID or Name and any filters
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SmartQueryLoad(Blackbaud.AppFx.Server.SmartQueryLoadRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Gets the data for a smart query given the smart query ID or Name and any filters
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SessionStart(Blackbaud.AppFx.Server.SessionStartRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns a session key to be used to maintain client state between calls to the service.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SessionStart(Blackbaud.AppFx.Server.SessionStartRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns a session key to be used to maintain client state between calls to the service.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SmartQueryRefreshStaticIDSet(Blackbaud.AppFx.Server.SmartQueryRefreshStaticIDSetRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Refreshes the set of IDs in a Static Selection created from a Smart query.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.SmartQueryRefreshStaticIDSet(Blackbaud.AppFx.Server.SmartQueryRefreshStaticIDSetRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Refreshes the set of IDs in a Static Selection created from a Smart query.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.BatchSettingsGet(Blackbaud.AppFx.Server.BatchSettingsGetRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the set of user settings available for a given batch type.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.BatchSettingsGet(Blackbaud.AppFx.Server.BatchSettingsGetRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the set of user settings available for a given batch type.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.BatchSettingsSave(Blackbaud.AppFx.Server.BatchSettingsSaveRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Saves the batch settings defined by the current application user for a given batch type.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.BatchSettingsSave(Blackbaud.AppFx.Server.BatchSettingsSaveRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Saves the batch settings defined by the current application user for a given batch type.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ShellSettingsGet(Blackbaud.AppFx.Server.ShellSettingsGetRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the set of user settings available for the shell application.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ShellSettingsGet(Blackbaud.AppFx.Server.ShellSettingsGetRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the set of user settings available for the shell application.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ShellSettingsSave(Blackbaud.AppFx.Server.ShellSettingsSaveRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Saves the shell settings defined by the current application user
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.ShellSettingsSave(Blackbaud.AppFx.Server.ShellSettingsSaveRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Saves the shell settings defined by the current application user
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserDataFormSettingsGet(Blackbaud.AppFx.Server.UserDataFormSettingsGetRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the user settings for a data form.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserDataFormSettingsGet(Blackbaud.AppFx.Server.UserDataFormSettingsGetRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the user settings for a data form.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserDataFormSettingsUpdate(Blackbaud.AppFx.Server.UserDataFormSettingsUpdateRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Updates the user settings for a data form.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserDataFormSettingsUpdate(Blackbaud.AppFx.Server.UserDataFormSettingsUpdateRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Updates the user settings for a data form.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserDataListSettingsGet(Blackbaud.AppFx.Server.UserDataListSettingsGetRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the user settings for a data list.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserDataListSettingsGet(Blackbaud.AppFx.Server.UserDataListSettingsGetRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the user settings for a data list.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserFavoritesGet(Blackbaud.AppFx.Server.UserFavoritesGetRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the favorites defined for the current application user
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserFavoritesGet(Blackbaud.AppFx.Server.UserFavoritesGetRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the favorites defined for the current application user
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserFavoritesSave(Blackbaud.AppFx.Server.UserFavoritesSaveRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Saves the favorites defined by the current application user
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserFavoritesSave(Blackbaud.AppFx.Server.UserFavoritesSaveRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Saves the favorites defined by the current application user
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserHomePageGet(Blackbaud.AppFx.Server.UserHomePageGetRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the home page defined for the current application user
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserHomePageGet(Blackbaud.AppFx.Server.UserHomePageGetRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the home page defined for the current application user
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserHomePageSave(Blackbaud.AppFx.Server.UserHomePageSaveRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Saves the home page defined by the current application user
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserHomePageSave(Blackbaud.AppFx.Server.UserHomePageSaveRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Saves the home page defined by the current application user
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserMultiPageHistoryGet(Blackbaud.AppFx.Server.UserMultiPageHistoryGetRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the page history defined for the current application user for the given set of pages
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserMultiPageHistoryGet(Blackbaud.AppFx.Server.UserMultiPageHistoryGetRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the page history defined for the current application user for the given set of pages
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserPageHistoryGet(Blackbaud.AppFx.Server.UserPageHistoryGetRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the page history defined for the current application user
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserPageHistoryGet(Blackbaud.AppFx.Server.UserPageHistoryGetRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the page history defined for the current application user
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserPageHistoryUpdate(Blackbaud.AppFx.Server.UserPageHistoryUpdateRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Updates the name, image key and context id for the specified page history for the current application user
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserPageHistoryUpdate(Blackbaud.AppFx.Server.UserPageHistoryUpdateRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Updates the name, image key and context id for the specified page history for the current application user
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserPrimarySiteGet(Blackbaud.AppFx.Server.UserPrimarySiteGetRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the primary site defined for the current application user.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserPrimarySiteGet(Blackbaud.AppFx.Server.UserPrimarySiteGetRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the primary site defined for the current application user.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserSearchListSettingsGet(Blackbaud.AppFx.Server.UserSearchListSettingsGetRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the user settings for a search list task.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserSearchListSettingsGet(Blackbaud.AppFx.Server.UserSearchListSettingsGetRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the user settings for a search list task.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserSearchListSettingsUpdate(Blackbaud.AppFx.Server.UserSearchListSettingsUpdateRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Updates the user settings for a search list.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserSearchListSettingsUpdate(Blackbaud.AppFx.Server.UserSearchListSettingsUpdateRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Updates the user settings for a search list.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserSearchListTaskHistoryGet(Blackbaud.AppFx.Server.UserSearchListTaskHistoryGetRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the user settings for a search list task.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserSearchListTaskHistoryGet(Blackbaud.AppFx.Server.UserSearchListTaskHistoryGetRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the user settings for a search list task.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserSearchListTaskHistoryGetList(Blackbaud.AppFx.Server.UserSearchListTaskHistoryGetListRequest,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the user's search task history.
 Does not check security, assumes a trusted subsystem is calling the method
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceMethods.UserSearchListTaskHistoryGetList(Blackbaud.AppFx.Server.UserSearchListTaskHistoryGetListRequest,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Returns the user's search task history.
 Pass false for checkSecurity to assume a trusted subsystem is calling the method, true to check security.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CancelAsyncOperationProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.CancelAsyncOperationRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CancelAsyncOperationRequest">
 <summary>
 Cancels a running adhoc query
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.CancelAsyncOperationRequest.ID">
 <summary>
 ID of the operation to cancel. If you do not provide a Key, this ID will be used along with information in the RequestContext
 to generate an async operation key.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.CancelAsyncOperationRequest.CancelID">
 <summary>
 This ID will be used to identify the async operation to cancel. 
 </summary>
 <remarks></remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.CancelAsyncOperationReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.CancelAsyncOperationRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AsyncSupport.CancellableSqlCommandAsyncResult">
 <summary>
 We need to be able to pass data like "I canceled the SQL Command" to the SQL event handler. Because we're piggy-backing on 
 the Infinity client's asynchronous requests, we can't pass it up in the state object (since we don't own that object). 
 
 Instead, we'll return and accept our own IAsyncResult that has the additional data we need. For everything else, we'll pass
 through to the IAsyncResult we got back from SQLCommand's BeginExecuteReader. 
 </summary>
 <remarks></remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.AsyncSupport.CancellableDataReader">
 <summary>
 Wraps up an IDataReader (probably a SQLDataReader) but is able to know if it's been canceled or not (and why). 
 
 This makes it perfect for returning from CancellableSqlCommandHelper's EndExecuteReader since the caller can 
 determine if it was canceled or not before trying to use the IDataReader as if it were a 
 normal SqlDataReader from SqlCommand.EndExecuteReader.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.AsyncSupport.CancellableSqlCommandHelper">
 <summary>
 This class executes a SQL Command in a safe asynchronous fashion. It is able to correctly time out the SQL Command
 (based on the command's CommandTimeout property) and is able to be canceled by AsyncRequestManager. 
 
 The result from this classes EndExecuteReader can be treated as a normal IDataRecord, but it is also able to indicate if 
 the command timed out or was manually canceled before the result was returned. 
 
 The user of the class is expected to use this information to either return data to the user or 
 indicate that the command was cancelled or timed out.
 </summary>
 <remarks>Users of this class should ignore <see cref="T:Blackbaud.AppFx.Server.AsyncSupport.AsyncRequestManager">AsyncRequestManager</see> for the given opeartion, as this class wraps up dealing with it.</remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AsyncSupport.CancellableSqlCommandHelper.#ctor(System.String,System.Data.SqlClient.SqlCommand)">
 <summary>
 Create a new CancellableSqlCommandHelper based on a SqlCommand. Once this object has been created, you should use it to begin and end asynchronous 
 data read operations instead of using the SqlCommand. 
 </summary>
 <param name="processName">The name of the process using this helper. For example, "DataListLoad". Used when logging errors.</param>
 <param name="cmd">Do not do anything with this parameter after this call. Do not hold on to it, do not dispose it, do not call any methods on it, etc.</param>
 <remarks>If you were not intending to call BeginExecuteReader on cmd, you should not use this class.</remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AsyncSupport.CancellableSqlCommandHelper.#ctor(System.String,Blackbaud.AppFx.Server.ServiceRequest,System.Data.SqlClient.SqlCommand)">
 <summary>
 Create a new CancellableSqlCommandHelper based on a SqlCommand. Once this object has been created, you should use it to begin and end asynchronous 
 data read operations instead of using the SqlCommand. 
 </summary>
 <param name="processName">The name of the process using this helper. For example, "DataListLoad". Used when logging errors.</param>
 <param name="request">The ServiceRequest that sparked the creation of this helper. Used when logging errors.</param>
 <param name="cmd">Do not do anything with this parameter after this call. Do not hold on to it, do not dispose it, do not call any methods on it, etc.</param>
 <remarks>If you were not intending to call BeginExecuteReader on cmd, you should not use this class.</remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AsyncSupport.CancellableSqlCommandHelper.#ctor(Blackbaud.AppFx.Server.AsyncSupport.CancellableSqlCommandHelper.Arguments)">
 <summary>
 Create a new CancellableSqlCommandHelper based on a SqlCommand. Once this object has been created, you should use it to begin and end asynchronous 
 data read operations instead of using the SqlCommand. 
 </summary>
 <param name="args">Arguments for fine-controlling the class.</param>
 <remarks>If you were not intending to call BeginExecuteReader on cmd, you should not use this class.</remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AsyncSupport.CancellableSqlCommandHelper.BeginExecuteReader(Blackbaud.AppFx.Server.ICancelAsync,System.AsyncCallback,System.Object,System.String)">
 <summary>
 Begins an asyncrhonous "BeginExecuteReader" operation on the SQLCommand for this instance. This operation may be canceled via a CancelAsyncOperation
 web request. It will also timeout correctly according to the CommandTimeout property on the SQLCommand. 
 
 The data, or ultimate request status (canceled, timed out, etc.) will be returned to the caller from EndExecuteReader.
 </summary>
 <param name="cancellableHost">The cancellable request which is trying to call into SQL Server. This is almost certainly the caller of BeginExecuteReader. The host's CancelAsync should call this helper's <see cref="M:Blackbaud.AppFx.Server.AsyncSupport.CancellableSqlCommandHelper.CancelAsync(System.IAsyncResult)"/> in addition to any other processing it wishes to do.</param>
 <param name="callback">An AsyncCallback delegate which, if present, will be called after the asynchronous call is complete.</param>
 <param name="stateObject">An object which will be passed back into the callback.</param>
 <param name="cancelID">The unique cancelID which will be used to register for a possible user cancellation via the CancelAsyncOperation web request. If this ID is null or empty, user cancellation will not be possible.</param>
 <returns>An IAsyncResult representing the operation.</returns>
 <remarks>When your AsyncCallback delegate has been called or after the returned IAsyncResult signals completion, you must call EndExecuteReader on this instance to complete the operation and retrieve any results.</remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AsyncSupport.CancellableSqlCommandHelper.BeginExecuteReaderArgs.CancellableHost">
 <summary>
 The cancellable request which is trying to call into SQL Server. This is almost certainly the caller of BeginExecuteReader. The host's CancelAsync should call this helper's <see cref="M:Blackbaud.AppFx.Server.AsyncSupport.CancellableSqlCommandHelper.CancelAsync(System.IAsyncResult)"/> in addition to any other processing it wishes to do.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AsyncSupport.CancellableSqlCommandHelper.BeginExecuteReaderArgs.Callback">
 <summary>
 An AsyncCallback delegate which, if present, will be called after the asynchronous call is complete.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AsyncSupport.CancellableSqlCommandHelper.BeginExecuteReaderArgs.StateObject">
 <summary>
 An object which will be passed back into the callback.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AsyncSupport.CancellableSqlCommandHelper.BeginExecuteReaderArgs.CommandBehavior">
 <summary>
 Indicates options for statement execution and data retrieval.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AsyncSupport.CancellableSqlCommandHelper.BeginExecuteReaderArgs.CancelID">
 <summary>
 The unique cancelID which will be used to register for a possible user cancellation via the CancelAsyncOperation web request. If this ID is null or empty, user cancellation will not be possible.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AsyncSupport.CancellableSqlCommandHelper.BeginExecuteReaderArgs.EnforceTimeout">
 <summary>
 Requests that the helper enforces asynchronous time outs by canceling the SQLCommand when the timeout period has expired.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AsyncSupport.CancellableSqlCommandHelper.BeginExecuteReaderArgs.RemoveRequestFromAsyncRequestManagerOnEnd">
 <summary>
 Allows the caller to override the default behavior of removing the request from the global AsyncRequestManager when the request ends. 
 When set to false, the caller will need to manage this removal manually. 
 </summary>
 <remarks>Most callers will not need to change this value. Only change this if you have a long running request which needs to be 
 cancelled independently of the SQLCommand.</remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AsyncSupport.CancellableSqlCommandHelper.BeginExecuteReader(Blackbaud.AppFx.Server.AsyncSupport.CancellableSqlCommandHelper.BeginExecuteReaderArgs)">
 <summary>
 Begins an asyncrhonous "BeginExecuteReader" operation on the SQLCommand for this instance. This operation may be canceled via a CancelAsyncOperation
 web request. If requested, it will also timeout correctly according to the CommandTimeout property on the SQLCommand. 
 
 The data, or ultimate request status (canceled or timed out) will be returned to the caller from EndExecuteReader.
 </summary>
 <param name="args">An arguments variable which contains all of the options necessary to make an asynchronous database call.</param>
 <returns>An IAsyncResult representing the operation.</returns>
 <remarks>When your AsyncCallback delegate has been called or after the returned IAsyncResult signals completion, you must call EndExecuteReader on this instance to complete the operation and retrieve any results.</remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AsyncSupport.CancellableSqlCommandHelper.EndExecuteReader(System.IAsyncResult)">
 <summary>
 End an asynchronous data reader operation on the SqlCommand for this instance. 
 
 The result will indicate if the operation was canceled, timed out, etc.. Otherwise, it may be used as an IDataReader exactly like a 
 normal SqlDataReader. 
 </summary>
 <param name="asyncResult">The return value from the previous call to BeginExecuteReader on this instance.</param>
 <returns>A CancellableDataReader which will indicate if the SqlCommand was canceled, timed out, etc. Otherwise, you may use this object as if it were an ordinary IDataReader from SqlClient.</returns>
 <remarks>Every call to BeginExecuteReader for this class should be eventually followed by a call to this function.</remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AsyncSupport.CancellableSqlCommandHelper.CancelForValidationFailure">
 <summary>
 Used the cancel the operation as a result of a validation polling callback (as opposed to a user-initiated cancellation)
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AsyncSupport.CancellableSqlCommandHelper.CancelForTimeout">
 <summary>
 Used to cancel the operation as the result of a timeout (as opposed to a user-initiated cancellation)
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AsyncSupport.CancellableSqlCommandHelper.CancelAsync(System.IAsyncResult)">
 <summary>
 Used by the host request to initiate cancellation in response to a user request. 
 </summary>
 <param name="asyncResult">The IAsyncResult obtained from calling BeginExecuteReader.</param>
 <remarks></remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.AsyncSupport.SynchronousCancellableDataReaderHelper">
 <summary>
 This class provides functionality to allow a <see cref="T:System.Data.SqlClient.SqlCommand"/> to be executed synchronously while still allowing the command to 
 be cancelled by a CancelAsyncOperation web request. 
 </summary>
 <remarks>This class replaces the now-obsolete <see cref="T:Blackbaud.AppFx.Server.CancellableSqlDataReader"/> class.</remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AsyncSupport.SynchronousCancellableDataReaderHelper.ExecuteReader(System.String,Blackbaud.AppFx.Server.ServiceRequest,System.Data.SqlClient.SqlCommand,System.String)">
 <summary>
 Synchronously executes a <see cref="T:System.Data.SqlClient.SqlCommand"/> and returns the results as an <see cref="T:System.Data.IDataReader"/>. This method blocks until the data is returned, the command times out, or the command is canceled by a CancelAsyncOperation web request. In the case of a timeout or cancellation, an appropriate exception is thrown to indicate this to the caller.
 </summary>
 <param name="processName">Required. The name of the process using this helper. For example, "DataListLoad". Used when logging errors.</param>
 <param name="request">Optional. The <see cref="T:Blackbaud.AppFx.Server.ServiceRequest"/> for the web service request command is in response to. Used when logging errors.</param>
 <param name="cmd">Required. The command to run synchronously. The CommandTimeout property is respected. Do not do anything with this parameter after this call. Do not hold on to it, do not dispose it, do not call any methods on it, etc.</param>
 <param name="cancelID">Optional. The unique cancelID which will be used to register for a possible user cancellation via the CancelAsyncOperation web request. If this ID is null or empty, user cancellation will not be possible.</param>
 <returns>An IDataReader which can be used to process the results of the command. See exceptions for a list of expected exceptions that may be thrown instead.</returns>
 <exception cref="T:System.TimeoutException">Thrown to indicate that the SqlCommand timed out and was cancelled.</exception>
 <exception cref="T:System.Threading.Tasks.TaskCanceledException">Thrown to indicate that the SqlCommand was cancelled due to a cancellation request from the user.</exception>
</member>
<member name="M:Blackbaud.AppFx.Server.AsyncSupport.SynchronousCancellableDataReaderHelper.ExecuteReader(System.String,Blackbaud.AppFx.Server.ServiceRequest,System.Data.SqlClient.SqlCommand,System.Data.CommandBehavior,System.String)">
 <summary>
 Synchronously executes a <see cref="T:System.Data.SqlClient.SqlCommand"/> and returns the results as an <see cref="T:System.Data.IDataReader"/>. This method blocks until the data is returned, the command times out, or the command is canceled by a CancelAsyncOperation web request. In the case of a timeout or cancellation, an appropriate exception is thrown to indicate this to the caller.
 </summary>
 <param name="processName">Required. The name of the process using this helper. For example, "DataListLoad". Used when logging errors.</param>
 <param name="request">Optional. The <see cref="T:Blackbaud.AppFx.Server.ServiceRequest"/> for the web service request command is in response to. Used when logging errors.</param>
 <param name="cmd">Required. The command to run synchronously. The CommandTimeout property is respected. Do not do anything with this parameter after this call. Do not hold on to it, do not dispose it, do not call any methods on it, etc.</param>
 <param name="commandBehavior">Required. Indicates options for statement execution and data retrieval.</param>
 <param name="cancelID">Optional. The unique cancelID which will be used to register for a possible user cancellation via the CancelAsyncOperation web request. If this ID is null or empty, user cancellation will not be possible.</param>
 <returns>An IDataReader which can be used to process the results of the command. See exceptions for a list of expected exceptions that may be thrown instead.</returns>
 <exception cref="T:System.TimeoutException">Thrown to indicate that the SqlCommand timed out and was cancelled.</exception>
 <exception cref="T:System.Threading.Tasks.TaskCanceledException">Thrown to indicate that the SqlCommand was cancelled due to a cancellation request from the user.</exception>
</member>
<member name="M:Blackbaud.AppFx.Server.AsyncSupport.SynchronousCancellableDataReaderHelper.ExecuteReader(System.String,Blackbaud.AppFx.Server.ServiceRequest,System.Data.SqlClient.SqlCommand,System.Data.CommandBehavior,System.String,System.Nullable{System.Int32},System.Func{System.Boolean})">
 <summary>
 Synchronously executes a <see cref="T:System.Data.SqlClient.SqlCommand"/> and returns the results as an <see cref="T:System.Data.IDataReader"/>. This method blocks until the data is returned, the command times out, or the command is canceled by a CancelAsyncOperation web request. In the case of a timeout or cancellation, an appropriate exception is thrown to indicate this to the caller.
 </summary>
 <param name="processName">Required. The name of the process using this helper. For example, "DataListLoad". Used when logging errors.</param>
 <param name="request">Optional. The <see cref="T:Blackbaud.AppFx.Server.ServiceRequest"/> for the web service request command is in response to. Used when logging errors.</param>
 <param name="cmd">Required. The command to run synchronously. The CommandTimeout property is respected. Do not do anything with this parameter after this call. Do not hold on to it, do not dispose it, do not call any methods on it, etc.</param>
 <param name="commandBehavior">Required. Indicates options for statement execution and data retrieval.</param>
 <param name="cancelID">Optional. The unique cancelID which will be used to register for a possible user cancellation via the CancelAsyncOperation web request. If this ID is null or empty, user cancellation will not be possible.</param>
 <param name="validationPollingInterval">Optional. When present with the validationPollingFunction parameter, indicates the interval to wait between testing the command with the validation function.</param>
 <param name="validationPollingFunction">Optional. When present with the validationPollingInterval parameter, indicates a function that provides validation for the larger request. When this function returns false, the SqlCommand will be automatically cancelled.</param>
 <returns>An IDataReader which can be used to process the results of the command. See exceptions for a list of expected exceptions that may be thrown instead.</returns>
 <exception cref="T:System.TimeoutException">Thrown to indicate that the SqlCommand timed out and was cancelled.</exception>
 <exception cref="T:System.Threading.Tasks.TaskCanceledException">Thrown to indicate that the SqlCommand was cancelled due to a cancellation request from the user.</exception>
 <exception cref="T:Blackbaud.AppFx.Server.AsyncSupport.AsynchronousCommandPolledValidationException">Thrown to indicate that the SqlCommand was cancelled because it failed its polled validation test.</exception>
</member>
<member name="M:Blackbaud.AppFx.Server.BatchCommon.ApplyBatchFormMetaDataSettingsToTemplate(Blackbaud.AppFx.XmlTypes.FormMetaData,Blackbaud.AppFx.XmlTypes.FormMetaData)">
 <summary>
 Overrides FormMetaData from a Batch Template with certain settings from the FormMetaData of a Batch.
 </summary>
 <remarks>
 Overrides DefaultValueText, Hidden, and Required properties for all fields in the Batch Template that
 also exist in the Batch.
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.BatchErrorHelper.BlankOutInvalidFields(Blackbaud.AppFx.XmlTypes.DataForms.DataFormItem,System.Collections.Generic.List{Blackbaud.AppFx.Server.BatchRowException})">
 <summary>
 Based on the errors, makes all the offending values in the dfi blank. This is intended for
 batch saves coming from import.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.BatchErrorHelper.ResultRowToException(Blackbaud.AppFx.SpWrap.USP_BATCH_SYSTEMMESSAGES.ResultRow,Blackbaud.AppFx.XmlTypes.BatchTypeSpec,System.Resources.ResourceManager)">
 <summary>
 Transforms a result row from USP_BATCH_SYSTEMMESSAGES into a BatchRowException object.
 </summary>
 <param name="row">The result row.</param>
 <param name="batchType">Batch type for finding the localization mapping.</param>
 <param name="resManager">Resource manager for localization.</param>
 <returns>A localized BatchRowException with the result row data.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.BatchErrorHelper.SetExceptionMessageFromRowErrors(Blackbaud.AppFx.Server.BatchDataRow)">
 <summary>
 Sets the ExceptionMessage and ExceptionMessageTypeCode based on the errors in the RowErrors list.
 This sub serves two purposes. Primarily, it provides backwards compatibility for clickonce.
 It also helps with webshell in that the javascript looks for the existence of an error message 
 (but does not use it directly).
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.BatchInsertErrorRequest">
 <summary>
 Associates an error message with a batch row.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.BatchInsertErrorRequest.ServiceExceptionInfo">
 <summary>
 Optional, found within a service exception.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.BatchInsertErrorRequest.TableName">
 <summary>
 The name of the batch table. Do not include dbo.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.BatchInsertErrorRequest.TypeOverride">
 <summary>
 Optional. Use this if you can't provide service exception info or you want to override it.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.BatchInsertErrorRequest.InvalidFieldIDOverride">
 <summary>
 Optional. Use this if you can't provide service exception info or you want to override it.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.BatchInsertErrorRequest.InvalidFieldValue">
 <summary>
 Optional.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.BatchInsertErrorReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.BatchInsertErrorRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.BatchInsertErrorProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.BatchInsertErrorRequest" />
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.BusinessProcessEnqueuingHelper.EnqueuingEnabled(Blackbaud.AppFx.Server.BusinessProcessLaunchRequest,System.Data.SqlClient.SqlConnection)">
 <summary>
 Checks to see if enqueuing via hangfire is enabled
 </summary>
 <param name="request">The business process launch request.</param>
 <param name="conn">An open connection to the database.</param>
 <returns>True if everything is setup to enqueue, else False.</returns>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.BusinessProcessEnqueuingHelper.BusinessProcessAllowsEnqueuing(System.Data.SqlClient.SqlConnection,Blackbaud.AppFx.Server.BusinessProcessLaunchRequest)">
 <summary>
 Checks the business process catalog table and returns whether or not this business process allows enqueuing
 </summary>
 <param name="conn">An open connection to the database.</param>
 <param name="request">The business process launch request.</param>
 <returns>True if business process allows enqueuing. Default is false.</returns>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.BusinessProcessEnqueuingHelper.EnterpriseInstalled(System.Data.SqlClient.SqlConnection,Blackbaud.AppFx.Server.BusinessProcessLaunchRequest)">
 <summary>
 Checks the installed products and returns true if Enterprise is turned on. 
 </summary>
 <param name="conn">Connection to the database.</param>
 <param name="request">The business process launch request.</param>
 <returns>True if Enterprise is installed else False.</returns>
 <remarks>This</remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.BusinessProcessEnqueuingHelper.CheckForSimultaneousEnqueuing(System.Data.SqlClient.SqlConnection,System.Guid,System.Guid,System.Int32)">
 <summary>
 Throws an error if a business process of the same instance is already enqueued or currently running
 </summary>
 <param name="conn">Open connection to the database to check</param>
 <param name="businessProcessId">The business process catalog ID</param>
 <param name="parameterSetId">The parameter set ID that specifies which instance to check</param>
 <param name="timeout">SQL command timeout</param>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.BusinessProcessEnqueuingHelper.CredentialsSet(System.Data.SqlClient.SqlConnection,Blackbaud.AppFx.Server.BusinessProcessLaunchRequest)">
 <summary>
 Checks to see if the enqueue credentials have been set
 </summary>
 <param name="conn">An open connection to the database.</param>
 <param name="request">The business process launch request.</param>
 <returns>True if credentials exist.</returns>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.BusinessProcessEnqueuingHelper.TraceInfoMsg(System.String,Blackbaud.AppFx.Server.BusinessProcessLaunchRequest)">
 <summary>
 Logs information about possible errors that we ignore but may want to know about for troubleshooting
 </summary>
 <param name="msg">The message to log</param>
 <param name="request">The business process launch request.</param>
 <remarks></remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.FeatureTipsGetTipSeenRequest">
 <summary>
 Returns whether or not the current application user has seen the specified feature tip.  Optionally can set that the user has now seen the tip.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.FeatureTipsGetTipSeenReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.FeatureTipsGetTipSeenRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.FeatureTipsGetTipSeenProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.FeatureTipsGetTipSeenRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.FeatureTipsSetTipSeenRequest">
 <summary>
 Sets whether or not the current application user has seen the specified feature tip
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.FeatureTipsSetTipSeenReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.FeatureTipsSetTipSeenRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.FeatureTipsSetTipSeenProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.FeatureTipsSetTipSeenRequest" />
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ListBuilderInstance.QueryViewID">
 <summary>
 ID of the query view that represents the underlying data for the list.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ListBuilderInstance.Columns">
 <summary>
 Collection of <see cref="T:Blackbaud.AppFx.Server.ListBuilderColumn"/> objects representing the columns the user saved in the list state.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.ListBuilderInstance.SortFields">
 <summary>
 Collection of <see cref="T:Blackbaud.AppFx.Server.ListBuilderSortField"/> objects representing the fields by which the user has sorted the list.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.ListBuilderInstance.FilterFields">
 <summary>
 Collection of <see cref="T:Blackbaud.AppFx.Server.ListBuilderFilterField"/> objects representing the fields by which the user has filtered the list.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.ListBuilderInstance.Parameters">
 <summary>
 A <see cref="T:Blackbaud.AppFx.XmlTypes.DataForms.DataFormItem"/> object representing the state of the list filter section.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.ListBuilderColumn.Name">
 <summary>
 Name of the column in the list.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ListBuilderColumn.ViewPath">
 <summary>
 The query view path of the column in the list.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ListBuilderFilterField.Name">
 <summary>
 Name of the column in the list by which to filter.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ListBuilderFilterField.FilterOperator">
 <summary>
 Operator which will be applied to the field when the list results are filtered.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ListBuilderFilterField.DateFilterTypes">
 <summary>
 Determines how to filter the date field.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ListBuilderFilterField.FuzzyDateFilterTypes">
 <summary>
 Determines how to filter the fuzzy date field.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ListBuilderFilterField.MonthDayFilterTypes">
 <summary>
 Determines how to filter the month/day field.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ListBuilderFilterField.Values">
 <summary>
 The values by which to filter.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ListBuilderFilterField.TranslatedValues">
 <summary>
 The translations for the filter values.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ListBuilderFilterField.ViewPath">
 <summary>
 The query view path name.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ListBuilderSortField.FieldName">
 <summary>
 Name of the column in the list by which to sort.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ListBuilderSortField.SortOrder">
 <summary>
 The direction by which to sort.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.ProcessStatsGetRequest">
 <summary>
 Returns information about the web server process hosting this web application.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ProcessStatsGetReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.ProcessStatsGetRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ProcessStatsGetProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.ProcessStatsGetRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SelfServicePasswordResetInfoGetRequest">
 <summary>
 Returns the self-service password reset fields from the INSTALLATIONINFO table.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SelfServicePasswordResetInfoGetReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.SelfServicePasswordResetInfoGetRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SelfServicePasswordResetInfoGetProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.SelfServicePasswordResetInfoGetRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserBatchTemplateSettingsGetRequest">
 <summary>
 Returns the user settings for a batch template.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserBatchTemplateSettingsGetReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.UserBatchTemplateSettingsGetRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserBatchTemplateSettingsGetProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.UserBatchTemplateSettingsGetRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserBatchTemplateSettingsUpdateRequest">
 <summary>
 Updates the user settings for a batch template.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserBatchTemplateSettingsUpdateReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.UserBatchTemplateSettingsUpdateRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserBatchTemplateSettingsUpdateProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.UserBatchTemplateSettingsUpdateRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserPageSettingsGetTabSettingsRequest">
 <summary>
 Returns the user settings for the tabs on a page.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserPageSettingsGetTabSettingsReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.UserPageSettingsGetTabSettingsRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserPageSettingsGetTabSettingsProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.UserPageSettingsGetTabSettingsRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserPageSettingsUpdateTabSettingsRequest">
 <summary>
 Updates the user settings for the tabs on a page.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserPageSettingsUpdateTabSettingsReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.UserPageSettingsUpdateTabSettingsRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserPageSettingsUpdateTabSettingsProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.UserPageSettingsUpdateTabSettingsRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserSearchListPersistentFieldsGetRequest">
 <summary>
 Returns the persistent fields for a search list.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserSearchListPersistentFieldsGetReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.UserSearchListPersistentFieldsGetRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserSearchListPersistentFieldsGetProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.UserSearchListPersistentFieldsGetRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserSearchListSettingsUpdateRequest">
 <summary>
 Updates the user settings for a search list.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserSearchListSettingsUpdateReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.UserSearchListSettingsUpdateRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserSearchListSettingsUpdateProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.UserSearchListSettingsUpdateRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserSearchListSettingsGetRequest">
 <summary>
 Returns the user settings for a search list task.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserSearchListSettingsGetReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.UserSearchListSettingsGetRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserSearchListSettingsGetProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.UserSearchListSettingsGetRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserListBuilderSettingsGetRequest">
 <summary>
 Gets the user settings for a list builder.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserListBuilderSettingsGetReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.UserListBuilderSettingsGetRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserListBuilderSettingsGetProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.UserListBuilderSettingsGetRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserListBuilderSettingsUpdateRequest">
 <summary>
 Updates the user settings for a list builder.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserListBuilderSettingsUpdateReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.UserListBuilderSettingsUpdateRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserListBuilderSettingsUpdateProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.UserListBuilderSettingsUpdateRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserPasswordResetRequest">
 <summary>
 Resets a user's password given a valid token.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserPasswordResetReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.UserPasswordResetRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserPasswordResetProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.UserPasswordResetRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserPasswordResetLinkSendRequest">
 <summary>
 Checks whether a user exists with the specified email address and sends that user an email containing the user's login name and a link where the user's password can be reset.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.UserPasswordResetLinkSendRequest.EmailSubject">
 <summary>
 Optionally specify the email subject.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.UserPasswordResetLinkSendRequest.EmailBody">
 <summary>
 Optionally specify the email body.
 </summary>
 <remarks>The email body may specify the following merge fields: {{ResetUrlValidHours}}, {{ResetUrl}}</remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.UserPasswordResetLinkSendReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.UserPasswordResetLinkSendRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserPasswordResetLinkSendProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.UserPasswordResetLinkSendRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserPasswordResetTokenValidateRequest">
 <summary>
 Returns a flag indicating whether the provided password reset token is valid.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserPasswordResetTokenValidateReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.UserPasswordResetTokenValidateRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserPasswordResetTokenValidateProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.UserPasswordResetTokenValidateRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.BatchDismissExceptionsRequest">
 <summary>
 Dismisses one or all exceptions for a batch which cannot be resolved automatically.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.BatchDismissExceptionsRequest.Exceptions">
 <summary>
 A list of exceptions to dismiss, or Nothing to dismiss all import exceptions in the given batch.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.BatchDismissExceptionsReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.BatchDismissExceptionsRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.BatchDismissExceptionsProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.BatchDismissExceptionsRequest" />
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.PaymentProcessor.IsCardNumberValid(System.String)">
 <summary>
 Returns if the card number is valid.  It verifies the card is the minimum length and passes
 the Luhn algorithm check.  The Luhn algorithm, also known as the "modulus 10" or "mod 10" algorithm, is a simple checksum 
 formula used to validate a variety of identification numbers, such as credit card numbers and 
 will detect any single-digit error, as well as almost all transpositions of adjacent digits.  
 </summary>
 <param name="cardNumber">The number of the card to be validated</param>
 <returns>True if the card is valid, otherwise False.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.PaymentProcessor.ValidateCardNumberFormat(System.String)">
 <summary>
 Returns if the card number is valid.  It verifies the card is the minimum length and passes
 the Luhn algorithm check.  The Luhn algorithm, also known as the "modulus 10" or "mod 10" algorithm, is a simple checksum 
 formula used to validate a variety of identification numbers, such as credit card numbers and 
 will detect any single-digit error, as well as almost all transpositions of adjacent digits.  
 </summary>
 <param name="cardNumber">The number of the card to be validated</param>
 <returns>True if the card is valid, otherwise False.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.CreditCardFieldProcessor.DeleteSavedToken(System.Guid)">
 <summary>
 Remove the given token from the collection of cached tokens.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQueryAppSettings">
 <summary>
 Contains static AppSettingValue fields related to the AdhocQueryProcessRequest processing.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryAppSettings.AdHocQueryMaxRecordsDefault">
 <summary>
 The default number of records to return via the AdHocQueryProcessRequest when the request MaxRecords attribute is 0 or not supplied.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryAppSettings.AdHocQueryMaxRecordsMaximum">
 <summary>
 The maximum number of records to allow a client to request via the AdHocQueryProcessRequest MaxRecords attribute.  If the client requests more than this number then this number will be returned.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryAppSettings.AdHocQueryPagedMaxRecordsDefault">
 <summary>
 The default number of records to return via the AdHocQueryProcessRequest when the request MaxRecords attribute is 0 or not supplied.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryAppSettings.AdHocQueryPagedMaxRecordsMaximum">
 <summary>
 The maximum number of records to allow a client to request via the AdHocQueryProcessRequest MaxRecords attribute.  If the client requests more than this number then this number will be returned.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryAppSettings.AdHocQueryTimeOutSecondsDefault">
 <summary>
 The default seconds to timeout if the ClientAppInfo.TimeOutSeconds is 0.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryAppSettings.AdHocQueryTimeOutSecondsMaximum">
 <summary>
 The maximum seconds to allow the ClientAppInfo.TimeOutSeconds to be.  If the request indicates a timeout larger than this value then this value will be used instead.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryAppSettings.AdHocQueryCancelCheckInterval">
 <summary>
 The polling interval in seconds used for monitoring if the client has cancled the request.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryAppSettings.AdHocQueryDisableCancel">
 <summary>
 Disables polling to detect that the client has attempted to cancel the request.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQueryBuildReportDefinitionRequest">
 <summary>
 Creates a report definition RDL based on ad-hoc query metadata and returns the xml as a reply.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryBuildReportDefinitionRequest.SelectFields">
 <summary>
 Collection of <see cref="T:Blackbaud.AppFx.Server.AdHocQuerySelectField"/> objects which the user defined in the ad-hoc query.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryBuildReportDefinitionRequest.FilterFields">
 <summary>
 Collection of <see cref="T:Blackbaud.AppFx.Server.AdHocQueryFilterField"/> objects which the user defined in the ad-hoc query.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryBuildReportDefinitionRequest.SortFields">
 <summary>
 Collection of <see cref="T:Blackbaud.AppFx.Server.AdHocQuerySortField"/> objects which the user defined in the ad-hoc query.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryBuildReportDefinitionRequest.GroupFilterFields">
 <summary>
 Collection of <see cref="T:Blackbaud.AppFx.Server.AdHocQueryGroupFilterField"/> objects which the user defined in the ad-hoc query.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryBuildReportDefinitionRequest.SuppressDuplicateRows">
 <summary>
 Indicates whether the user wants duplicate rows in the query suppressed.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQueryBuildReportDefinitionReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.AdHocQueryBuildReportDefinitionRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQueryBuildReportDefinitionProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.AdHocQueryBuildReportDefinitionRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQueryGetDefinitionForDataListRequest">
 <summary>
 Returns the query definition and a list of query fields used to create the data list for the given data list ID
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQueryGetDefinitionForDataListReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.AdHocQueryGetDefinitionForDataListRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQueryGetDefinitionForDataListProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.AdHocQueryGetDefinitionForDataListRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQueryGetDefinitionForReportRequest">
 <summary>
 Returns the query definition and a list of query fields used to create the report for the given data list ID.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQueryGetDefinitionForReportReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.AdHocQueryGetDefinitionForReportRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQueryGetDefinitionForReportProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.AdHocQueryGetDefinitionForReportRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQueryGetDefinitionForSmartQueryRequest">
 <summary>
 Returns the query definition and a list of query fields used to create the smart query for the given smart query ID
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQueryGetDefinitionForSmartQueryReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.AdHocQueryGetDefinitionForSmartQueryRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQueryGetDefinitionForSmartQueryProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.AdHocQueryGetDefinitionForSmartQueryRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQueryGetSettingsRequest">
 <summary>
 Returns the default settings for a query
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQueryGetSettingsReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.AdHocQueryGetSettingsRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQueryGetSettingsProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.AdHocQueryGetSettingsRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQueryProcessGetDeferredResultRequest">
 <summary>
 Gets the response from a recently executed ad-hoc query process
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQueryProcessGetDeferredResultReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.AdHocQueryProcessGetDeferredResultRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQueryProcessGetDeferredResultProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.AdHocQueryProcessGetDeferredResultRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQuerySaveDataListRequest">
 <summary>
 Creates or updates a data list based on ad-hoc query metadata and adds it to the catalog so it can be consumed by other areas of the application.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuerySaveDataListRequest.SelectFields">
 <summary>
 Collection of <see cref="T:Blackbaud.AppFx.Server.AdHocQuerySelectField"/> objects which the user defined in the ad-hoc query.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuerySaveDataListRequest.FilterFields">
 <summary>
 Collection of <see cref="T:Blackbaud.AppFx.Server.AdHocQueryFilterField"/> objects which the user defined in the ad-hoc query.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuerySaveDataListRequest.SortFields">
 <summary>
 Collection of <see cref="T:Blackbaud.AppFx.Server.AdHocQuerySortField"/> objects which the user defined in the ad-hoc query.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuerySaveDataListRequest.GroupFilterFields">
 <summary>
 Collection of <see cref="T:Blackbaud.AppFx.Server.AdHocQueryGroupFilterField"/> objects which the user defined in the ad-hoc query.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuerySaveDataListRequest.SuppressDuplicateRows">
 <summary>
 Indicates whether the user wants duplicate rows in the query suppressed.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQuerySaveDataListReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.AdHocQuerySaveDataListRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQuerySaveDataListProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.AdHocQuerySaveDataListRequest" />
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQueryHelper.GetAdHocQuery(Blackbaud.AppFx.Server.RequestContext,System.Guid)">
 <summary>
 Loads and returns a ad-hoc query from the database.
 </summary>
 <param name="context">The request context from which this method is being called.</param>
 <param name="adHocQueryID">ID of the ad-hoc query in the database.</param>
 <returns>Ad-hoc query.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQueryHelper.GetAdHocQuery(Blackbaud.AppFx.Server.RequestContext,System.Guid,System.Boolean)">
 <summary>
 Loads and returns a ad-hoc query from the database.
 </summary>
 <param name="context">The request context from which this method is being called.</param>
 <param name="adHocQueryID">ID of the ad-hoc query in the database.</param>
 <returns>Ad-hoc query.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQueryHelper.GetAdHocQuery(Blackbaud.AppFx.Server.RequestContext,System.Guid,System.Boolean,System.Boolean)">
 <summary>
 Loads and returns a ad-hoc query from the database.
 </summary>
 <param name="context">The request context from which this method is being called.</param>
 <param name="adHocQueryID">ID of the ad-hoc query in the database.</param>
 <returns>Ad-hoc query.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQueryHelper.GetAdHocQuery(System.Data.SqlClient.SqlConnection,Blackbaud.AppFx.Server.RequestContext,System.Guid,System.Guid,System.Boolean,System.Boolean)">
 <summary>
 Loads and returns a ad-hoc query from the database.
 </summary>
 <param name="conn">Open connection to the database.</param>
 <param name="context">Context of the current request.</param>
 <param name="appUserID">Database ID of the current user.</param>
 <param name="adHocQueryID">ID of the ad-hoc query in the database.</param>
 <returns>Ad-hoc query.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQueryHelper.Validate(Blackbaud.AppFx.Server.RequestContext,Blackbaud.AppFx.Server.AdHocQuery,System.Boolean)">
 <summary>
 Validates an ad-hoc query to determine whether the ad-hoc query can be correctly stored in the database.
 </summary>
 <param name="context">The request context from which this method is being called.</param>
 <param name="validateType">Boolean flag to indicate whether the record type of the ad-hoc query should be validated.</param>
 <remarks>
 <seealso cref="T:Blackbaud.AppFx.Server.QueryViewField"/>
 <seealso cref="T:Blackbaud.AppFx.Server.QueryViewTreeNode"/>
 <seealso cref="T:Blackbaud.AppFx.Server.AdHocQuerySelectField"/>
 <seealso cref="T:Blackbaud.AppFx.Server.AdHocQueryFilterField"/>
 <seealso cref="T:Blackbaud.AppFx.Server.AdHocQueryGroupFilterField"/>
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQueryHelper.ValidateParentheses(Blackbaud.AppFx.Server.RequestContext,Blackbaud.AppFx.Server.AdHocQuery)">
 <summary>
 Validates all parentheses for the ad-hoc query.
 </summary>
 <remarks>
 <seealso cref="T:Blackbaud.AppFx.Server.QueryViewField"/>
 <seealso cref="T:Blackbaud.AppFx.Server.QueryViewTreeNode"/>
 <seealso cref="T:Blackbaud.AppFx.Server.AdHocQuerySelectField"/>
 <seealso cref="T:Blackbaud.AppFx.Server.AdHocQueryFilterField"/>
 <seealso cref="T:Blackbaud.AppFx.Server.AdHocQueryGroupFilterField"/>
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQueryHelper.ValidateFields(Blackbaud.AppFx.Server.RequestContext,Blackbaud.AppFx.Server.AdHocQuery)">
 <summary>
 Validates all fields for the ad-hoc query.
 </summary>
 <remarks>
 <seealso cref="T:Blackbaud.AppFx.Server.QueryViewField"/>
 <seealso cref="T:Blackbaud.AppFx.Server.QueryViewTreeNode"/>
 <seealso cref="T:Blackbaud.AppFx.Server.AdHocQuerySelectField"/>
 <seealso cref="T:Blackbaud.AppFx.Server.AdHocQueryFilterField"/>
 <seealso cref="T:Blackbaud.AppFx.Server.AdHocQueryGroupFilterField"/>
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQueryHelper.LoadQueryFields(System.Data.SqlClient.SqlConnection,Blackbaud.AppFx.Server.AdHocQuery,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Loads all query field objects from the database associated with the ad-hoc query and sets the <see cref="T:Blackbaud.AppFx.Server.QueryViewField"/> and 
 <see cref="T:Blackbaud.AppFx.Server.QueryViewTreeNode"/> reference of each corresponding query object.
 </summary>
 <param name="conn">An open connection to the database.</param>
 <remarks>
 <seealso cref="T:Blackbaud.AppFx.Server.QueryViewField"/>
 <seealso cref="T:Blackbaud.AppFx.Server.QueryViewTreeNode"/>
 <seealso cref="T:Blackbaud.AppFx.Server.AdHocQuerySelectField"/>
 <seealso cref="T:Blackbaud.AppFx.Server.AdHocQueryFilterField"/>
 <seealso cref="T:Blackbaud.AppFx.Server.AdHocQueryGroupFilterField"/>
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQueryHelper.LoadQueryFields(System.Data.SqlClient.SqlConnection,Blackbaud.AppFx.Server.AdHocQuery,System.Boolean,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Loads all query field objects from the database associated with the ad-hoc query and sets the <see cref="T:Blackbaud.AppFx.Server.QueryViewField"/> and 
 <see cref="T:Blackbaud.AppFx.Server.QueryViewTreeNode"/> reference of each corresponding query object.
 </summary>
 <param name="conn">An open connection to the database.</param>
 <param name="removeInvalidFields">Flag indicating whether to remove ad-hoc query fields that do not have corresponding query view fields.</param>
 <remarks>
 <seealso cref="T:Blackbaud.AppFx.Server.QueryViewField"/>
 <seealso cref="T:Blackbaud.AppFx.Server.QueryViewTreeNode"/>
 <seealso cref="T:Blackbaud.AppFx.Server.AdHocQuerySelectField"/>
 <seealso cref="T:Blackbaud.AppFx.Server.AdHocQueryFilterField"/>
 <seealso cref="T:Blackbaud.AppFx.Server.AdHocQueryGroupFilterField"/>
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQueryHelper.LoadQueryFields(System.Data.SqlClient.SqlConnection,Blackbaud.AppFx.Server.AdHocQuery,System.Boolean,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Loads all query field objects from the database associated with the ad-hoc query and sets the <see cref="T:Blackbaud.AppFx.Server.QueryViewField"/> and 
 <see cref="T:Blackbaud.AppFx.Server.QueryViewTreeNode"/> reference of each corresponding query object.
 </summary>
 <param name="conn">An open connection to the database.</param>
 <param name="removeInvalidFields">Flag indicating whether to remove ad-hoc query fields that do not have corresponding query view fields.</param>
 <param name="throwOnInvalidFields">Flag indicating whether to throw an exception if missing query view fields are encountered</param>
 <remarks>
 <seealso cref="T:Blackbaud.AppFx.Server.QueryViewField"/>
 <seealso cref="T:Blackbaud.AppFx.Server.QueryViewTreeNode"/>
 <seealso cref="T:Blackbaud.AppFx.Server.AdHocQuerySelectField"/>
 <seealso cref="T:Blackbaud.AppFx.Server.AdHocQueryFilterField"/>
 <seealso cref="T:Blackbaud.AppFx.Server.AdHocQueryGroupFilterField"/>
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQueryHelper.GetViewNode(System.Data.SqlClient.SqlConnection,System.Collections.Generic.Dictionary{System.String,Blackbaud.AppFx.Server.QueryViewTreeNode},System.String,System.String,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Loads and returns a tree node using the information of its parent node.
 </summary>
 <param name="conn">An open connection to the database.</param>
 <param name="viewNodes">Collection of view nodes to which the loaded node will be added.</param>
 <param name="parentPath">The path of the parent node (usually comprised of the view or table-valued function name).</param>
 <returns>The loaded tree node.</returns>
 <remarks>
 <seealso cref="T:Blackbaud.AppFx.Server.QueryViewTreeHelper"/>
 <seealso cref="T:Blackbaud.AppFx.Server.QueryViewTreeNode"/>
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQueryHelper.GetViewNode(System.Data.SqlClient.SqlConnection,System.Collections.Generic.Dictionary{System.String,Blackbaud.AppFx.Server.QueryViewTreeNode},System.String,System.String,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Loads and adds a <see cref="T:Blackbaud.AppFx.Server.QueryViewTreeNode" /> for a given path and display path to a collection of the same.
 </summary>
 <param name="conn">An open connection to the database.</param>
 <param name="viewNodes">A collection of <see cref="T:Blackbaud.AppFx.Server.QueryViewTreeNode" /> to which the loaded node will be added.</param>
 <param name="parentPath">The path of the parent node (usually comprised of the view or table-valued function name).</param>
 <param name="displayPath">The display path of the parent node.</param>
 <param name="context">The current request context.</param>
 <param name="loadForExportDefinitions">Indicates that the call is being made from export definition code, and thus that the collection should be keyed differently.</param>
 <returns>The loaded tree node.  The fields will include all selection fields.</returns>
 <remarks>
 The collection will be keyed by parentPath and displayPath, delimited by a vertical bar, if loadForExportDefinitions is False.  If it is True, another bar and the value 
 Boolean.FalseString will be appended to the key.
 <seealso cref="T:Blackbaud.AppFx.Server.QueryViewTreeHelper"/>
 <seealso cref="T:Blackbaud.AppFx.Server.QueryViewTreeNode"/>
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQueryHelper.GetViewNode(System.Data.SqlClient.SqlConnection,System.Collections.Generic.Dictionary{System.String,Blackbaud.AppFx.Server.QueryViewTreeNode},System.String,System.String,Blackbaud.AppFx.Server.RequestContext,System.Boolean,System.Boolean)">
 <summary>
 Loads and add a <see cref="T:Blackbaud.AppFx.Server.QueryViewTreeNode" /> for a given path and display path to a collection of the same.
 </summary>
 <param name="conn">An open connection to the database.</param>
 <param name="viewNodes">A collection of <see cref="T:Blackbaud.AppFx.Server.QueryViewTreeNode" /> to which the loaded node will be added.</param>
 <param name="parentPath">The path of the parent node (usually comprised of the view or table-valued function name).</param>
 <param name="displayPath">The display path of the parent node.</param>
 <param name="context">The current request context.</param>
 <param name="loadForExportDefinitions">Indicates that the call is being made from export definition code, and thus that the collection should be keyed differently.</param>
 <param name="skipIDSets">Choose to not include selection fields in the list of fields.</param>
 <returns>The loaded tree node.</returns>
 <remarks>
 The collection will be keyed by parentPath and displayPath, delimited by a vertical bar, if loadForExportDefinitions is False.  If it is True, another bar and the value 
 skipIDSets.ToString() will be appended to the key.
 <seealso cref="T:Blackbaud.AppFx.Server.QueryViewTreeHelper"/>
 <seealso cref="T:Blackbaud.AppFx.Server.QueryViewTreeNode"/>
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQueryHelper.FindIDSetQueryField(System.Guid,System.Collections.Generic.List{Blackbaud.AppFx.Server.QueryViewField})">
 <summary>
 Searches the ad-hoc query's collection of fields for a given ID set.
 </summary>
 <param name="setID">ID of the ID set for which to search.</param>
 <param name="fieldList">List of query fields.</param>
 <returns>ID set</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQueryHelper.LoadFilterTranslations(Blackbaud.AppFx.Server.RequestContext,Blackbaud.AppFx.Server.AdHocQuery)">
 <summary>
 Loads translations for any filter fields which require a translation.
 </summary>
 <param name="context">The request context from which this method is being called.</param>
 <remarks><seealso cref="T:Blackbaud.AppFx.Server.AdHocQueryFilterField"/></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQueryHelper.GetStaticIDSetTableName(Blackbaud.AppFx.Server.RequestContext,Blackbaud.AppFx.Server.AdHocQuery)">
 <summary>
 Creates and returns a name for a table to be created which will hold results of a static query.
 </summary>
 <param name="context">The request context from which this method is being called.</param>
 <returns>Static ID set table name.</returns>
 <remarks>
 This method actually makes a call to a SQL function to get the name of the static ID set table; this ensures
 that both stored procedures and .Net assemblies get the table name from the same source.  Once a static ID set
 table name is retrieved initially for an ad-hoc query, its value is cached to avoid unnecessary calls to the
 database.
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQueryHelper.LocalizeDisplayPath(Blackbaud.AppFx.Server.AdHocQueryViewPathParser,System.Data.SqlClient.SqlConnection,Blackbaud.AppFx.Server.RequestContext,Blackbaud.AppFx.Server.AdHocQuerySelectField)">
 <summary>
 Localizes the display path for a selected field by getting the localized captions for each part.
 </summary>
 <param name="conn">Open connection to the database.</param>
 <param name="context">Context of the current request.</param>
 <param name="selectedField">Selected output field of an adHocQuery.</param>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQueryHelper.GetFieldDisplayCaption(Blackbaud.AppFx.Server.AdHocQueryViewPathParser,System.Data.SqlClient.SqlConnection,Blackbaud.AppFx.Server.RequestContext,Blackbaud.AppFx.Server.AdHocQueryViewData,System.String,System.String)">
 <summary>
 Gets the localized caption for a given AdHocQueryViewData field.
 </summary>
 <param name="conn">Open connection to the database.</param>
 <param name="context">Context of the current request.</param>
 <param name="field">Individual field that is part of the display path.</param>
 <param name="parentpath">Parent path of the selected field in the adHocQuery.</param>
 <param name="displayPath">Display path of the selected field in the adHocQuery.</param>
 <returns>Localized caption for given field.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQueryHelper.SelectedFieldsNeedLocalization(Blackbaud.AppFx.Server.AdHocQuery,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Determines given the current culture if the given adHocQuery needs to have its selected fields localized.
 </summary>
 <param name="adHocQuery">AdHocQuery to be tested to see if the selected fields need to be localized.</param>
 <param name="context">Context of the current request.</param>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQueryHelper.GetDisplayCaption(System.String,System.String,System.String)">
 <summary>
 Get the display caption for a query field.
 </summary>
 <param name="caption">The field's caption.</param>
 <param name="parentPath">The path of the parent node.</param>
 <param name="displayPath">The display path of the parent node.</param>
 <returns>The display caption.</returns>
 <remarks>
 This method is copied in several places:
   ~\Blackbaud.AppFx.Server\Requests\AdHocQuery\AdHocQueryHelper.vb
   ~\Blackbaud\AppFx\WebShell\WebUI\WebShellAdHocQuery.vb
   ~\Blackbaud\AppFx\Platform\UIModel\Query\AdHocQueryCommon.vb
   ~\Blackbaud.AppFx.Server.UnitTests\AdHocQueryUnitTests\RemovedFields\Helpers\RemovedFieldsHelper.vb
 
 Be sure to also update those places if this function is updated.
 
 In the future, it may make sense to create an AppFx service
 endpoint to get the caption.
 </remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQueryRefreshStaticIDSetRequest">
 <summary>
 Refreshes the set of IDs in a Static Selection.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQueryRefreshStaticIDSetReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.AdHocQueryRefreshStaticIDSetRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQueryRefreshStaticIDSetProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.AdHocQueryRefreshStaticIDSetRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQuerySaveReportRequest">
 <summary>
 Creates or updates a report based on ad-hoc query metadata and adds it to the catalog so it can be consumed by other areas of the application.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuerySaveReportRequest.SelectFields">
 <summary>
 Collection of <see cref="T:Blackbaud.AppFx.Server.AdHocQuerySelectField"/> objects which the user defined in the ad-hoc query.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuerySaveReportRequest.FilterFields">
 <summary>
 Collection of <see cref="T:Blackbaud.AppFx.Server.AdHocQueryFilterField"/> objects which the user defined in the ad-hoc query.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuerySaveReportRequest.SortFields">
 <summary>
 Collection of <see cref="T:Blackbaud.AppFx.Server.AdHocQuerySortField"/> objects which the user defined in the ad-hoc query.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuerySaveReportRequest.GroupFilterFields">
 <summary>
 Collection of <see cref="T:Blackbaud.AppFx.Server.AdHocQueryGroupFilterField"/> objects which the user defined in the ad-hoc query.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuerySaveReportRequest.SuppressDuplicateRows">
 <summary>
 Indicates whether the user wants duplicate rows in the query suppressed.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQuerySaveReportReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.AdHocQuerySaveReportRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQuerySaveReportProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.AdHocQuerySaveReportRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQuerySaveReportToCatalogAndReportServerRequest">
 <summary>
 Creates or updates a report based on ad-hoc query metadata and adds it to the catalog and the Report Server so it can be consumed by other areas of the application.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQuerySaveReportToCatalogAndReportServerReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.AdHocQuerySaveReportToCatalogAndReportServerRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQuerySaveReportToCatalogAndReportServerProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.AdHocQuerySaveReportToCatalogAndReportServerRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQuerySaveSmartQueryRequest">
 <summary>
 Creates or updates a smart query based on ad-hoc query metadata and adds it to the catalog so it can be consumed by other areas of the application.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuerySaveSmartQueryRequest.SelectFields">
 <summary>
 Collection of <see cref="T:Blackbaud.AppFx.Server.AdHocQuerySelectField"/> objects which the user defined in the ad-hoc query.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuerySaveSmartQueryRequest.FilterFields">
 <summary>
 Collection of <see cref="T:Blackbaud.AppFx.Server.AdHocQueryFilterField"/> objects which the user defined in the ad-hoc query.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuerySaveSmartQueryRequest.SortFields">
 <summary>
 Collection of <see cref="T:Blackbaud.AppFx.Server.AdHocQuerySortField"/> objects which the user defined in the ad-hoc query.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuerySaveSmartQueryRequest.GroupFilterFields">
 <summary>
 Collection of <see cref="T:Blackbaud.AppFx.Server.AdHocQueryGroupFilterField"/> objects which the user defined in the ad-hoc query.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuerySaveSmartQueryRequest.SuppressDuplicateRows">
 <summary>
 Indicates whether the user wants duplicate rows in the query suppressed.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuerySaveSmartQueryRequest.HasMissingViewFields">
 <summary>
 Indicates whether the ad-hoc query has fields that are not present in the query view on which it is based.  This is possible
 if a user saves an ad-hoc query, then alters and reloads the query view spec.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQuerySaveSmartQueryReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.AdHocQuerySaveSmartQueryRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQuerySaveSmartQueryProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.AdHocQuerySaveSmartQueryRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQueryUserGrantedRequest">
 <summary>
 Used to determine if the requesting user has been granted (and not denied) permission to a query with the given ID.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQueryUserGrantedReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.AdHocQueryUserGrantedRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQueryUserGrantedProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.AdHocQueryUserGrantedRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQueryProcessDeferredResultState">
 <summary>
 State information transfered from the ad-hoc query process request processor to the
 ad-hoc query process get deferred result request processor.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.BatchTypeGetMetaDataRequest">
 <summary>
 Gets the metadata for the specified batch type ID
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.BatchTypeGetMetaDataReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.BatchTypeGetMetaDataRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.BatchTypeGetMetaDataProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.BatchTypeGetMetaDataRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.BatchValidateRequest">
 <summary>
 Validates the data for a batch defined by the supplied batch ID
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.BatchValidateReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.BatchValidateRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.BatchValidateProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.BatchValidateRequest" />
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.BatchValidateProcessor.GetCommitFormMetaData(System.Data.SqlClient.SqlConnection)">
 <summary>
 Fetches, processes, and caches the metadata for the commit forms.
 </summary>
 <param name="conn"></param>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.BatchValidateProcessor.GetSingleFormMetaData(System.Data.SqlClient.SqlConnection,System.Guid,Blackbaud.AppFx.Server.BatchValidateProcessor.CommitDataFormInfo)">
 <summary>
 Fetches metadata for the form, processes it for use in batch, and caches it in formInfo.
 </summary>
 <param name="conn"></param>
 <param name="formID"></param>
 <param name="formInfo"></param>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.BatchValidateProcessor.EnforceReadonlyMetadataFromTemplate(Blackbaud.AppFx.XmlTypes.FormField[],Blackbaud.AppFx.XmlTypes.FormField[])">
 <summary>
 Modifies the instance fields to be readonly if the corresponding template field is read only.
 This function defends against the possibility that the dataform instance metadata gets out of sync with
 the dataform template where ReadOnly fields are concerned. This can happen if the template is modified and 
 somebody forgets to add an extra revision to reload the batch type spec.
 </summary>
 <param name="instanceFields">Fields supplied by the dataform instance metadata.</param>
 <param name="templateFields">Fields supplied by the dataform template metadata.</param>
</member>
<member name="T:Blackbaud.AppFx.Server.BusinessProcessGenerateActiveXScriptRequest">
 <summary>
 Generates an ActiveX script which can be executed to launch a business process
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.BusinessProcessGenerateActiveXScriptReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.BusinessProcessGenerateActiveXScriptRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.BusinessProcessGenerateActiveXScriptProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.BusinessProcessGenerateActiveXScriptRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.BusinessProcessLaunchDeferredResultState">
 <summary>
 State information transfered from the business process launch request processor to the
 business process launch get deferred result request processor.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.BusinessProcessLaunchGetDeferredResultRequest">
 <summary>
 Gets the response from a recently executed business process launch
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.BusinessProcessLaunchGetDeferredResultRequest.DeferredResultKey">
 <summary>
 A key to use to fetch the results of the business process at a later point.
 </summary>
 <remarks>If non-empty, this will be used in place of DeferredResultToken.</remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.BusinessProcessLaunchGetDeferredResultRequest.DeferredResultToken">
 <summary>
 An arbitrary string token to use to fetch the results of the business process at a later point. 
 </summary>
 <remarks>This will only be used if DeferredResultKey is not set.</remarks>
</member>
<member name="P:Blackbaud.AppFx.Server.BusinessProcessLaunchGetDeferredResultRequest.DeferredResultKeyOrToken">
 <summary>
 Returns the deferred result key if it's been set or the deferred result token if it key hasn't been set and the token has. 
 This the key is required for backwards compatibility (and therefore overrides the token) but the token is a string and is therefore more 
 flexible. 
 </summary>
 <returns>The deferred result token that should be used to access the deferred results of this business process, or an empty string if none is set.</returns>
</member>
<member name="T:Blackbaud.AppFx.Server.BusinessProcessLaunchGetDeferredResultReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.BusinessProcessLaunchGetDeferredResultRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.BusinessProcessLaunchGetDeferredResultProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.BusinessProcessLaunchGetDeferredResultRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ActiveXScriptType">
 <summary>
 Indicates the types of scripts that can be created by the <see cref="T:Blackbaud.AppFx.Server.BusinessProcessScriptBuilder"/> class.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ActiveXScriptType.SqlAgentJob">
 <summary>
 Represents VBScript that can be executed as a SQL Server Agent job step.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ActiveXScriptType.WsfScriptOnly">
 <summary>
 Represents VBScript that can be included in a Windows Scripting File (WSF).  The required XML for the WSF file will not be included.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ActiveXScriptType.WsfWithXml">
 <summary>
 Represents VBScript that can be included in a Windows Scripting File (WSF), including the XML for the WSF.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ActiveXScriptType.SqlAgentJobPs">
 <summary>
 Represents PowerShell script that can be executed as a SQL Server Agent job step. Supports SQL Server 2016 scheduled jobs.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.BusinessProcessScriptBuilder">
 <summary>
 Provides methods for generating and parsing scripts for use with scheduling a business process.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.BusinessProcessScriptBuilder.BuildScript(Blackbaud.AppFx.Server.RequestContext,System.Guid,System.Guid,Blackbaud.AppFx.Server.ActiveXScriptType)">
 <summary>
 Generates PowerShell and VBScript code which can be used to make a web request to execute a business process.
 </summary>
 <param name="context">Context of the current request.</param>
 <param name="businessProcessID">ID of the business process to be executed.</param>
 <param name="parameterSetID">ID of the parameter set to be executed.</param>
 <param name="scriptType">Type of script to generate.</param>
 <returns>VBScript code to execute the business process.</returns>
 <exception cref="T:System.ArgumentNullException">When context is null, or when businessProcessID or parameterSetID is an empty GUID..</exception>
</member>
<member name="M:Blackbaud.AppFx.Server.BusinessProcessScriptBuilder.BuildScript(Blackbaud.AppFx.Server.RequestContext,System.Guid,System.Guid,Blackbaud.AppFx.Server.ActiveXScriptType,System.Boolean)">
 <summary>
 Generates PowerShell and VBScript code which can be used to make a web request to execute a business process.
 </summary>
 <param name="context">Context of the current request.</param>
 <param name="businessProcessID">ID of the business process to be executed.</param>
 <param name="parameterSetID">ID of the parameter set to be executed.</param>
 <param name="scriptType">Type of script to generate.</param>
 <param name="validateParameterSetID">Flag indicating if the paramatersetID should be validated.</param>
 <returns>VBScript code to execute the business process.</returns>
 <exception cref="T:System.ArgumentNullException">When context is null, or when businessProcessID or parameterSetID is an empty GUID..</exception>
</member>
<member name="M:Blackbaud.AppFx.Server.BusinessProcessScriptBuilder.BuildScript(Blackbaud.AppFx.Server.RequestContext,System.Guid,System.Guid,Blackbaud.AppFx.Server.ActiveXScriptType,System.Boolean,System.Globalization.CultureInfo,System.Globalization.CultureInfo)">
 <summary>
 Generates PowerShell and VBScript code which can be used to make a web request to execute a business process.
 </summary>
 <param name="context">Context of the current request.</param>
 <param name="businessProcessID">ID of the business process to be executed.</param>
 <param name="parameterSetID">ID of the parameter set to be executed.</param>
 <param name="scriptType">Type of script to generate.</param>
 <param name="validateParameterSetID">Flag indicating if the paramatersetID should be validated.</param>
 <param name="culture">The culture that the launched business process should be run under.</param>
 <param name="uiCulture">The UI culture that the launched business process should be run under.</param>
 <returns>VBScript code to execute the business process.</returns>
 <exception cref="T:System.ArgumentNullException">When context is null, or when businessProcessID or parameterSetID is an empty GUID..</exception>
</member>
<member name="M:Blackbaud.AppFx.Server.BusinessProcessScriptBuilder.ParseQueryStringFromActiveXScript(System.String,System.String@,System.String@,System.Guid@,System.Guid@)">
 <summary>
 Accepts VBScript code and parses out the service URL, database name, business process ID and parameter set ID values.
 </summary>
 <param name="activeXScript">VBScript code containing the desired values.</param>
 <param name="serviceUrl">Service URL value contained in the provided script.</param>
 <param name="databaseName">Database name contained in the provided script.</param>
 <param name="businessProcessID">Business process ID value contained in the provided script.</param>
 <param name="parameterSetID">Parameter set ID value contained in the provided script.</param>
 <remarks>This method expects the VBScript to be in the same state as it was when generated by the <see cref="M:Blackbaud.AppFx.Server.BusinessProcessScriptBuilder.BuildScript(Blackbaud.AppFx.Server.RequestContext,System.Guid,System.Guid,Blackbaud.AppFx.Server.ActiveXScriptType)"/> method.  
 If the VBScript code has been altered, this method may return unpredictable results or cause an exception.
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.BusinessProcessScriptBuilder.ParseQueryStringFromActiveXScript(System.String,System.String@,System.String@,System.Guid@,System.Guid@,System.Globalization.CultureInfo@,System.Globalization.CultureInfo@)">
 <summary>
 Accepts VBScript code and parses out the service URL, database name, business process ID and parameter set ID values.
 </summary>
 <param name="activeXScript">VBScript code containing the desired values.</param>
 <param name="serviceUrl">Service URL value contained in the provided script.</param>
 <param name="databaseName">Database name contained in the provided script.</param>
 <param name="businessProcessID">Business process ID value contained in the provided script.</param>
 <param name="parameterSetID">Parameter set ID value contained in the provided script.</param>
 <param name="culture">The culture info contained in the provided script.</param>
 <param name="uiCulture">The UI culture info contained in the provided script.</param>
 <remarks>This method expects the VBScript to be in the same state as it was when generated by the <see cref="M:Blackbaud.AppFx.Server.BusinessProcessScriptBuilder.BuildScript(Blackbaud.AppFx.Server.RequestContext,System.Guid,System.Guid,Blackbaud.AppFx.Server.ActiveXScriptType)"/> method.  
 If the VBScript code has been altered, this method may return unpredictable results or cause an exception.
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.BusinessProcessScriptBuilder.ParseQueryStringFromScript(System.String,System.String@,System.String@,System.Guid@,System.Guid@)">
 <summary>
 Accepts PowerShell or VBScript code and parses out the service URL, database name, business process ID and parameter set ID values.
 </summary>
 <param name="script">PowerShell or VBScript code containing the desired values.</param>
 <param name="serviceUrl">Service URL value contained in the provided script.</param>
 <param name="databaseName">Database name contained in the provided script.</param>
 <param name="businessProcessID">Business process ID value contained in the provided script.</param>
 <param name="parameterSetID">Parameter set ID value contained in the provided script.</param>
 <remarks>This method expects the PowerShell or VBScript to be in the same state as it was when generated by the <see cref="M:Blackbaud.AppFx.Server.BusinessProcessScriptBuilder.BuildScript(Blackbaud.AppFx.Server.RequestContext,System.Guid,System.Guid,Blackbaud.AppFx.Server.ActiveXScriptType)"/> method.  
 If the VBScript code has been altered, this method may return unpredictable results or cause an exception.
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.BusinessProcessScriptBuilder.ParseQueryStringFromScript(System.String,System.String@,System.String@,System.Guid@,System.Guid@,System.Globalization.CultureInfo@,System.Globalization.CultureInfo@)">
 <summary>
 Accepts PowerShell or VBScript code and parses out the service URL, database name, business process ID and parameter set ID values.
 </summary>
 <param name="script">PowerShell or VBScript code containing the desired values.</param>
 <param name="serviceUrl">Service URL value contained in the provided script.</param>
 <param name="databaseName">Database name contained in the provided script.</param>
 <param name="businessProcessID">Business process ID value contained in the provided script.</param>
 <param name="parameterSetID">Parameter set ID value contained in the provided script.</param>
 <param name="culture">The culture info contained in the provided script.</param>
 <param name="uiCulture">The UI culture info contained in the provided script.</param>
 <remarks>This method expects the PowerShell or VBScript to be in the same state as it was when generated by the <see cref="M:Blackbaud.AppFx.Server.BusinessProcessScriptBuilder.BuildScript(Blackbaud.AppFx.Server.RequestContext,System.Guid,System.Guid,Blackbaud.AppFx.Server.ActiveXScriptType)"/> method.  
 If the VBScript code has been altered, this method may return unpredictable results or cause an exception.
 </remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.ConditionSettingExistsRequest">
 <summary>
 Checks whether the supplied condition setting exists in the database.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ConditionSettingExistsReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.ConditionSettingExistsRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ConditionSettingExistsProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.ConditionSettingExistsRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ConfigurationDataInformationRequest">
 <summary>
 Returns information on a given configuration data definition
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ConfigurationDataInformationReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.ConfigurationDataInformationRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ConfigurationDataInformationProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.ConfigurationDataInformationRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ConfigurationDataListReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.ConfigurationDataListRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ConfigurationDataListProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.ConfigurationDataListRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ConfigurationDataListRequest">
 <summary>
 Returns a list of all available configuration data definitions.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CountryStateGetIDRequest">
 <summary>
 Returns the ID for the given country and state.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CountryStateGetIDReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.CountryStateGetIDRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CountryStateGetIDProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.CountryStateGetIDRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CreditCardVaultRequest">
 <summary>
 Stores credit card information to BBPS
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CreditCardVaultReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.CreditCardVaultRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CreditCardVaultProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.CreditCardVaultRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CurrencyExchangeRateGetRequest">
 <summary>
 Returns properties for the specified currency exchange rate.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CurrencyExchangeRateGetReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.CurrencyExchangeRateGetRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CurrencyExchangeRateGetProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.CurrencyExchangeRateGetRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CurrencyExchangeRateGetLatestRequest">
 <summary>
 Returns properties for the latest currency exchange rate matching the supplied parameters.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CurrencyExchangeRateGetLatestReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.CurrencyExchangeRateGetLatestRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CurrencyExchangeRateGetLatestProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.CurrencyExchangeRateGetLatestRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CurrencyGetRequest">
 <summary>
 Returns a currency ID and currency formatting information for the specified currency.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CurrencyGetReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.CurrencyGetRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CurrencyGetProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.CurrencyGetRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CurrencyHelper">
 <summary>
 Utilities for currency operations.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.CurrencyHelper.FormatMoney(System.Decimal,System.Guid,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent string representation using the
 currency format of the specified currency.
 </summary>
 <param name="value">The decimal number to convert.</param>
 <param name="currencyID">The ID of the currency to use for formatting.</param>
 <param name="requestContext">The <see cref="T:Blackbaud.AppFx.Server.RequestContext" /> of the original web request.</param>
 <returns>The string representation of value formatted using the currency format of the specified currency.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.CurrencyHelper.FormatMoney(System.Decimal,System.Guid,Blackbaud.AppFx.Server.RequestContext,System.Nullable{System.Int32})">
 <summary>
 Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent string representation using the
 currency format of the specified currency.
 </summary>
 <param name="value">The decimal number to convert.</param>
 <param name="currencyID">The ID of the currency to use for formatting.</param>
 <param name="requestContext">The <see cref="T:Blackbaud.AppFx.Server.RequestContext" /> of the original web request.</param>
 <param name="scale">The number of decimal digits to display.
 If Nothing, the currency's default number of digits will be used.</param>
 <returns>The formatted amount string</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.CurrencyHelper.GetCurrency(System.Guid,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Retrieves the <see cref="T:Blackbaud.AppFx.CurrencyFormat" /> for the specified currency.
 </summary>
 <param name="currencyID">The ID of the currency.</param>
 <param name="requestContext">The <see cref="T:Blackbaud.AppFx.Server.RequestContext" /> of the original web request.</param>
 <returns>The <see cref="T:Blackbaud.AppFx.CurrencyFormat" /> for the specified currency.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.CurrencyHelper.GetOrganizationCurrencyId(Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Retrieves the ID of the organization currency.
 </summary>
 <param name="requestContext">The <see cref="T:Blackbaud.AppFx.Server.RequestContext" /> of the original web request.</param>
 <returns>The ID of the organization currency.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.CurrencyHelper.RoundCurrency(System.Decimal,System.Guid,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Rounds the value of the specified <see cref="T:System.Decimal" /> using the method and number of digits
 for the given currency.
 </summary>
 <param name="amount">The decimal number to round.</param>
 <param name="currencyID">The ID of the currency to use for rounding.</param>
 <param name="requestContext">The <see cref="T:Blackbaud.AppFx.Server.RequestContext" /> of the original web request.</param>
 <returns>The rounded value of the amount as a Decimal.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.DataForms.DataFormFile.CopyStream(System.IO.Stream,System.IO.Stream)">
 <summary>
 Copies the entire input stream to the output stream.
 </summary>
 <param name="inputStream">The input stream to read from.</param>
 <param name="outputStream">The output stream to write to.</param>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.DataForms.DataFormHelper.LocalizeString(System.String,System.String,System.Resources.ResourceManager)">
 <summary>
 Translates the given <paramref name="caption"/> to the appropriate language specific resource value given the <paramref name="captionResourceKey"/>
 </summary>
 <returns>The translated resource or the original value if it can't be resolved</returns>
</member>
<member name="T:Blackbaud.AppFx.Server.DataFormSupportsWebUIRequest">
 <summary>
 Determines whether or not the specified data form instance can be rendered in a web browser.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.DataFormSupportsWebUIRequest.DataFormInstanceID">
 <summary>
 The dataform instance ID.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.DataFormSupportsWebUIRequest.RecordIdOrContextRecordId">
 <summary>
 Optional ID representing the record ID (for edit/view forms) or context record ID (for add forms) to use when determining if the 
 form supports WebUI.  This parameter is only applicable for global change and smart field data forms instance IDs. 
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.DataFormSupportsWebUIReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.DataFormSupportsWebUIRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.DataFormSupportsWebUIProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.DataFormSupportsWebUIRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SimpleDataListGetMetaDataRequest">
 <summary>
 Returns the simple data list parameter form definition given the ID
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SimpleDataListGetMetaDataReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.SimpleDataListGetMetaDataRequest" />.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SimpleDataListGetMetaDataReply.Name">
 <summary>
 Contains the name of the data list
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SimpleDataListGetMetaDataReply.ParameterDefinition">
 <summary>
 XML that contains the form definition for the parameters (if any)
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SimpleDataListGetMetaDataReply.SimpleDataListSpec">
 <summary>
 Contains the search list spec.  Only returned if <see cref="F:Blackbaud.AppFx.Server.SimpleDataListGetMetaDataRequest.ReturnSimpleDataListSpec"/> is set to true
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SimpleDataListGetMetaDataReply.TSLong">
 <summary>
 The TSLONG value from the dbo.DATALISTCATALOG row.
 </summary>
 <remarks>This value can be used to know if the metadata has changed by comparing this field to a previously retrieved metadata reply.</remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.SimpleDataListGetMetaDataProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.SimpleDataListGetMetaDataRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.EmailGetDbMailConfigInfoRequest">
 <summary>
 Returns information about the configuration for email alerts.  The caller must have permission to use the Alert Settings view form or edit form or be a system administrator.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.EmailGetDbMailConfigInfoReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.EmailGetDbMailConfigInfoRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.EmailGetDbMailConfigInfoProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.EmailGetDbMailConfigInfoRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.EmailSendToAppUserRequest">
 <summary>
 Sends an email to the given application user.  Database mail must be configured and the caller must have the Send Email To Application Users privilege.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.EmailSendToAppUserReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.EmailSendToAppUserRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.EmailSendToAppUserProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.EmailSendToAppUserRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.GetGeneralPurposeEmailStatusRequest">
 <summary>
 Gets a general purpose email's status by wrapping up EmailServices' GetGeneralPurposeEmailStatus.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.GetGeneralPurposeEmailStatusReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.GetGeneralPurposeEmailStatusRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.GetGeneralPurposeEmailStatusProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.GetGeneralPurposeEmailStatusRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SendGeneralPurposeEmailRequest">
 <summary>
 Sends a general purpose email by wrapping up EmailServices' SendGeneralPurposeEmail.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SendGeneralPurposeEmailReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.SendGeneralPurposeEmailRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SendGeneralPurposeEmailProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.SendGeneralPurposeEmailRequest" />
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ExportDefinitionQueryViewNode.SortField">
 <summary>
 The field used to sort childnodes.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ExportDefinitionQueryViewNode.Fields">
 <summary>
 Fields that belong directly to this node
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ExportDefinitionQueryViewNode.Nodes">
 <summary>
 Any child nodes that may belong to this node
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ExportDefinitionQueryViewNode.NumberToExport">
 <summary>
 The number of items to export for child nodes that are of cardinality one to many.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ExportDefinitionQueryViewNode.FilterFields">
 <summary>
 Collection of <see cref="T:Blackbaud.AppFx.Server.AdHocQueryFilterField"/> objects which the user defined for the ExportDefinitionQueryViewNode.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.ExportDefinitionQueryViewField.IDSetFieldInfo">
 <summary>
 Information about the ID set which the field represents.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ExportDefinitionQueryViewField.IsIDSetField">
 <summary>
 Indicates whether the field is defined in the <see cref="T:Blackbaud.AppFx.XmlTypes.QueryViewSpec">QueryViewSpec</see> or is derived from an ID set.
 </summary>
 <returns>Boolean value.</returns>
 <remarks></remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.ExportDefinition">
 <summary>
 Class that represents an export definition that a user has defined by selecting any number of <see cref="T:Blackbaud.AppFx.Server.ExportDefinitionQueryViewField"/>,
 <see cref="T:Blackbaud.AppFx.Server.ExportDefinitionQueryViewNode"/>, and <see cref="T:Blackbaud.AppFx.Server.ExportDefinitionSortField"/> objects. The export definition
 is then used to return a list of results based on the fields the user has selected.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ExportDefinition.ID">
 <summary>
 ID of the record in the Export Definition table.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ExportDefinition.RecordType">
 <summary>
 Description of the record type to which the export definition is associated.
 </summary>
 <remarks>The description is a translation of the <see cref="P:Blackbaud.AppFx.Server.ExportDefinition.RecordTypeID"/> property.</remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.ExportDefinition.AddedByID">
 <summary>
 ID of the user who added the export definition record to the database
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.ExportDefinition.AddedByUserName">
 <summary>
 User name of the user who added the export definition record to the database
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.ExportDefinition.ChangedByID">
 <summary>
 ID of the user who last made a change to the export definition record in the database
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.ExportDefinition.ChangedByUserName">
 <summary>
 User name of the user who last made a change to the export definition record in the database
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.ExportDefinition.DateAdded">
 <summary>
 Date the export definition record was added to the database
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.ExportDefinition.DateChanged">
 <summary>
 Date the export definition record was last changed in the database
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.ExportDefinition.Name">
 <summary>
 User-defined name of the export definition.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ExportDefinition.Description">
 <summary>
 User-defined description of the export definition.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ExportDefinition.SiteID">
 <summary>
 User-defined site associated with the export definition.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.ExportDefinition.LockFields">
 <summary>
 Indicates that the UI should not allow existing fields to be removed from the export definition, for example because it is being used as the basis for a NetCommunity data source on which email messages are based.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.ExportDefinition.RootNode">
 <summary>
 Query view fields and criteria selected for this export definition.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ExportDefinition.IsSystem">
 <summary>
 Indicates that the export definition is hidden and meant for system use only.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.ExportDefinition.UseFieldNamesForOneToOneColumnHeaders">
 <summary>
 Indicates that the export definition will use just the field names for any one to one field to the root query view.  This is mainly for backwards compatibility for marketing export definitions.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.ExportDefinition.UseShortColumnHeaders">
 <summary>
 Indicates that the export definition will use abbreviated names for the path names used to build the unique column names.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.ExportDefinition.OutputColumnMetadata">
 <summary>
 Metadata, such as column order and sorting, that is associated with the export output columns that will be 
 generated for the query view fields and criteria selected for this export definition.
 </summary>
 <remarks>
 If criteria is set on an export node to associate multiple related records (i.e. NumberToExport is set on a 
 <see cref="T:Blackbaud.AppFx.Server.ExportDefinitionQueryViewNode"/>), distinct metadata can be associated with each related record instance. 
 </remarks>
</member>
<member name="P:Blackbaud.AppFx.Server.ExportDefinition.RecordTypeID">
 <summary>
 ID of the record type to which the export definition is associated.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.ExportDefinitionGetIDByNameRequest">
 <summary>
 Returns the export definition system ID given the name
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ExportDefinitionGetIDByNameReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.ExportDefinitionGetIDByNameRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ExportDefinitionGetIDByNameProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.ExportDefinitionGetIDByNameRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ExportDefinitionLoadRequest">
 <summary>
 Returns the export definition and a list of fields and export criteria used for the given ID
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ExportDefinitionLoadReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.ExportDefinitionLoadRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ExportDefinitionLoadProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.ExportDefinitionLoadRequest" />
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.ExportDefinitionProcessor.ExportTableColumn.IDSetColumnDefinition">
 <summary>
 This is the resulting select SQL for an ID Set column generated
 from processing the ID Set info
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.ExportDefinitionProcessor.ExportTableColumn.IdSetRegisterId">
 <summary>
 We're going to need to know the ID Set ID later on to match an ExportTableColumn with a QueryViewField
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ExportDefinitionProcessor.FindQueryFieldInQueryNode(Blackbaud.AppFx.Server.QueryViewTreeNode,System.String)">
 <summary>
 Finds a <see cref="T:Blackbaud.AppFx.Server.QueryViewField" /> in a <see cref="T:Blackbaud.AppFx.Server.QueryViewTreeNode" /> by name.
 </summary>
 <param name="node">The <see cref="T:Blackbaud.AppFx.Server.QueryViewTreeNode" /> to search.</param>
 <param name="fieldName">The name of the field to be located.</param>
 <returns>The matching <see cref="T:Blackbaud.AppFx.Server.QueryViewField" />, if one is found; otherwise, Nothing.</returns>
 <remarks>
 This should only be used in situations where you know you're not looking for a <see cref="T:Blackbaud.AppFx.Server.QueryViewField" /> representing a selection: for example, when looking for
 a join field.  If there's a chance the matching field you're looking for is a selection, you should use another overload, because the selection's name may have
 changed underneath you.
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.ExportDefinitionProcessor.FindQueryFieldInQueryNode(Blackbaud.AppFx.Server.QueryViewTreeNode,System.Guid)">
 <summary>
 Finds a <see cref="T:Blackbaud.AppFx.Server.QueryViewField" /> in a <see cref="T:Blackbaud.AppFx.Server.QueryViewTreeNode" /> by selection ID.
 </summary>
 <param name="node">The <see cref="T:Blackbaud.AppFx.Server.QueryViewTreeNode" /> to search.</param>
 <param name="idSetRegisterId">The ID of the selection to be located.</param>
 <returns>The matching <see cref="T:Blackbaud.AppFx.Server.QueryViewField" />, if one is found; otherwise, Nothing.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.ExportDefinitionProcessor.FindQueryFieldInQueryNode(Blackbaud.AppFx.Server.QueryViewTreeNode,Blackbaud.AppFx.Server.ExportDefinitionQueryViewField)">
 <summary>
 Finds the <see cref="T:Blackbaud.AppFx.Server.QueryViewField" /> in a <see cref="T:Blackbaud.AppFx.Server.QueryViewTreeNode" /> that corresponds to an <see cref="T:Blackbaud.AppFx.Server.ExportDefinitionQueryViewField" />.
 </summary>
 <param name="node">The <see cref="T:Blackbaud.AppFx.Server.QueryViewTreeNode" /> to search.</param>
 <param name="field">The <see cref="T:Blackbaud.AppFx.Server.ExportDefinitionQueryViewField" /> to be located.</param>
 <returns>The matching <see cref="T:Blackbaud.AppFx.Server.QueryViewField" />, if one is found; otherwise, Nothing.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.ExportDefinitionProcessor.AddressProcessingTempTableColumns">
 <summary>
 Get the SQL for the columns when creating the address processing table.
 </summary>
 <returns>SQL for the columns to be used in a "create table" statement.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.ExportDefinitionProcessor.AddressProcessingTempTableColumns(System.Boolean)">
 <summary>
 Get the SQL for the columns when either creating the address processing table or selecting from it.
 </summary>
 <param name="forCreate">Whether to build the SQL for a "create table" statement or for a "select" statement.</param>
 <returns>SQL for the columns to be used.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.ExportDefinitionProcessor.CreateFieldsList(System.Collections.Generic.List{Blackbaud.AppFx.Server.ExportDefinitionProcessor.ExportTableColumn},System.Boolean,Blackbaud.AppFx.Server.ExportDefinitionProcessor.ShortenFieldNamesOptions)">
 <param name="shortenFieldNames">Determines if the fields will be shortened in the final list or not. 
 
 Keep track of where this field list is being used and be consistent with your use of shortening vs. non-shortening. 
 In general, columns that this process is creating (like output table columns) should be shortened. 
 Columns coming from somewhere else (like when selecting from a query view) should NOT be shortened.
 </param>
</member>
<member name="M:Blackbaud.AppFx.Server.ExportDefinitionProcessor.CreateFieldsList(System.Collections.Generic.List{Blackbaud.AppFx.Server.ExportDefinitionProcessor.ExportTableColumn},System.String,Blackbaud.AppFx.Server.ExportDefinitionProcessor.ShortenFieldNamesOptions)">
 <param name="shortenFieldNames">Determines if the fields will be shortened in the final list or not. 
 
 Keep track of where this field list is being used and be consistent with your use of shortening vs. non-shortening. 
 In general, columns that this process is creating (like output table columns) should be shortened. 
 Columns coming from somewhere else (like when selecting from a query view) should NOT be shortened.
 </param>
</member>
<member name="M:Blackbaud.AppFx.Server.ExportDefinitionProcessor.CreateFieldsList(System.Collections.Generic.List{Blackbaud.AppFx.Server.ExportDefinitionProcessor.ExportTableColumn},System.String,Blackbaud.AppFx.Server.QueryViewTreeNode,Blackbaud.AppFx.Server.ExportDefinitionNodeFilterSqlBuilder@,System.Boolean,System.Boolean,Blackbaud.AppFx.Server.ExportDefinitionProcessor.ShortenFieldNamesOptions)">
 <param name="shortenFieldNames">Determines if the fields will be shortened in the final list or not. 
 
 Keep track of where this field list is being used and be consistent with your use of shortening vs. non-shortening. 
 In general, columns that this process is creating (like output table columns) should be shortened. 
 Columns coming from somewhere else (like when selecting from a query view) should NOT be shortened.
 </param>
</member>
<member name="M:Blackbaud.AppFx.Server.ExportDefinitionProcessor.CreateFieldsList(System.Collections.Generic.List{Blackbaud.AppFx.Server.ExportDefinitionProcessor.ExportTableColumn},System.String,Blackbaud.AppFx.Server.QueryViewTreeNode,Blackbaud.AppFx.Server.ExportDefinitionNodeFilterSqlBuilder@,System.Boolean,System.Boolean,System.Boolean,Blackbaud.AppFx.Server.ExportDefinitionProcessor.ShortenFieldNamesOptions,System.Boolean)">
 <param name="shortenFieldNames">Determines if the fields will be shortened in the final list or not. 
 
 Keep track of where this field list is being used and be consistent with your use of shortening vs. non-shortening. 
 In general, columns that this process is creating (like output table columns) should be shortened. 
 Columns coming from somewhere else (like when selecting from a query view) should NOT be shortened.
 </param>
</member>
<member name="M:Blackbaud.AppFx.Server.ExportDefinitionProcessor.ShortenColumnName(System.String)">
 <summary>
 Takes a potential SQL column name and returns a similar (or identical) result that's guaranteed to be no longer than 128 characters.
 Ensures that shortened column names do not collide with each other and ensures that the same longColumnName will always shorten to the 
 same short name for a given export run. 
 </summary>
 <param name="longColumnName">The column name to be shortened</param>
 <returns>A column name similar (or identical) to longColumnName that's guaranteed to be no longer than 128 characters.</returns>
</member>
<member name="T:Blackbaud.AppFx.Server.ExportDefinitionSaveRequest">
 <summary>
 Validates and saves an export definition object to the database
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ExportDefinitionSaveReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.ExportDefinitionSaveRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ExportDefinitionSaveProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.ExportDefinitionSaveRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.GlobalChangeInformationRequest">
 <summary>
 Returns information on a given global change definition
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.GlobalChangeInformationReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.GlobalChangeInformationRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.GlobalChangeInformationProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.GlobalChangeInformationRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.GlobalChangeListRequest">
 <summary>
 Returns a list of all available global changes.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.GlobalChangeListReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.GlobalChangeListRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.GlobalChangeListProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.GlobalChangeListRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.GlobalChangeParametersLoadRequest">
 <summary>
 Returns the saved parameters for a global change instance.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.GlobalChangeParametersLoadReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.GlobalChangeParametersLoadRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.GlobalChangeParametersLoadProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.GlobalChangeParametersLoadRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.GlobalChangeSupportsWebUIRequest">
 <summary>
 Determines whether or not the specified global change can be rendered in a web browser.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.GlobalChangeSupportsWebUIRequest.ID">
 <summary>
 The global change catalog ID
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.GlobalChangeSupportsWebUIRequest.IsInstance">
 <summary>
 Indicates whether the ID parameter is a global change catalog ID or an instance ID
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.GlobalChangeSupportsWebUIReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.GlobalChangeSupportsWebUIRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.GlobalChangeSupportsWebUIProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.GlobalChangeSupportsWebUIRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AllProductsExpiredRequest">
 <summary>
 Determines whether or not all optionally installed features are expired.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AllProductsExpiredReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.AllProductsExpiredRequest" />.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AllProductsExpiredReply.AllExpired">
 <summary>
 A boolean indicating whether or not all optionally installed products are expired.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AllProductsExpiredProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.AllProductsExpiredRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.InstalledProductCountRequest">
 <summary>
 Returns the number of optionally installed features are available.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.InstalledProductCountReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.InstalledProductCountRequest" />.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.InstalledProductCountReply.ProductsInstalled">
 <summary>
 An integer representing the number of optionally installed products that are available.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.InstalledProductCountProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.InstalledProductCountRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.GetInstalledProductListRequest">
 <summary>
 Returns a list of all currently installed optional components.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.GetInstalledProductListReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.GetInstalledProductListRequest" />.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.GetInstalledProductListReply.InstalledProductList">
 <summary>
 The output rows
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.GetInstalledProductListProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.GetInstalledProductListRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ProductIsRequest">
 <summary>
 Determines whether or not the specified feature has been installed.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ProductIsRequest.ProductID">
 <summary>
 The ID of the product to be checked.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.ProductIsReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.ProductIsRequest" />.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ProductIsReply.Installed">
 <summary>
 A boolean indicating whether or not the product has been installed.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ProductIsProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.ProductIsRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UnlockModuleRequest">
 <summary>
 Unlocks the optionally installed component referenced by the unique activation key specified.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UnlockModuleReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.UnlockModuleRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UnlockModuleProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.UnlockModuleRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UpdateProductsListProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.UpdateProductsListRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UpdateProductsListRequest">
 <summary>
 Updates the product with all purchased modules from Blackbaud.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UpdateProductsListReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.UpdateProductsListRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.KpiInstanceGetDynamicGoalValueRequest">
 <summary>
 Returns the goal value for a KPI instance which uses a stored procedure to calculate the goal value using a set of parameters defined in the KPI spec.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.KpiInstanceGetDynamicGoalValueReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.KpiInstanceGetDynamicGoalValueRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.KpiInstanceGetDynamicGoalValueProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.KpiInstanceGetDynamicGoalValueRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.KpiSupportsWebUIRequest">
 <summary>
 Determines whether or not the specified KPI can be rendered in a web browser.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.KpiSupportsWebUIRequest.ID">
 <summary>
 The KPI catalog ID
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.KpiSupportsWebUIReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.KpiSupportsWebUIRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.KpiSupportsWebUIProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.KpiSupportsWebUIRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.KpiCalculator">
 <summary>
 Calculates the value of a KPI based on the provided parameters.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.KpiCalculator.Parameters">
 <summary>
 Parameters to the KPI stored procedure or CLR routine.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.KpiCalculator.AsOfDate">
 <summary>
 Date for which the calculated value is valid.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.KpiCalculator.#ctor(System.Data.SqlClient.SqlConnection,Blackbaud.AppFx.XmlTypes.KpiSpec,Blackbaud.AppFx.XmlTypes.DataForms.DataFormItem)">
 <summary>
 Creates a new instance of KpiCalculator.
 </summary>
 <param name="conn">An open connection to the database.</param>
 <param name="parameters">Parameters to the KPI stored procedure or CLR routine.</param>
</member>
<member name="M:Blackbaud.AppFx.Server.KpiCalculator.#ctor(System.Data.SqlClient.SqlConnection,Blackbaud.AppFx.XmlTypes.KpiSpec,Blackbaud.AppFx.XmlTypes.DataForms.DataFormItem,System.DateTime)">
 <summary>
 Creates a new instance of KpiCalculator.
 </summary>
 <param name="conn">An open connection to the database.</param>
 <param name="parameters">Parameters to the KPI stored procedure or CLR routine.</param>
 <param name="asOfDate">Date to use when calculating the KPI.</param>
</member>
<member name="T:Blackbaud.AppFx.Server.KpiDashboardGetMetaDataRequest">
 <summary>
 Gets the metadata for the pages, tabs, and KPI instances a user has chosen for his personalized KPI dashboard.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.KpiDashboardGetMetaDataReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.KpiDashboardGetMetaDataRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.KpiDashboardGetMetaDataProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.KpiDashboardGetMetaDataRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.KpiDashboardSaveRequest">
 <summary>
 Saves the pages, tabs, and KPI instances a user has chosen for his personalized KPI dashboard.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.KpiDashboardSaveReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.KpiDashboardSaveRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.KpiDashboardSaveProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.KpiDashboardSaveRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.KpiGetDynamicGoalValueRequest">
 <summary>
 Returns the goal value for a KPI which uses a stored procedure to calculate the goal value using a set of parameters defined in the KPI spec.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.KpiGetDynamicGoalValueReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.KpiGetDynamicGoalValueRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.KpiGetDynamicGoalValueProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.KpiGetDynamicGoalValueRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.KpiGetMetaDataRequest">
 <summary>
 Retrieves a KPI catalog item from the database.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.KpiGetMetaDataReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.KpiGetMetaDataRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.KpiGetMetaDataProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.KpiGetMetaDataRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.KpiGetTreeRequest">
 <summary>
 Returns a list of KPI catalog items to be displayed in a tree view.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.KpiGetTreeReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.KpiGetTreeRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.KpiGetTreeProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.KpiGetTreeRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.KpiGetValueRequest">
 <summary>
 Gets the value of a KPI based on the provided parameters.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.KpiGetValueReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.KpiGetValueRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.KpiGetValueProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.KpiGetValueRequest" />
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.KpiHelper.GetMilestones(System.Data.SqlClient.SqlConnection,System.Guid)">
 <summary>
 Retrieves milestones from the database for a given KPI instance.
 </summary>
 <param name="conn">An open connection to the database.</param>
 <param name="kpiInstanceID">ID of the KPI instance.</param>
 <returns>List of milestones for the KPI instance.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.KpiHelper.GetMilestones(System.Data.SqlClient.SqlConnection,System.Guid,System.Collections.Generic.Dictionary{System.Guid,System.Collections.Generic.List{Blackbaud.AppFx.XmlTypes.Kpi.KpiInstanceMilestone}})">
 <summary>
 Retrieves milestones from a dictionary of milestone lists for a given KPI instance; if the milestone list does not appear in the dictionary,
 it is retrieved from the database and added to the dictionary.
 </summary>
 <param name="conn">An open connection to the database.</param>
 <param name="kpiInstanceID">ID of the KPI instance.</param>
 <param name="milestoneCache">Dictionary containing cached lists of KPI milestones.</param>
 <returns>List of milestones for the KPI instance.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.KpiHelper.UserHasRightsToKpiForContextRecordType(System.Data.SqlClient.SqlConnection,System.Guid,System.String)">
 <summary>
 Checks to see if the user has rights to at least one KPI for a given context record type.
 </summary>
 <param name="conn">An open connection to the database.</param>
 <param name="appUserID">ID of the current application user.</param>
 <param name="contextRecordType">Context record type.</param>
 <returns>Flag indicating whether the user has rights to any existing KPIs for the context record type.</returns>
 <remarks>
 Note that this method should only be used to determine whether a feature is enabled and should not be used to enforce security.  The feature being enabled should
 still be responsible for checking security where appropriate.
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.KpiHelper.UserHasRightsToKpiInstanceForContextRecord(System.Data.SqlClient.SqlConnection,System.Guid,System.String,System.String)">
 <summary>
 Checks to see if the user has rights to at least one KPI instance for a given context record.
 </summary>
 <param name="conn">An open connection to the database.</param>
 <param name="appUserID">ID of the current application user.</param>
 <param name="contextRecordType">Context record type.</param>
 <param name="contextRecordID">Context record's ID.</param>
 <returns>Flag indicating whether the user has rights to any existing KPI instances for the context record.</returns>
 <remarks>
 Note that this method should only be used to determine whether a feature is enabled and should not be used to enforce security.  The feature being enabled should
 still be responsible for checking security where appropriate.
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.KpiHelper.FormatGoalValue(Blackbaud.AppFx.XmlTypes.KpiGoalType,System.Decimal,System.Int32,Blackbaud.AppFx.CurrencyFormat)">
 <summary>
 Formats a value for a KPI. This function modifies the DecimalDigits property of the currency parameter.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.KpiInstanceDeleteRequest">
 <summary>
 Deletes a KPI instance from the database.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.KpiInstanceDeleteReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.KpiInstanceDeleteRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.KpiInstanceDeleteProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.KpiInstanceDeleteRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.KpiInstanceGetIDByNameRequest">
 <summary>
 Returns the KPI instance system ID given the name
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.KpiInstanceGetIDByNameReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.KpiInstanceGetIDByNameRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.KpiInstanceGetIDByNameProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.KpiInstanceGetIDByNameRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.KpiInstanceGetListByKpiCatalogIDRequest">
 <summary>
 Returns a list of KPI instances for a given KPI catalog item.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.KpiInstanceGetListByKpiCatalogIDReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.KpiInstanceGetListByKpiCatalogIDRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.KpiInstanceGetListByKpiCatalogIDProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.KpiInstanceGetListByKpiCatalogIDRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.KpiInstanceGetMetaDataRequest">
 <summary>
 Retrieves a KPI instance from the database.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.KpiInstanceGetMetaDataReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.KpiInstanceGetMetaDataRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.KpiInstanceGetMetaDataProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.KpiInstanceGetMetaDataRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.KpiInstanceGetStatusRequest">
 <summary>
 Gets the value along with the variance, percent of goal, etc. for a KPI instance based on the provided KPI instance ID.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.KpiInstanceGetStatusReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.KpiInstanceGetStatusRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.KpiInstanceGetStatusProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.KpiInstanceGetStatusRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.KpiInstanceGetTreeRequest">
 <summary>
 Returns a list of KPI instances to be displayed in a tree view.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.KpiInstanceGetTreeReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.KpiInstanceGetTreeRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.KpiInstanceGetTreeProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.KpiInstanceGetTreeRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.KpiInstanceSaveRequest">
 <summary>
 Saves a KPI instance to the database.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.KpiInstanceSaveReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.KpiInstanceSaveRequest" />.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.KpiInstanceSaveReply.AddedByID">
 <summary>
 ID of the user who added the KPI instance record to the database.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.KpiInstanceSaveReply.AddedByUserName">
 <summary>
 User name of the user who added the KPI instance record to the database.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.KpiInstanceSaveReply.ChangedByID">
 <summary>
 ID of the user who last made a change to the KPI instance record in the database.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.KpiInstanceSaveReply.ChangedByUserName">
 <summary>
 User name of the user who last made a change to the KPI instance record in the database.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.KpiInstanceSaveReply.DateAdded">
 <summary>
 Date the KPI instance record was added to the database.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.KpiInstanceSaveReply.DateChanged">
 <summary>
 Date the query record was last changed in the database.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.KpiInstanceSaveProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.KpiInstanceSaveRequest" />
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.RecordSecurity.RecordSecurityManager.RecordSecurityInEffect">
 <summary>
 Returns true if Record Secuirty is enabled and 1 or more security services are configured and the current user is not a SysAdmin.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.RecordSecurity.RecordSecurityModuleBase">
 <summary>
 Optional base class to inherit from that implements IHTTPModule and IRecordSecurityModule
 </summary>
 <remarks>You do not have to inherit from this class to implement IRecordSecurityModule.  This is just for convenience if you don't care about the IHTTPModule methods.</remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.RecordSecurity.UserGrantedFormArgs.IsRecordTypeAddForm(System.String,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns true if the formID is for an Add Form of the Record Type passed in.
 </summary>
 <param name="recordType"></param>
 <param name="rc"></param>
 <returns></returns>
 <remarks>This is useful to determine if permission should be granted to an add form.
 Typically if the add form is adding the type of record you are securing with record level securtiy you would allow this operation always 
 (since you have no data to make a decision on otherwise).  
 If the add form is not for the record type you are security it may be for a child record in which case you can look at the parent record to make a security decision.
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.RequestProcessorBase.InitAndValidateArgs">
 <summary>
 Put request validation code or initialization code here.
 </summary>
 <remarks>This method will always be called before CheckSecurity or ProcessRequest</remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.RequestContext">
 <summary>
 Encapsulates information about a request and provides access to server utility classes and properties.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.RequestContext.Current">
 <summary>
 Gets the RequestContext object for the current request
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.RequestContext.#ctor(System.String,System.Web.HttpContext,Blackbaud.AppFx.Server.ServiceRequest)">
 <summary>
 Uses the session information for an existing session rather than rely on the HTTContext.User information for authentication
 </summary>
 <param name="sessionKey">A session key that is valid for an already established session that is current</param>
 <param name="context">A System.Web.HTTPContext object that is current</param>
 <param name="rootRequest">A ServiceRequest object that is the root cause for this request</param>
 <remarks>This constructor can be used from an HTTPHandler that is set to allow anonymous authentication
 in order to pick up the current user from an existing session.  This is appropriate for scenarios where the client
 code cannot specify credentials for the request.  For example, when using an Excelsius dashboard it is the 
 Flash runtime that makes the request, and there is not currently a mechanism to specify credentials.</remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.RequestContext.#ctor(Blackbaud.AppFx.Server.ServiceRequest,System.Web.HttpContext,System.Guid)">
 <summary>
 Use this constructor to obtain a RequestContext where the AppUserID will be forced to a specific user in the database.
 </summary>
 <param name="rootRequest">A ServiceRequest that will be processed during this HTTP request</param>
 <param name="context">The current HttpContext</param>
 <param name="externallyAuthenticatedAppUserID">The ID of a valid user in the APPUSER table.  WARNING! See the remarks for the responsibilities of callers with regard to this parameter.</param>
 <remarks>WARNING!!! Since you are passing in the AppUserID you bear the burden of performing the authentication.
 The help page uses this constructor because it allows anonymous access, but that page only performs read-only access to page 
 metadata so there is no security concern.
 If you use this constructor from an HTTPHandler or aspx page then you have the responsibility to authenticate that the principle making
 the request can act as the authenticateAppUserID that you supply.  Thus you are taking on the role of performing the authentication, which should be done with extreme care.</remarks>
</member>
<member name="P:Blackbaud.AppFx.Server.RequestContext.RootRequest">
 <summary>
 Gets the original request object as sent from the client
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.RequestContext.HasSessionState">
 <summary>
 Indicates if the Client Request used a SessionKey to establish a stateful Session
 </summary>
 <returns>True if the client has established a session using SessionStartRequest</returns>
 <remarks>As an optimization, a client application can establish a stateful session using the SessionStartRequest. 
 This is not required but allows caching of certain application wide settings.  This property indicates if the current
 request is in the context of a session that was started with a SessionStartRequest.</remarks>
</member>
<member name="P:Blackbaud.AppFx.Server.RequestContext.Items">
 <summary>
 Gets a key-value collection that can be used to organize and share data during the processing of a request.
 </summary>
 <value>An System.Collections.IDictionary key/value collection that provides access to an individual value in the collection by a specified key.</value>
</member>
<member name="M:Blackbaud.AppFx.Server.RequestContext.GetChangeAgentID">
 <summary>
 Gets the dbo.CHANGEAGENT.ID for the current user/app using the default processname.
 </summary>
 <returns>The CHANGEAGENT.ID for the current user/app</returns>
 <remarks>This will create a new row in the dbo.CHANGEAGENT table if one does not exist for this user/app.</remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.RequestContext.GetChangeAgentID(System.String)">
 <summary>
 Gets the dbo.CHANGEAGENT.ID for the current user/app using the given processname.
 </summary>
 <returns>The CHANGEAGENT.ID for the current user/app and the given processname </returns>
 <remarks>This will create a new row in the dbo.CHANGEAGENT table if one does not exist for this user/app/processname</remarks>
</member>
<member name="P:Blackbaud.AppFx.Server.RequestContext.ClientAppName">
 <summary>
 The name of the application using the service as provided by the client application.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.RequestContext.AppDBConnectionOptions.ConnectionContext">
 <summary>
 Determines the application name that will be associated with the connection string
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Blackbaud.AppFx.Server.RequestContext.AppDBConnectionOptions.MultipleActiveResultSets">
 <summary>
 Indicates whether multiple active result sets are allowed by the connection created by using this connection string
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Blackbaud.AppFx.Server.RequestContext.AppDBName">
 <summary>
 Returns the database name for the application database.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.RequestContext.AppDBConnectionString">
 <summary>
 Gets the connection string for the database the client chose for this session.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.RequestContext.AppDBConnectionString(System.Boolean)">
 <summary>
 Gets the connection string for the database the client chose for this session.
 </summary>
 <param name="asyncMode">
 OBSOLETE: This parameter is ignored as of .NET Framework 4.5.
 See https://msdn.microsoft.com/en-us/library/system.data.sqlclient.sqlconnectionstringbuilder.asynchronousprocessing(v=vs.110).aspx
 </param>
</member>
<member name="M:Blackbaud.AppFx.Server.RequestContext.AppDBConnectionString(Blackbaud.AppFx.Server.RequestContext.ConnectionContext)">
 <summary>
 Gets the connection string for the database the client chose for this session.
 </summary>
 <param name="appContext">Determines the application name that will be associated with the connection string</param>
</member>
<member name="M:Blackbaud.AppFx.Server.RequestContext.AppDBConnectionString(System.Boolean,Blackbaud.AppFx.Server.RequestContext.ConnectionContext)">
 <summary>
 Gets the connection string for the database the client chose for this session.
 </summary>
 <param name="asyncMode">
 OBSOLETE: This parameter is ignored as of .NET Framework 4.5.
 See https://msdn.microsoft.com/en-us/library/system.data.sqlclient.sqlconnectionstringbuilder.asynchronousprocessing(v=vs.110).aspx
 </param>
 <param name="appContext">Determines the application name that will be associated with the connection string</param>
</member>
<member name="M:Blackbaud.AppFx.Server.RequestContext.AppDBConnectionString(Blackbaud.AppFx.Server.RequestContext.AppDBConnectionOptions)">
 <summary>
 Gets the connection string for the database the client chose for this session.
 </summary>
 <param name="options">Determines connection string properties based on options provided</param>
</member>
<member name="M:Blackbaud.AppFx.Server.RequestContext.OpenAppDBConnection">
 <summary>
 Opens and returns a new SQLConnection for the database specified by the client session.
 </summary>
 <remarks>Will be automatically closed at the end of the request processing</remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.RequestContext.OpenAppDBConnection(Blackbaud.AppFx.Server.RequestContext.ConnectionContext)">
 <summary>
 Opens and returns a new SQLConnection for the database specified by the client session.
 </summary>
 <param name="appContext">Determines the application name that will be associated with the connection</param>
 <remarks>Will be automatically closed at the end of the request processing</remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.RequestContext.OpenAppDBConnection(System.Boolean)">
 <summary>
 Opens and returns a new SQLConnection for the database specified by the client session.
 </summary>
 <param name="asyncMode">
 OBSOLETE: This parameter is ignored as of .NET Framework 4.5.
 See https://msdn.microsoft.com/en-us/library/system.data.sqlclient.sqlconnectionstringbuilder.asynchronousprocessing(v=vs.110).aspx
 </param>
 <remarks>Will be automatically closed at the end of the request processing</remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.RequestContext.OpenAppDBConnection(System.Boolean,Blackbaud.AppFx.Server.RequestContext.ConnectionContext)">
 <summary>
 Opens and returns a new SQLConnection for the database specified by the client session.
 </summary>
 <param name="asyncMode">
 OBSOLETE: This parameter is ignored as of .NET Framework 4.5.
 See https://msdn.microsoft.com/en-us/library/system.data.sqlclient.sqlconnectionstringbuilder.asynchronousprocessing(v=vs.110).aspx
 </param>
 <param name="appContext">Determines the application name that will be associated with the connection</param>
 <remarks>Will be automatically closed at the end of the request processing</remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.RequestContext.OpenAppDBConnection(Blackbaud.AppFx.Server.RequestContext.AppDBConnectionOptions)">
 <summary>
 Opens and returns a new SQLConnection for the database specified by the client session.
 </summary>
 <param name="options">Determines connection string properties based on options provided</param>
 <remarks>Will be automatically closed at the end of the request processing</remarks>
</member>
<member name="P:Blackbaud.AppFx.Server.RequestContext.SharedDBConnection">
 <summary>
 This connection should only be used by tight platform code (thus it is friend) that is very careful to never have
 more than one command executing (for example always use SPWrap).
 
 It exists as an optimization so that during a single request a single connection can be used.
 Even though .Net automatically pools connections, there is still some overhead in reapeatedly calling OpenAppDBConnection.
 
 This connection object should never be used for during long running requests where no db activity happens (for example a business process)
 but instead the pattern of acquire/use/release should be followed.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.RequestContext.AppDBTransactionConnection">
 <summary>
 Returns the connection to use for transacted database operations.
 </summary>
 <remarks>Nested operations can use this property to allow transacted operations.</remarks>
</member>
<member name="P:Blackbaud.AppFx.Server.RequestContext.AppDBTransactionConnection(Blackbaud.AppFx.Server.RequestContext.ConnectionContext)">
 <summary>
 Returns the connection to use for transacted database operations.
 </summary>
 <param name="appContext">Determines the application name that will be associated with the connection</param>
 <remarks>Nested operations can use this property to allow transacted operations.</remarks>
</member>
<member name="P:Blackbaud.AppFx.Server.RequestContext.TransactionCount">
 <summary>
 Gets the number of nested transactions currently open on the AppDBTransactionConnection
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.RequestContext.IsTransactionClosed">
 <summary>
 Checks if the current request context transaction connection is closed
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.RequestContext.ResetTransactionConnection">
 <summary>
 Resets the current transaction connection by opening a new app db connection
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.RequestContext.TransactionCommit">
 <summary>
 Commits the outermost transaction on the AppDBTransactionConnection
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.RequestContext.TransactionRollback">
 <summary>
 Rollsback the outermost transaction on the AppDBTransactionConnection
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.RequestContext.TransactionBegin">
 <summary>
 Begins a transaction on the AppDBTransactionConnection
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.RequestContext.UpdateBusinessProcessRuntimeInfoTable(System.Data.SqlClient.SqlConnection,System.Guid,System.Guid,System.Guid,Blackbaud.AppFx.Server.BusinessProcessLaunchRequest)">
 <summary>
 For business process requests, update or insert runtime information about the business process and its SPID
 into a table that will be used by the SQL Snap tool to identify business processes associated with connections.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AppUserInfo.WindowsSecurityIdentifierIsValidAppUser(System.Security.Principal.SecurityIdentifier,System.String)">
 <summary>
 Determines if a given Windows Security Identifier maps to a valid application user in the database
 </summary>
 <param name="sid">The Windows Security Identifier to validate</param>
 <param name="databaseName">The database key to validate against</param>
 <returns>True if and only if the Security Identifier maps to a valid application user in the given database</returns>
 <remarks>This function opens a new database connection. The result of the database lookup will be cached for future lookups by other methods in this class.</remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQuery">
 <summary>
 Class that represents an ad-hoc query that a user has defined by selecting any number of <see cref="T:Blackbaud.AppFx.Server.AdHocQuerySelectField"/>,
 <see cref="T:Blackbaud.AppFx.Server.AdHocQueryFilterField"/>, and <see cref="T:Blackbaud.AppFx.Server.AdHocQuerySortField"/> objects. The ad-hoc query
 is then used to return a list of results based on the fields the user has selected.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuery.ID">
 <summary>
 ID of the record in the AdHocQuery table.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuery.RecordType">
 <summary>
 Description of the record type to which the ad-hoc query is associated.
 </summary>
 <remarks>The description is a translation of the <see cref="P:Blackbaud.AppFx.Server.AdHocQuery.RecordTypeID"/> property.</remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuery.CategoryID">
 <summary>
 User-defined category to which the ad-hoc query belongs.
 </summary>
 <remarks>Links to a code table entry</remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuery.DefaultDataFormID">
 <summary>
 ID of the data form in which a record from the ad-hoc query results can be opened
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuery.AddedByID">
 <summary>
 ID of the user who added the ad-hoc query record to the database
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuery.AddedByUserName">
 <summary>
 User name of the user who added the ad-hoc query record to the database
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuery.ChangedByID">
 <summary>
 ID of the user who last made a change to the ad-hoc query record in the database
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuery.ChangedByUserName">
 <summary>
 User name of the user who last made a change to the ad-hoc query record in the database
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuery.DateAdded">
 <summary>
 Date the ad-hoc query record was added to the database
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuery.DateChanged">
 <summary>
 Date the query record was last changed in the database
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuery.QueryView">
 <summary>
 The <see cref="F:Blackbaud.AppFx.Server.AdHocQuery.QueryView"/> on which the ad-hoc query is based.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuery.Name">
 <summary>
 User-defined name of the ad-hoc query.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuery.Description">
 <summary>
 User-defined description of the ad-hoc query.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuery.SiteID">
 <summary>
 User-defined site associated with the ad-hoc query.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuery.SelectFields">
 <summary>
 Collection of <see cref="T:Blackbaud.AppFx.Server.AdHocQuerySelectField"/> objects which the user defined in the ad-hoc query.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuery.FilterFields">
 <summary>
 Collection of <see cref="T:Blackbaud.AppFx.Server.AdHocQueryFilterField"/> objects which the user defined in the ad-hoc query.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuery.SortFields">
 <summary>
 Collection of <see cref="T:Blackbaud.AppFx.Server.AdHocQuerySortField"/> objects which the user defined in the ad-hoc query.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuery.GroupFilterFields">
 <summary>
 Collection of <see cref="T:Blackbaud.AppFx.Server.AdHocQueryGroupFilterField"/> objects which the user defined in the ad-hoc query.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuery.HasIDSet">
 <summary>
 Boolean value representing whether the ad-hoc query has an ID set defined for its results.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuery.IDSetInfo">
 <summary>
 <see cref="T:Blackbaud.AppFx.Server.AdHocQueryFieldIDSetInfo"/> object which holds information about the ID set which is associated
 with the ad-hoc query.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuery.HasMissingViewFields">
 <summary>
 Indicates whether the ad-hoc query has fields that are not present in the query view on which it is based.  This is possible
 if a user saves an ad-hoc query, then alters and reloads the query view spec.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuery.Owner">
 <summary>
 User name of the application user who created the ad-hoc query.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuery.OwnerID">
 <summary>
 ID of the application user who created the ad-hoc query.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuery.OthersCanModify">
 <summary>
 Indicates whether another application user can modify this ad-hoc query.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuery.FolderID">
 <summary>
 Folder that contains the ad-hoc query.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuery.SuppressDuplicateRows">
 <summary>
 Indicates whether the user wants duplicate rows in the query suppressed.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuery.ChangedByCulture">
 <summary>
 The culture where the AdHocQuery was last modified.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuery.RunSecurityLevel">
 <summary>
 Indiciates whether all roles or selected roles can run this query.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuery.EditSecurityLevel">
 <summary>
 Indiciates whether all roles or selected roles can edit this query.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.AdHocQuery.RecordTypeID">
 <summary>
 ID of the record type to which the ad-hoc query is associated.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQuery.FindSelectFieldForSortField(Blackbaud.AppFx.Server.AdHocQuerySortField)">
 <summary>
 Finds the select field that corresponds to a given sort field.
 </summary>
 <param name="sortField">Sort field.</param>
 <returns>Corresponding select field.</returns>
 <remarks>
 This is method is currently only used to validate a sort field for a ad-hoc query.
 <seealso cref="T:Blackbaud.AppFx.Server.AdHocQuerySelectField"/>
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQuery.SelectFieldsRequireGrouping">
 <summary>
 Checks the select fields of the ad-hoc query to see if they require grouping.  This is determined by checking to see if the ad-hoc query's 
 select fields contain both an aggregrate and non-aggregate query field.
 </summary>
 <returns>Boolean value.</returns>
 <remarks>
 <seealso cref="T:Blackbaud.AppFx.Server.AdHocQuerySelectField"/>
 <seealso cref="T:Blackbaud.AppFx.Server.AggregateType"/>
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQuery.SelectFieldsHaveAggregate">
 <summary>
 Checks the fields of the ad-hoc query to see if it contains an aggregate field.
 </summary>
 <returns>Boolean value.</returns>
 <remarks>
 <seealso cref="T:Blackbaud.AppFx.Server.AdHocQuerySelectField"/>
 <seealso cref="T:Blackbaud.AppFx.Server.AggregateType"/>
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQuery.SelectFieldsContainPrimaryKey">
 <summary>
 Determines whether the ad-hoc query's select fields contains the primary key of its root query view.
 </summary>
 <returns>True/false value.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQuery.SplitQuerySqlOnWithClause(System.String,System.String@,System.String@)">
 <summary>
 Splits out the WITH clause and the body of the query's SQL statement where applicable.  If the SQL contains no WITH clause, the original SQL
 statement is returned by the body parameter.
 </summary>
 <param name="sql">Ad-hoc query SQL.</param>
 <param name="withClause">WITH clause of the SQL statement after the split.</param>
 <param name="body">Body of the SQL statement after the split (represents the original SQL statement if no WITH block exists).</param>
 <returns>Flag indicating whether the WITH block exists in the original SQL statement.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQuery.HasEncryptedFields">
 <summary>
 Checks the fields of the ad-hoc query to see if it contains an encrypted field.
 </summary>
 <returns>Boolean value.</returns>
 MDC 2008-11-05 - Support for encrypted fields in Query
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQueryDeleteRequest">
 <summary>
 Deletes a Query from the Ad-Hoc Query table
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQueryDeleteReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.AdHocQueryDeleteRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQueryDeleteProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.AdHocQueryDeleteRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQueryFilterField">
 <summary>
 Represents a user-selected field in an ad-hoc query by which a result set will be filtered.
 </summary>
 <remarks>
 <seealso cref="T:Blackbaud.AppFx.Server.AdHocQuerySelectField" />
 <seealso cref="T:Blackbaud.AppFx.Server.QueryViewField" />
 <seealso cref="T:Blackbaud.AppFx.Server.QueryOperatorType" />
 </remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryFilterField.ObjectName">
 <summary>
 Name of the query view database object to which the field belongs.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryFilterField.ColumnName">
 <summary>
 Name of the column in the view or table-valued function which the field represents.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryFilterField.ParentPath">
 <summary>
 View path of the parent query view.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryFilterField.DisplayPath">
 <summary>
 Display path of the parent query view.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryFilterField.IsIDSetField">
 <summary>
 Indicates whether the field represents an ID set.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryFilterField.IDSetFieldInfo">
 <summary>
 Information about the ID set which the field represents.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryFilterField.FilterOperator">
 <summary>
 Operator which will be applied to the field when the query results are filtered.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryFilterField.CompareType">
 <summary>
 Determines how the field will be used in conjunction with other filter fields.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryFilterField.DateFilterTypes">
 <summary>
 Determines how to filter the date field.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryFilterField.FuzzyDateFilterTypes">
 <summary>
 Determines how to filter the fuzzy date field.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryFilterField.MonthDayFilterTypes">
 <summary>
 Determines how to filter the month/day field.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryFilterField.UseLeftParenthesis">
 <summary>
 Used by <see cref="T:Blackbaud.AppFx.Server.AdHocQuerySqlBuilder" /> for grouping filter fields.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryFilterField.UseRightParenthesis">
 <summary>
 Used by <see cref="T:Blackbaud.AppFx.Server.AdHocQuerySqlBuilder" /> for grouping filter fields.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryFilterField.LeftParenthesisCount">
 <summary>
 Number of left parentheses used in the field.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryFilterField.RightParenthesisCount">
 <summary>
 Number of left parentheses used in the field.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryFilterField.Values">
 <summary>
 List of values by which the field will be filtered.  The number of items allowed in the list will be determined by the
 <see cref="F:Blackbaud.AppFx.Server.AdHocQueryFilterField.FilterOperator" /> of the filter field.
 </summary>
 <remarks>
 <seealso cref="M:Blackbaud.AppFx.Server.AdHocQueryFilterField.ValidateNumFilterValues" />
 </remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryFilterField.TranslatedValues">
 <summary>
 Represents a list of translated values.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryFilterField.IncludeBlanks">
 <summary>
 Indicates whether <see cref="T:Blackbaud.AppFx.Server.AdHocQuerySqlBuilder" /> should include blanks for the filter field.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryFilterField.ValueIsOutputField">
 <summary>
 Indicates if the filter value is another output field in the query.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryFilterField.MeetsAllCriteria">
 <summary>
 Indicates whether <see cref="T:Blackbaud.AppFx.Server.AdHocQuerySqlBuilder" /> should verify each record meets all criteria for the filter field.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryFilterField.MeetsNoneOfTheCriteria">
 <summary>
 Indicates whether <see cref="T:Blackbaud.AppFx.Server.AdHocQuerySqlBuilder" /> should verify each record meets none of the criteria for the filter field not one of.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryFilterField.MeetsNoneOfTheCriteriaNotEqualTo">
 <summary>
 Indicates whether <see cref="T:Blackbaud.AppFx.Server.AdHocQuerySqlBuilder" /> should verify each record meets none of the criteria for the filter field not equal to.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryFilterField.IncludeCurrentNode">
 <summary>
 Indicates whether <see cref="T:Blackbaud.AppFx.Server.AdHocQuerySqlBuilder" /> should include the current node when filtering a hierarchy.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryFilterField.DataMartLastRefresh">
 <summary>
 The date the mart was last refreshed.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.AdHocQueryFilterField.QueryField">
 <summary>
 <see cref="T:Blackbaud.AppFx.Server.QueryViewField" /> on which the filter field is based.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.AdHocQueryFilterField.QueryNode">
 <summary>
 <see cref="T:Blackbaud.AppFx.Server.QueryViewTreeNode" /> which corresponds to the filter field.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.AdHocQueryFilterField.DataType">
 <summary>
 The <see cref="T:Blackbaud.AppFx.XmlTypes.FormFieldDataType" /> of the filter field.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.AdHocQueryFilterField.IsEncryptedField">
 <summary>
 Indicates whether the field is Encrypted.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQueryFilterField.Validate(Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Validates the filter field's properties for allowed values.
 </summary>
 <param name="context">The request context from which this method is being called.</param>
 <remarks>
 <seealso cref="M:Blackbaud.AppFx.Server.AdHocQueryFilterField.ValidateNumFilterValues" />
 <seealso cref="M:Blackbaud.AppFx.Server.AdHocQueryFilterField.GetLookupValue(Blackbaud.AppFx.Server.RequestContext,Blackbaud.AppFx.XmlTypes.QueryViewLookupInfo,System.Object)" />
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQueryFilterField.ValidateQueryLookupFields">
 <summary>
 Validates the filter field properties that are required to map this FilterField to a QueryField. 
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQueryFilterField.FixCodeTableValuesIfNecessary(Blackbaud.AppFx.Server.RequestContext,System.String)">
 <summary>
 Fixes code table filter values by replacing code labels with their matching guids.
 </summary>
 <remarks>Some queries in client data have been found with labels for values rather than guids. They came
 from the user-defined datalist creator, which uses adhoc query, and the datalists were created in 2009.
 It is unclear how they got in that state given the consistent validation through the history of this file,
 but I'd expect this sub to be very rarely needed. If found this while working on bug 206811.
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQueryFilterField.LoadLookupTranslations(Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Loads a list of translations for lookup entries available for the filter field.
 </summary>
 <param name="context">The request context from which this method is being called.</param>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQueryFilterField.IsValidValueForType(Blackbaud.AppFx.XmlTypes.FormFieldDataType,System.String@,Blackbaud.AppFx.Server.AggregateType,System.Globalization.CultureInfo)">
 <summary>
 Determines whether the value provided by the user is an appropriate type for the filter field.
 </summary>
 <param name="dataType">Data type of the filter field.</param>
 <param name="fieldValue">Value of the filter field.</param>
 <param name="filterAggregate">Aggregate type of the filter field.</param>
 <returns>True/false value indicating whether the filter field value is valid for its data type.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQueryFilterField.GetLookupValue(Blackbaud.AppFx.Server.RequestContext,Blackbaud.AppFx.XmlTypes.QueryViewLookupInfo,System.Object)">
 <summary>
 Gets a description which corresponds to a lookup value.
 </summary>
 <param name="context">The request context from which this method is being called.</param>
 <param name="lookupInfo">Information which determines where the translation comes from.</param>
 <param name="lookupValue">Value which corresonds to the desired description.</param>
 <returns>Description which corresponds to the lookup value.</returns>
 <remarks>
 <seealso cref="M:Blackbaud.AppFx.Server.AdHocQueryFilterField.LoadLookupTranslations(Blackbaud.AppFx.Server.RequestContext)" />
 <seealso cref="M:Blackbaud.AppFx.Server.AdHocQueryFilterField.GetDescriptionForCodeTableEntry(Blackbaud.AppFx.Server.RequestContext,System.String,System.Guid)" />
 <seealso cref="M:Blackbaud.AppFx.Server.AdHocQueryFilterField.GetTranslationForSimpleDataList(Blackbaud.AppFx.Server.RequestContext,Blackbaud.AppFx.XmlTypes.QueryViewLookupInfo,System.String)" />
 <seealso cref="T:Blackbaud.AppFx.XmlTypes.TranslationList" />
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQueryFilterField.GetDescriptionForCodeTableEntry(Blackbaud.AppFx.Server.RequestContext,System.String,System.Guid)">
 <summary>
 Gets a description which corresponds to a code table entry.
 </summary>
 <param name="context">The request context from which this method is being called.</param>
 <param name="codeTableName">Name of the code table to which the value belongs.</param>
 <param name="id">ID of the code table entry.</param>
 <returns>Description of the code table entry.</returns>
 <remarks>
 <seealso cref="T:Blackbaud.AppFx.Server.CodeTableEntryGetDescriptionRequest" />
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQueryFilterField.GetTranslationForSimpleDataList(Blackbaud.AppFx.Server.RequestContext,Blackbaud.AppFx.XmlTypes.QueryViewLookupInfo,System.String)">
 <summary>
 Gets a translation for a field selected from a simple data list using its translation function.
 </summary>
 <param name="context">The request context from which this method is being called.</param>
 <param name="lookupInfo">Lookup information for the query view field.</param>
 <param name="entryValue">The value selected from the simple data list.</param>
 <returns>Translation of the selected value.</returns>
 <remarks>
 <seealso cref="T:Blackbaud.AppFx.XmlTypes.SimpleDataListSpec" />
 <seealso cref="T:Blackbaud.AppFx.Server.SimpleDataListGetTranslationProcessor" />
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQueryFilterField.ValidateNumFilterValues">
 <summary>
 Validates the number of values based on the filter field's <see cref="F:Blackbaud.AppFx.Server.AdHocQueryFilterField.FilterOperator" />.
 </summary>
 <remarks>
 <seealso cref="T:Blackbaud.AppFx.Server.QueryOperatorType" />
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQueryFilterField.OperatorValidForFieldType(Blackbaud.AppFx.Server.QueryOperatorType)">
 <summary>
 Determines if a <see cref="T:Blackbaud.AppFx.Server.QueryOperatorType" /> is valid for the filter field's <see cref="P:Blackbaud.AppFx.Server.AdHocQueryFilterField.DataType" />.
 </summary>
 <param name="operatorType">Operator type to validate.</param>
 <returns>True/false value.</returns>
 <remarks>
 <seealso cref="T:Blackbaud.AppFx.Server.QueryOperatorType" />
 <seealso cref="T:Blackbaud.AppFx.XmlTypes.FormFieldDataType" />
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQueryFilterField.IsValidValueForOutputField(System.String)">
 <summary>
 For filter fields that use output fields as values, this checks whether the output field value is valid.
 </summary>
 <param name="value">The output field value.</param>
 <returns>True if the output field value is valid.</returns>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQueryGetDefinitionRequest">
 <summary>
 Returns the query definition and a list of query fields used for the given ID
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQueryGetDefinitionReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.AdHocQueryGetDefinitionRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQueryGetDefinitionProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.AdHocQueryGetDefinitionRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQueryGetIDByNameRequest">
 <summary>
 Returns the query system ID given the name
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQueryGetIDByNameReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.AdHocQueryGetIDByNameRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQueryGetIDByNameProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.AdHocQueryGetIDByNameRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQueryProcessRequest">
 <summary>
 Returns the results for the given query ID or query definition
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryProcessRequest.PkColumnName">
 <summary>
 The name of the column added to the SQL statement which represents the statement's primary key field (if any).
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryProcessRequest.SelectFields">
 <summary>
 Collection of <see cref="T:Blackbaud.AppFx.Server.AdHocQuerySelectField"/> objects which the user defined in the ad-hoc query.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryProcessRequest.FilterFields">
 <summary>
 Collection of <see cref="T:Blackbaud.AppFx.Server.AdHocQueryFilterField"/> objects which the user defined in the ad-hoc query.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryProcessRequest.SortFields">
 <summary>
 Collection of <see cref="T:Blackbaud.AppFx.Server.AdHocQuerySortField"/> objects which the user defined in the ad-hoc query.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryProcessRequest.GroupFilterFields">
 <summary>
 Collection of <see cref="T:Blackbaud.AppFx.Server.AdHocQueryGroupFilterField"/> objects which the user defined in the ad-hoc query.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryProcessRequest.DoReturnData">
 <summary>
 Set to false if you only want the sql generated and the field list to be returned
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryProcessRequest.SuppressDuplicateRows">
 <summary>
 Set to true if you only want the distinct rows returned from the server
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryProcessRequest.BypassRecordCount">
 <summary>
 Set to false if you want the actual record count returned for queries with a result set greater than MaxRecords
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryProcessRequest.ContextRecordID">
 <summary>
 The ID to pass to the context ID parameter when the query view is a table-valued function query view.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryProcessRequest.CancelID">
 <summary>
 Optional. If you intend to cancel this request at a future point, you can provide a unique ID which you will use to identify this request for cancellation.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryProcessRequest.Start">
 <summary>
 Optional.  When paging the results, this should be the (0-based) start index of the data window.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryProcessRequest.Limit">
 <summary>
 Optional.  When paging the results, this should be the number of records to return.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryProcessRequest.SearchText">
 <summary>
 Optional.  When specified, all filter fields will be added for all string output fields with a LIKE search on this text.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryProcessRequest.IncludeSecuritySQL">
 <summary>
 Set to true if you want the individual security clauses, used to determine record access security, returned separately with the reply. 
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryProcessRequest.ProcessForListBuilder">
 <summary>
 Set to true if you want to process the request as a listbuilder, which may perform specific query optimizations or return results which would only be suitable for display in a list builder.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQueryProcessRequest.OverrideMaxRecordLimit">
 <summary>
 Allows code with a direct reference to <see cref="N:Blackbaud.AppFx.Server" /> (as opposed to client-side code calling a SOAP endpoint)
 to override the maximum record count defined by <see cref="F:Blackbaud.AppFx.Server.AdHocQueryAppSettings.AdHocQueryMaxRecordsMaximum" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQueryProcessReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.AdHocQueryProcessRequest" />.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryProcessReply.Sql">
 <summary>
 SQL statement that was used to generate the results
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryProcessReply.EncryptedSql">
 <summary>
 SQL statement that was used to generate the results
 this property added to create encrypted sql 
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryProcessReply.SecuritySql">
 <summary>
 Security SQL clauses that were used with the ad-hoc query
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryProcessReply.RecordTypeID">
 <summary>
 The RecordType associated with the ad-hoc query
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryProcessReply.Output">
 <summary>
 Generic output containing metadata and values for ad-hoc query process
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryProcessReply.HasEncryptedFields">
 <summary>
 Flag for encrypted fields to include in the ad-hoc query process reply
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryProcessReply.MartKey">
 <summary>
 The data mart descriptor defined in the root query view spec
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQueryProcessReply.QueryWasCancelled">
 <summary>
 Indicates that the query request was cancelled before it finished processing
 </summary>
 <remarks></remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQueryProcessProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.AdHocQueryProcessRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQuerySaveRequest">
 <summary>
 Validates and saves a query definition object to the database
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQuerySaveReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.AdHocQuerySaveRequest" />.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuerySaveReply.AdHocQueryID">
 <summary>
 System ID of the ad-hoc query.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuerySaveReply.Owner">
 <summary>
 User name of the application user who created the ad-hoc query.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuerySaveReply.OwnerID">
 <summary>
 ID of the application user who created the ad-hoc query.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuerySaveReply.OthersCanModify">
 <summary>
 Indicates whether another application user can modify this ad-hoc query.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuerySaveReply.AddedByID">
 <summary>
 ID of the user who added the ad-hoc query record to the database
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuerySaveReply.AddedByUserName">
 <summary>
 User name of the user who added the ad-hoc query record to the database
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuerySaveReply.ChangedByID">
 <summary>
 ID of the user who last made a change to the ad-hoc query record in the database
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuerySaveReply.ChangedByUserName">
 <summary>
 User name of the user who last made a change to the ad-hoc query record in the database
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuerySaveReply.DateAdded">
 <summary>
 Date the ad-hoc query record was added to the database
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuerySaveReply.DateChanged">
 <summary>
 Date the query record was last changed in the database
 </summary>
 <remarks></remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQuerySaveProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.AdHocQuerySaveRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQuerySelectField">
 <summary>
 Represents a field that will be output when an ad-hoc query is processed.
 </summary>
 <remarks>
 <seealso cref="T:Blackbaud.AppFx.Server.QueryViewField"/>
 </remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuerySelectField.ObjectName">
 <summary>
 Name of the query view database object to which the field belongs.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuerySelectField.ColumnName">
 <summary>
 Name of the column in the view or table-valued function which the field represents.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuerySelectField.ParentPath">
 <summary>
 View path of the parent query view.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuerySelectField.DisplayPath">
 <summary>
 Display path of the parent query view.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuerySelectField.AliasName">
 <summary>
 Name as it will be displayed in the ad-hoc query output.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuerySelectField.IsIDSetField">
 <summary>
 Indicates whether the field represents an ID set.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuerySelectField.IDSetFieldInfo">
 <summary>
 Information about the ID set which the field represents.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQuerySelectField.ComparisonOperator">
 <summary>
 Valid comparison operators for the <see cref="F:Blackbaud.AppFx.Server.AdHocQuerySelectField.DataListFilterOperator"/>.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuerySelectField.DataListFilterOperator">
 <summary>
 Comparison operator used when defining field as a filter parameter for a DataList.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuerySelectField.SmartQueryFilterOperator">
 <summary>
 Comparison operator used when defining field as a filter parameter for a Smart Query.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuerySelectField.IsHidden">
 <summary>
 Indicates whether the select field is hidden.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.AdHocQuerySelectField._displayName">
 <summary>
 Returns the display name of the select field.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.AdHocQuerySelectField.DataType">
 <summary>
 Data type of the field.  When this field has an aggregate type of <see cref="F:Blackbaud.AppFx.Server.AggregateType.Count"/>, its data type will always be
 <see cref="F:Blackbaud.AppFx.XmlTypes.FormFieldDataType.Integer"/>; otherwise, its data type will be that of the underlying query view field.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.AdHocQuerySelectField.IsEncryptedField">
 <summary>
 Indicates whether the field is Encrypted.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.AdHocQuerySelectField.AllowMonthDayOnFuzzyDate">
 <summary>
 Indicates a fuzzy date field allows MonthDay values.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.AdHocQuerySelectField.QueryField">
 <summary>
 Field in the ad-hoc query's query view which corresponds to this ad-hoc query field.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.AdHocQuerySelectField.QueryNode">
 <summary>
 Node in the ad-hoc query to which this select field belongs.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQuerySelectField.GetDisplayName(System.Boolean)">
 <summary>
 Takes into account the field's alias name, aggregate type, and ID set info, and returns the appropriate name for display.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQuerySelectField.GetUniqueName">
 <summary>
 Builds a unique name for this select field.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQuerySelectField.GetGroupingOperator(Blackbaud.AppFx.Server.AggregateType)">
 <summary>
 Returns the SQL function name that corresponds to the field's aggregate type.
 </summary>
 <param name="fieldAggregate">Aggregate type.</param>
 <returns>SQL function name.</returns>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQuerySelectField.Validate">
 <summary>
 Validates the ad-hoc query field's properties.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQuerySelectField.Validate(System.Boolean)">
 <summary>
 Validates the ad-hoc query field's properties, with the option to also validate its underlying query view field.
 </summary>
 <param name="validateQueryField">Flag indicating whether to validate the field's underlying query view field.</param>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQuerySelectField.GetAggregateDescription(Blackbaud.AppFx.Server.AggregateType)">
 <summary>
 Returns a user-friendly description of the ad-hoc query field's aggregate type.
 </summary>
 <param name="aggregateType">Aggregate type.</param>
 <returns>User-friendly description.</returns>
</member>
<member name="T:Blackbaud.AppFx.Server.AdHocQuerySqlBuilder">
 <summary>
 Class which interprets an ad-hoc query's select fields, filter fields, sort fields, and group filter fields, and creates a SQL statement
 based on those fields and the query view on which the ad-hoc query is based.
 </summary>
 <remarks>
 <see cref="T:Blackbaud.AppFx.Server.AdHocQuery"/>
 <see cref="T:Blackbaud.AppFx.Server.AdHocQuerySelectField"/>
 <see cref="T:Blackbaud.AppFx.Server.AdHocQueryFilterField"/>
 <see cref="T:Blackbaud.AppFx.Server.AdHocQuerySortField"/>
 <see cref="T:Blackbaud.AppFx.Server.AdHocQueryGroupFilterField"/>
 <see cref="T:Blackbaud.AppFx.Server.QueryView"/>
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQuerySqlBuilder.AdHocQueryDateSql.GetEarliestTimeForSqlDate(System.String)">
 <summary>
 Subtracts hours, minutes, seconds, and milliseconds from a SQL date expression to get the earliest possible time for the given date expression.
 </summary>
 <param name="dateSql">SQL statement representing the date.</param>
 <returns>SQL statement which subtracts the time element of the given date.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQuerySqlBuilder.AdHocQueryDateSql.GetLatestTimeForSqlDate(System.String)">
 <summary>
 Adds the latest possible hours, minutes, seconds, and milliseconds to a SQL date expression to get the latest possible time for the given date expression.
 </summary>
 <param name="dateSql">SQL statement representing the date.</param>
 <returns>SQL statement which adds the latest possible time to the given date.</returns>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQuerySqlBuilder.BuildRowNumberCteBegin(System.String,System.Boolean)">
 <param name="isAdditionalWithClause">Indicates that this is not the first with clause</param>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQuerySqlBuilder.GetFields">
 <summary>
 Loads up the select field info that is returned by the ad-hoc query result reply
 </summary>
 <returns>List of fields</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQuerySqlBuilder.EscapeAlias(System.String)">
 <summary>
 Escape characters used in an alias.
 </summary>
 <remarks>
 Only escape the alias when building the SQL plan.  If ']' exists in the alias,
 it must be escaped or the query will not run- potentially leading to a sql injection attack
 </remarks>
</member>
<member name="P:Blackbaud.AppFx.Server.AdHocQuerySqlBuilder.FilterFieldInfo.FullFieldLookupName">
 <summary>
 Returns the fully qualified name of the filter's field in the SQL being built.
 </summary>
 <returns>
 The fully qualified name of the filter's field in the SQL being built.  If the filter has a rolling date value, the field to be compared to that value
 will be returned (i.e. the field's value in DIM_DATE rather than the field itself).
 </returns>
</member>
<member name="P:Blackbaud.AppFx.Server.AdHocQuerySqlBuilder.FilterFieldInfo.FullFieldLookupName(System.Boolean)">
 <summary>
 Returns the fully qualified name of the filter's field in the SQL being built.
 </summary>
 <param name="forRollingDateFilter">
 Used to indicate whether or not the caller wants the property to return the field to be compared to the rolling date value
 (i.e. the field's value in DIM_DATE rather than the field itself).
 </param>
 <returns>The fully qualified name of the filter's field in the SQL being built.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQuerySqlBuilder.TrimFuzzyDate(System.String)">
 <summary>
 Trims excess zeroes off the end of a fuzzy date so the resulting value can be used with the LIKE keyword in a SQL statement.
 </summary>
 <param name="fuzzyDate">Fuzzy date to trim.</param>
 <returns>
 Four-digit year if the date contains no month and day, four-digit year and two-digit month 
 if the date contains no day, and the full fuzzy date if all three elements are present.
 </returns>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQuerySqlBuilder.FormatOutputFieldForSql(Blackbaud.AppFx.Server.AdHocQueryFilterField,System.String)">
 <summary>
 Formats an output field filter for use in a SQL where clause.
 </summary>
 <param name="filterField">The filter field to build the sql for.</param>
 <param name="filterValue">Value of the filter field.  This value is actually a key to an output field in the sql.</param>
 <returns>Formatted output field.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQuerySqlBuilder.FormatOutputFieldForSql(Blackbaud.AppFx.Server.AdHocQueryFilterField,System.String,System.Boolean)">
 <summary>
 Formats an output field filter for use in a SQL where clause.
 </summary>
 <param name="filterField">The filter field to build the sql for.</param>
 <param name="filterValue">Value of the filter field.  This value is actually a key to an output field in the sql.</param>
 <param name="useLatestTimeForDate">
 If the filter value is a date, this flag will cause the time just before midnight to be appended to the value.
 This is useful when the date is the upper range in a BETWEEN statement.
 </param>
 <returns>Formatted output field.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQuerySqlBuilder.FormatValueForSqlWithCulture(Blackbaud.AppFx.XmlTypes.FormFieldDataType,System.Object,System.Boolean,Blackbaud.AppFx.XmlTypes.FormField)">
 <summary>
 Formats a filter value for use in a SQL where clause using the culture of the underlying adhoc query.
 </summary>
 <param name="dataType">Data type of the filter value.</param>
 <param name="filterValue">Value of the filter field.</param>
 <param name="useLatestTimeForDate">
 If the filter value is a date, this flag will cause the time just before midnight to be appended to the value.
 This is useful when the date is the upper range in a BETWEEN statement.
 </param>
 <param name="formField">The form field from which the value was provided (via query view filter forms).</param>
 <returns>Formatted value.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQuerySqlBuilder.FormatValueForSql(Blackbaud.AppFx.XmlTypes.FormFieldDataType,System.Object,System.Boolean,Blackbaud.AppFx.XmlTypes.FormField)">
 <summary>
 Formats a filter value for use in a SQL where clause.
 </summary>
 <param name="dataType">Data type of the filter value.</param>
 <param name="filterValue">Value of the filter field.</param>
 <param name="useLatestTimeForDate">
 If the filter value is a date, this flag will cause the time just before midnight to be appended to the value.
 This is useful when the date is the upper range in a BETWEEN statement.
 </param>
 <param name="formField">The form field from which the value was provided (via query view filter forms).</param>
 <returns>Formatted value.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQuerySqlBuilder.FormatValueForSql(Blackbaud.AppFx.XmlTypes.FormFieldDataType,System.Object,System.Boolean,Blackbaud.AppFx.XmlTypes.FormField,System.Globalization.CultureInfo)">
 <summary>
 Formats a filter value for use in a SQL where clause.
 </summary>
 <param name="dataType">Data type of the filter value.</param>
 <param name="filterValue">Value of the filter field.</param>
 <param name="useLatestTimeForDate">
 If the filter value is a date, this flag will cause the time just before midnight to be appended to the value.
 This is useful when the date is the upper range in a BETWEEN statement.
 </param>
 <param name="formField">The form field from which the value was provided (via query view filter forms).</param>
 <param name="culture" >The culture information of the filterValue</param>
 <returns>Formatted value.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQuerySqlBuilder.BuildViewJoinList">
 <summary>
 Returns a list of <see cref="T:Blackbaud.AppFx.Server.AdHocQueryViewData"/> objects sorted by parent/child relationship;
 will also sniff out and add missing views to create a valid join path.
 </summary>
 <returns>List of <see cref="T:Blackbaud.AppFx.Server.AdHocQueryViewData"/> objects sorted by parent child relationship.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQuerySqlBuilder.GetFilterFromClause(System.String,Blackbaud.AppFx.Server.QueryViewTreeNode,Blackbaud.AppFx.Server.AdHocQuerySqlBuilder.AdHocQueryFromClauseType)">
 <summary>
 Creates a from clause for a "MeetsNoneOfTheCriteria" filter's subquery.
 </summary>
 <param name="parentPath">The parent path of the filter field being evaluated.</param>
 <param name="queryNode">The query node of the filter field being evaluated.</param>
 <param name="adhocQueryFromType">The type of filter for which the from clause is being built.</param>
 <returns>The from clause needed to evaluate the filter.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQuerySqlBuilder.BuildFilterJoinList(Blackbaud.AppFx.Server.AdHocQueryViewData)">
 <summary>
 Get the join list for one field.
 </summary>
 <returns>List of query views to create a join clause for.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQuerySqlBuilder.BuildViewData(System.String,Blackbaud.AppFx.Server.QueryViewTreeNode,Blackbaud.AppFx.Server.AdHocQuerySqlBuilder.AdHocQueryFromClauseType)">
 <summary>
 Sets the viewData for from a queryNode
 </summary>
 <returns>A viewData with the properties set to the queryNode properties.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQuerySqlBuilder.GetFilterWhereInClause(Blackbaud.AppFx.Server.AdHocQuerySqlBuilder.FilterFieldInfo,System.String)">
 <summary>
 Builds a where clause for sub-sql
 </summary>
 <returns>String used in a where clause for filter criteria.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQuerySqlBuilder.IsRootNode(Blackbaud.AppFx.Server.AdHocQueryFilterField)">
 <summary>
 Determines if the filterfield is in the root node
 </summary>
 <returns>Boolean that is true if the filter field is in the root node.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQuerySqlBuilder.BuildWhereClauseForDateFilter(Blackbaud.AppFx.Server.AdHocQuerySqlBuilder.FilterFieldInfo,Blackbaud.AppFx.Server.AdHocQuerySqlBuilder.AdHocQueryFromClauseType)">
 <summary>
 Builds a where clause for dates using the one of and not one operators
 </summary>
 <returns>String for the where clause using date and the one of and not one of operators.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQuerySqlBuilder.OneToOne(Blackbaud.AppFx.Server.AdHocQueryFilterField)">
 <summary>
 Determines if the filterfield is in a OneToOne relationship
 </summary>
 <returns>Boolean that is true if the filter field is in a OneToOne relationship.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQuerySqlBuilder.GetAggregate(Blackbaud.AppFx.Server.AdHocQueryFilterField)">
 <summary>
 Determines the AggregateType of the filter field
 </summary>
 <returns>AggregateType of the filter field.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQuerySqlBuilder.AppendAggregateToRollingDateFilterForSql(System.String,Blackbaud.AppFx.Server.AggregateType,Blackbaud.AppFx.RollingDate)">
 <summary>
 Surrounds the field name passed in with the appropriate aggregate function required to compare it to the given rolling date value.
 </summary>
 <param name="fieldName">The field name being aggregated.</param>
 <param name="aggregate">The aggregate required by the filter.</param>
 <param name="value">The rolling date value to which the field is to be compared.</param>
 <returns>The field name surrounded with the appropriate aggregate function required to compare it to the given rolling date value.  If no aggregate is called for, the field name is returned unaltered.</returns>
 <remarks>
 This logic is here because, though dates get smaller as you move into the past and larger as you move into the future, their corresponding DAYSSINCE, WEEKSSINCE, MONTHSINCE etc.
 values get larger as you move into the past and smaller as you move into the future.  Thus, the min and max aggregate functions must be reversed when constructing a group filter
 that uses one of these fields.
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQuerySqlBuilder.AppendRollingDateFilterJoins(System.String)">
 <summary>
 Appends all of the joins to DIM_DATE necessary to evaluate all of the rolling date filters in the <see cref="T:Blackbaud.AppFx.Server.AdHocQuery" /> being processed.
 </summary>
 <param name="fromClause">The clause to which the joins should be appended.</param>
 <returns>The clause with the joins appended.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQuerySqlBuilder.AppendRollingDateFilterJoins(System.String,Blackbaud.AppFx.Server.AdHocQueryFilterField[],System.String,System.Collections.Generic.List{System.String})">
 <summary>
 Appends all of the joins to DIM_DATE necessary to evaluate all of the rolling date filters in an array of <see cref="T:Blackbaud.AppFx.Server.AdHocQueryFilterField" />.".
 </summary>
 <param name="fromClause">The clause to which the joins should be appended.</param>
 <param name="filterFields">An array of <see cref="T:Blackbaud.AppFx.Server.AdHocQueryFilterField" />.</param>
 <param name="schema">The schema of the data source being used.</param>
 <param name="joins">A list of join clauses, used to prevent duplicates from being added when processing both FilterFields and GroupFilterFields.</param>
 <returns>The clause with the joins appended.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQuerySqlBuilder.AppendRollingDateFilterJoin(System.String,Blackbaud.AppFx.Server.AdHocQueryFilterField)">
 <summary>
 Appends the join to DIM_DATE necessary to evaluate a rolling date filter.
 </summary>
 <param name="fromClause">The clause to which the joins should be appended.</param>
 <param name="filterField">The filter field for which the clause is being built.</param>
 <returns>The clause with the join appended.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQuerySqlBuilder.BuildRollingDateFilterJoin(Blackbaud.AppFx.Server.AdHocQueryFilterField,System.String)">
 <summary>
 Given an <see cref="T:Blackbaud.AppFx.Server.AdHocQueryFilterField" />, constructs the join necessary to obtain its various values from DIM_DATE.
 </summary>
 <param name="filterField">An <see cref="T:Blackbaud.AppFx.Server.AdHocQueryFilterField" /> representing a rolling date filter.</param>
 <param name="schema">The schema of the data source being used.</param>
 <returns>A string describing a left outer join from the field's corresponding DIMID field to DIM_DATE, with an alias unique to the field.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQuerySqlBuilder.GetComparisonOperatorForSql(Blackbaud.AppFx.Server.AdHocQuerySqlBuilder.FilterFieldInfo)">
 <summary>
 Returns the appropriate comparison operator required to implement less than, less than or equal to, greater than and greater than or equal to comparisons.
 </summary>
 <param name="filterInfo">The filter whose SQL is being constructed.</param>
 <returns>A string containing the comparison operator required to implement the comparison, surrounded by spaces.</returns>
 <remarks>
 This logic is here because, though dates get smaller as you move into the past and larger as you move into the future, their corresponding DAYSSINCE, WEEKSSINCE, MONTHSINCE etc.
 values get larger as you move into the past and smaller as you move into the future.  Thus, comparison operators must be reversed when constructing a rolling date filter
 that uses one of these fields.
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQuerySqlBuilder.GetFilterFromClauseWithRollingDateJoin(Blackbaud.AppFx.Server.AdHocQuerySqlBuilder.FilterFieldInfo,Blackbaud.AppFx.Server.AdHocQuerySqlBuilder.AdHocQueryFromClauseType)">
 <summary>
 Creates a from clause for a "MeetsNoneOfTheCriteria" filter's subquery.
 </summary>
 <param name="filterInfo">The filter field being evaluated.</param>
 <param name="adhocQueryFromType">The type of filter for which the from clause is being built.</param>
 <returns>The from clause needed to evaluate the filter, including the join to DIM_DATE required.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQuerySqlBuilder.GetRollingDateBetweenFilterForSql(Blackbaud.AppFx.Server.AdHocQuerySqlBuilder.FilterFieldInfo)">
 <summary>
 Returns the SQL required to process a rolling date "between" or "not between" filter operation.
 </summary>
 <param name="filterInfo">The <see cref="T:Blackbaud.AppFx.Server.AdHocQuerySqlBuilder.FilterFieldInfo" /> being processed.</param>
 <returns>The SQL required to process the filter.</returns>
 <remarks>
 Filters where the start and end values employ the same unit, and thus the same DIM_DATE field, will employ the "between" syntax.
 Filters where the start and end values employ differing units, and thus differ in the DIM_DATE field they use, will use comparison operators instead.
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQuerySqlBuilder.GetRollingDateQueryViewJoinAlias(Blackbaud.AppFx.Server.AdHocQueryFilterField)">
 <summary>
 Returns a unique alias for the join to the DIM_DATE table from the filter field's DIMID field.
 </summary>
 <param name="filterField">The <see cref="T:Blackbaud.AppFx.Server.AdHocQueryFilterField" /> being processed.</param>
 <returns>A unique alias to be used for this filter's instance of the DIM_DATE table in the SQL being built.</returns>
 <remarks>The alias is constructed by appending the field's name to the alias of the object to which it belongs.</remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQuerySqlBuilder.GetRollingDateSqlValue(Blackbaud.AppFx.RollingDate)">
 <summary>
 Returns the value to be compared to the appropriate field in DIM_DATE in order to process the filter.
 </summary>
 <param name="value">The <see cref="T:Blackbaud.AppFx.RollingDate" /> filter value being processed.</param>
 <returns>A string representation of the appropriate numerical value to be included in the SQL being built.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQuerySqlBuilder.GetRollingDateValueField(Blackbaud.AppFx.RollingDate,Blackbaud.AppFx.Server.QueryViewField)">
 <summary>
 Returns the field in DIM_DATE that will be compared to the rolling date's numeric value in order to process the filter.
 </summary>
 <param name="value">The <see cref="T:Blackbaud.AppFx.RollingDate" /> filter value being processed.</param>
 <param name="queryField">The query field being filtered.</param>
 <returns>The name of the field in DIM_DATE containing the value to be filtered.</returns>
 <remarks>If the field being sought is in the data mart date dimension view, CALENDARYEARSSINCE is aliased to YEARSSINCE.</remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQueryViewPathParser.ParseRemainingPath(System.Data.SqlClient.SqlConnection,System.String,System.String,System.String,System.Collections.Generic.List{Blackbaud.AppFx.Server.AdHocQueryViewData})">
 <param name="conn">An open connection to the database.</param>
 <param name="parentPath"></param>
 <param name="remainingPath">The part of the original node path that has yet to be parsed.</param>
 <param name="currentViewPath">The actual path that has already been processed and is used so that each viewdata contains the actual view path that it represents.</param>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQueryViewPathParser.StripFirstPathElement(System.String@)">
 <summary>
 Strips off the first element in the path and returns it and the updated path.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.AdHocQueryViewPathParser.StripLastPathElement(System.String@)">
 <summary>
 Strips off the last element in the path and returns it and the updated path.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.BatchDefaultsLoadRequest">
 <summary>
 Returns the value translations for a dataformitem containing default fields for a batch given the formfields that make up the batch
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.BatchDefaultsLoadReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.BatchDefaultsLoadRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.BatchDefaultsLoadProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.BatchDefaultsLoadRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.BatchLoadRequest">
 <summary>
 Gets the data (for edit or view) for a batch defined by the supplied batch ID
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.BatchLoadReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.BatchLoadRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.BatchLoadProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.BatchLoadRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.BatchSaveRequest">
 <summary>
 Saves the data (for edit or view) for a batch defined by the supplied batch ID
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.BatchSaveReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.BatchSaveRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.BatchSaveProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.BatchSaveRequest" />
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.BatchSaveProcessor.ClearBadTokens(Blackbaud.AppFx.Server.PaymentProcessorBulkSave,System.Collections.Generic.List{Blackbaud.AppFx.Server.BatchRowCreditCardToken},System.Collections.Generic.Dictionary{System.Guid,System.Collections.Generic.List{System.Int32}},System.Collections.Generic.Dictionary{System.Int32,System.String},System.Exception)">
 <summary>
 CC info gets sent in bulk to BBPS every 1000 cards.
 If the bulk save to BBPS failed, we now have bad card tokens. Wipe them out so we know we didn't get the credit card information.
 The user will need to re-enter the credit card number.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.BatchSaveProcessor.SaveRowMetadata(System.Data.SqlClient.SqlConnection,Blackbaud.AppFx.Server.BatchDataRow)">
 <summary>
 This saves row metadata coming out of import. It currently does NOT support editing of metadata.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.BatchTemplateGetMetaDataRequest">
 <summary>
 Gets the metadata for the specified batch template ID
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.BatchTemplateGetMetaDataReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.BatchTemplateGetMetaDataRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.BatchTemplateGetMetaDataProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.BatchTemplateGetMetaDataRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.BusinessProcessInformationRequest">
 <summary>
 Returns information on a given business process type
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.BusinessProcessInformationReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.BusinessProcessInformationRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.BusinessProcessInformationProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.BusinessProcessInformationRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.BusinessProcessLaunchRequest">
 <summary>
 Launches a given business process
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.BusinessProcessLaunchRequest.DeferredResultKey">
 <summary>
 A key to use to fetch the results of the business process at a later point.
 </summary>
 <remarks>If non-empty, this will be used in place of DeferredResultToken.</remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.BusinessProcessLaunchRequest.DeferredResultToken">
 <summary>
 An arbitrary string token to use to fetch the results of the business process at a later point. 
 </summary>
 <remarks>This will only be used if DeferredResultKey is not set.</remarks>
</member>
<member name="P:Blackbaud.AppFx.Server.BusinessProcessLaunchRequest.DeferredResultKeyOrToken">
 <summary>
 Returns the deferred result key if it's been set or the deferred result token if it key hasn't been set and the token has. 
 This the key is required for backwards compatibility (and therefore overrides the token) but the token is a string and is therefore more 
 flexible. 
 </summary>
 <returns>The deferred result token that should be used to access the deferred results of this business process, or an empty string if none is set.</returns>
</member>
<member name="F:Blackbaud.AppFx.Server.BusinessProcessLaunchRequest.PermitEnqueue">
 <summary>
 A flag to determine if the business process should be enqueued if able.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.BusinessProcessLaunchRequest.FromEnqueue">
 <summary>
 A flag to determine if the business process comes from the enqueue and should be processed.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.BusinessProcessLaunchReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.BusinessProcessLaunchRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.BusinessProcessLaunchProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.BusinessProcessLaunchRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.BusinessProcessOutputLoadRequest">
 <summary>
 Loads data from a business process output table.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.BusinessProcessOutputLoadReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.BusinessProcessOutputLoadRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.BusinessProcessOutputLoadProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.BusinessProcessOutputLoadRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CatalogBrowserGetCatalogItemRequest">
 <summary>
 Returns the requested catalog item
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CatalogBrowserGetCatalogItemReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.CatalogBrowserGetCatalogItemRequest" />.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.CatalogBrowserGetCatalogItemReply.CatalogBase">
 <summary>
 The requested catalog item
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CatalogBrowserGetCatalogItemProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.CatalogBrowserGetCatalogItemRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CatalogBrowserGetCatalogResourceRequest">
 <summary>
 Returns the contents of the requested catalog resource.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CatalogBrowserGetCatalogResourceReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.CatalogBrowserGetCatalogResourceRequest" />.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.CatalogBrowserGetCatalogResourceReply.CatalogResource">
 <summary>
 The requested catalog resource as a string
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.CatalogBrowserGetCatalogResourceReply.ResourceNotFoundMessage">
 <summary>
 If the requested resource cannot be found then CatalogResource will be nothing and this element will contain a message with details.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.CatalogBrowserGetCatalogResourceReply.ResourceNotFoundPossibleMatch">
 <summary>
 If the requested resource cannot be found then CatalogResource will be nothing and this element will contain the name of a resourcename that has the same postfix.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.CatalogBrowserGetCatalogResourceReply.ResourceName">
 <summary>
 The actual name of the resource.  Will be the same as ItemName unless IgnoreResourcePrefix=true and a non-exact match is found.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CatalogBrowserGetCatalogResourceProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.CatalogBrowserGetCatalogResourceRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CatalogBrowserGetDependencyTreeRequest">
 <summary>
 Returns the dependency tree for the given catalog item
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CatalogBrowserGetDependencyTreeReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.CatalogBrowserGetDependencyTreeRequest" />.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.CatalogBrowserGetDependencyTreeReply.DependencyTree">
 <summary>
 The dependency tree
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CatalogBrowserGetDependencyTreeProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.CatalogBrowserGetDependencyTreeRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CatalogBrowserGetItemByIDRequest">
 <summary>
 Returns the requested loaded catalog item definition from the database.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CatalogBrowserGetItemByIDReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.CatalogBrowserGetItemByIDRequest" />.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.CatalogBrowserGetItemByIDReply.CatalogBase">
 <summary>
 The requested catalog item
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CatalogBrowserGetItemByIDProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.CatalogBrowserGetItemByIDRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CatalogBrowserGetItemsRequest">
 <summary>
 Returns the available catalog items
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CatalogBrowserGetItemsReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.CatalogBrowserGetItemsRequest" />.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.CatalogBrowserGetItemsReply.Rows">
 <summary>
 The list of catalog items
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.CatalogBrowserGetItemsReply.Authors">
 <summary>
 The distinct authors present in the list of catalog items
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.CatalogBrowserGetItemsReply.ItemTypes">
 <summary>
 The distinct catalog item types present in the list of catalog items
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.CatalogBrowserGetItemsReply.Sources">
 <summary>
 The distinct sources present in the list of catalog items
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SourceInfo.Name">
 <summary>
 The name of the source
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SourceInfo.Type">
 <summary>
 Indicates whether the source is a catalog assembly or a simple xml file
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CatalogBrowserGetItemsProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.CatalogBrowserGetItemsRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CatalogBrowserLoadCatalogItemRequest">
 <summary>
 Loads/updates the given catalog item
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CatalogBrowserLoadCatalogItemReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.CatalogBrowserLoadCatalogItemRequest" />.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.CatalogBrowserLoadCatalogItemReply.LoadedItems">
 <summary>
 The list of catalog items that were loaded (most applicable when an item includes dependencies)
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CatalogBrowserLoadCatalogItemProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.CatalogBrowserLoadCatalogItemRequest" />
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.CatalogItemLoader.GetDataSourceForReport(System.String,System.Byte[],Blackbaud.AppFx.XmlTypes.ReportSpec)">
 <summary>
 Builds a DataSource item pointing to the right datasource for the report spec.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.CatalogItemLoader.GetReportDataSourceName(System.Byte[])">
 <summary>
 Returns the name of the (first) datasource specified in the RDL file defined in the specified byte array.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CodeTableEntryAddRequest">
 <summary>
 Creates a new CodeTable entry item
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CodeTableEntryAddReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.CodeTableEntryAddRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CodeTableEntryAddProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.CodeTableEntryAddRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CodeTableEntryDeleteRequest">
 <summary>
 Deletes a CodeTable entry item
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CodeTableEntryDeleteReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.CodeTableEntryDeleteRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CodeTableEntryDeleteProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.CodeTableEntryDeleteRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CodeTableEntryGetDataRequest">
 <summary>
 Gets the data for an individual code table entry item
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CodeTableEntryGetDataReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.CodeTableEntryGetDataRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CodeTableEntryGetDataProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.CodeTableEntryGetDataRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CodeTableEntryGetDescriptionRequest">
 <summary>
 Returns the description for the given code table ID.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CodeTableEntryGetDescriptionReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.CodeTableEntryGetDescriptionRequest" />.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.CodeTableEntryGetDescriptionReply.Description">
 <summary>
 The description for the given code table
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CodeTableEntryGetDescriptionProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.CodeTableEntryGetDescriptionRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CodeTableEntryGetIDRequest">
 <summary>
 Returns the ID for the given table entry.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CodeTableEntryGetIDReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.CodeTableEntryGetIDRequest" />.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.CodeTableEntryGetIDReply.ID">
 <summary>
 The ID for the given table entry
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CodeTableEntryGetIDProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.CodeTableEntryGetIDRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CodeTableEntryGetListRequest">
 <summary>
 Returns the list of table entries for the given code table.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CodeTableEntryGetListReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.CodeTableEntryGetListRequest" />.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.CodeTableEntryGetListReply.Rows">
 <summary>
 The list of table entries for the given code table
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.TableEntryListOutputRow">
 <summary>
 Represents a single table entry in the list
 </summary>
 <remarks>The CodeTableEntryGetListReply returns an array of this class</remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.CodeTableEntryGetListProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.CodeTableEntryGetListRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CodeTableEntryUpdateRequest">
 <summary>
 Updates a CodeTable entry description and active status
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CodeTableEntryUpdateReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.CodeTableEntryUpdateRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CodeTableEntryUpdateProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.CodeTableEntryUpdateRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CodeTableGetDescriptionRequest">
 <summary>
 Returns the user-friendly name for the given code table name.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CodeTableGetDescriptionReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.CodeTableGetDescriptionRequest" />.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.CodeTableGetDescriptionReply.Description">
 <summary>
 The user-friendly description for the given code table
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CodeTableGetDescriptionProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.CodeTableGetDescriptionRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CodeTableGetLookupInfoRequest">
 <summary>
 Returns information such as user permissions for the given code table name.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CodeTableGetLookupInfoReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.CodeTableGetLookupInfoRequest" />.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.CodeTableGetLookupInfoReply.Description">
 <summary>
 The user-friendly description for the given code table
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CodeTableGetLookupInfoProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.CodeTableGetLookupInfoRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CountryGetFormatsRequest">
 <summary>
 Retrieves formatting information for all countries.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CountryGetFormatsReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.CountryGetFormatsRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CountryGetFormatsProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.CountryGetFormatsRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.DashboardGetDataRequest">
 <summary>
 Gets the dataset for the given Dashboard ID
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.DashboardGetDataReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.DashboardGetDataRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.DashboardGetDataProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.DashboardGetDataRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.DashboardGetMetaDataRequest">
 <summary>
 Gets the metadata that defines the dashboard
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.DashboardGetMetaDataReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.DashboardGetMetaDataRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.DashboardGetMetaDataProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.DashboardGetMetaDataRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.DataFormGetDropDownValueListRequest">
 <summary>
 Returns a list of DataFormDropDownValue rows for the given DataForm
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.DataFormGetDropDownValueListRequest.SecurityContext">
 <summary>
 Allows the caller to indicate that this request is in the context of another operation.
 </summary>
 <remarks>If the user is granted rights to the operation indicated AND that operation implies this operation then the request will be granted.</remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.DataFormGetDropDownValueListReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.DataFormGetDropDownValueListRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.DataFormGetDropDownValueListProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.DataFormGetDropDownValueListRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.DataFormInstanceGetMetaDataRequest">
 <summary>
 Returns the data form definition for a given data form name or ID.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.DataFormInstanceGetMetaDataReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.DataFormInstanceGetMetaDataRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.DataFormInstanceGetMetaDataProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.DataFormInstanceGetMetaDataRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.DataFormLoadRequest">
 <summary>
 Gets the data (for edit or view) for a record defined by the supplied Form ID
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.DataFormLoadRequest.SecurityContext">
 <summary>
 Allows the caller to indicate that this request is in the context of another operation.
 </summary>
 <remarks>If the user is granted rights to the operation indicated AND that operation implies this operation then the request will be granted.</remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.DataFormLoadRequest.AllowMissingRecordContext">
 <summary>
 Allows the caller to indicate that the HasIDForLoad check should be ignored and DBNull should be passed as an ID in place of null.
 </summary>
 <remarks>The XmlIgnore attribute means this field can never be sent up from client code.</remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.DataFormLoadRequest.IncludeFieldCharacteristics">
 <summary>
 Allows the caller to indicate that custom field characteristics data should be returned with the reply.  Note that this does not 
 control whether or not field characteristics are evaluated when loading - this simply returns information about which fields have
 been customized.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.DataFormLoadReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.DataFormLoadRequest" />.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.DataFormLoadReply.LastUpdated">
 <summary>
 If the data from the data form is static, this date represents the last time its data source was refreshed.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.DataFormLoadProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.DataFormLoadRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.DataFormSaveRequest">
 <summary>
 Saves (insert or update) the data for a record defined by the supplied Form ID
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.DataFormSaveRequest.SecurityContext">
 <summary>
 Allows the caller to indicate that this request is in the context of another operation.
 </summary>
 <remarks>If the user is granted rights to the operation indicated AND that operation implies this operation then the request will be granted.</remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.DataFormSaveRequest.ChangeAgentProcessName">
 <summary>
 Optional process name to use for the CHANGEAGENT table.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.DataFormSaveRequest.ProcessWorkflowTriggers">
 <summary>
 Indicates whether or not to trigger workflows that have been configured for this data form instance
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.DataFormSaveRequest.BypassRequiredFieldValidation">
 <summary>
 Indicates whether or not required fields should be validated during the save routine
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.DataFormSaveRequest.AggregateExceptions">
 <summary>
 Indicates whether or not an aggregate exception should be built to identify multiple problems with the save
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.DataFormSaveRequest.IgnoreExtraFields">
 <summary>
 Indicates whether or not extra fields should be ignored
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.DataFormSaveRequest.FormFieldsMetaData">
 <summary>
 Optionally specify a form meta data for a performance improvement. Please do not
 pass in an instance referencable from the meta data cache; make sure it gets
 cloned first.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.DataFormSaveReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.DataFormSaveRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.DataFormSaveProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.DataFormSaveRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.DataListGetMetaDataRequest">
 <summary>
 Returns the data list ouptut definition and parameter form definition given the name or ID
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.DataListGetMetaDataReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.DataListGetMetaDataRequest" />.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.DataListGetMetaDataReply.Name">
 <summary>
 Contains the name of the data list
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.DataListGetMetaDataReply.OutputDefinition">
 <summary>
 Contains the output field definition for the data list
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.DataListGetMetaDataReply.ParameterDefinition">
 <summary>
 XML that contains the form definition for the parameters (if any)
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.DataListGetMetaDataReply.DataListSpec">
 <summary>
 Contains the search list spec.  Only returned if <see cref="F:Blackbaud.AppFx.Server.DataListGetMetaDataRequest.ReturnDataListSpec"/> is set to true
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.DataListGetMetaDataReply.TSLong">
 <summary>
 The TSLONG value from the dbo.DATALISTCATALOG row.
 </summary>
 <remarks>This value can be used to know if the metadata has changed by comparing this field to a previously retrieved metadata reply.</remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.DataListGetMetaDataReply.DateChanged">
 <summary>
 The DATECHANGED value from the dbo.DATALISTCATALOG row.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.DataListGetMetaDataProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.DataListGetMetaDataRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.DataListLoadRequest">
 <summary>
 Loads the data for a datalist given the ID or Name and any parameters
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.DataListLoadRequest.Parameters">
 <summary>
 Defines the filter values to be used when loading the datalist.  Parameter values will be validated against the metadata defined.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.DataListLoadRequest.MaxRows">
 <summary>
 Indicates the maximum number of rows to return on the initial request.  Additional rows can be fetched using the <see cref="T:Blackbaud.AppFx.Server.DataListLoadMoreRequest"/> request.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.DataListLoadRequest.MaxTotalRecords">
 <summary>
 Indicates the total number of records to return.  This value can only be set for datalists that have a MaxRows parameter."
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.DataListLoadRequest.ViewFormID">
 <summary>
 Contains the view form ID that will be loaded for each row in the list
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.DataListLoadRequest.RecordIDColumn">
 <summary>
 Indicates the column to use as the RecordID when loading the view form determined by the <see cref="F:Blackbaud.AppFx.Server.DataListLoadRequest.ViewFormID"/> property
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.DataListLoadRequest.IncludeMetaData">
 <summary>
 Indicates whether or not the data list metadata should be returned
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.DataListLoadRequest.SecurityContext">
 <summary>
 Allows the caller to indicate that this request is in the context of another operation.
 </summary>
 <remarks>If the user is granted rights to the operation indicated AND that operation implies this operation then the request will be granted.</remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.DataListLoadRequest.IgnoreInvalidFilters">
 <summary>
 Allows the caller to indicate whether or not an exception should be thrown when the <see cref="F:Blackbaud.AppFx.Server.DataListLoadRequest.Parameters"/> specified are invalid.  
 </summary>
 <remarks>This is currently set when a datalist is loaded with filter values that have been stored on the client machine</remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.DataListLoadRequest.ResultsAsXml">
 <summary>
 Allows the caller to indicate that the results should be returned in an xml element sub tree with element names that match the FIELDIDs from the datalist output definition.
 </summary>
 <remarks>Some web service clients (such as Adobe Flex) work better with xml that has first class element names vs. the standard genereic Rows\r\Values\v structure that the default DataListLaodReply takes.
 This parameter allows the caller to indicate that instead of returning information in the DataListLoadReply.Rows element data should be returned in the DataListLoadReply.XmlResults subtree where the elements of each item correspond to the FIELDIDS from the datalist spec Output definition.</remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.DataListLoadRequest.UserSettingsPath">
 <summary>
 Indicates the path to the data list that should be used to update the user's settings such as filter values when this data list
 is loaded.  If no path is provided, the user's settings will not be updated.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.DataListLoadRequest.UseThisAppUserID">
 <summary>
 Allows server side code to explicitly indicate an AppUserID to fetch the list in terms of.
 </summary>
 <remarks>The XmlIgnore attribute means this field can never be sent up from client code.</remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.DataListLoadRequest.StartRowIndex">
 <summary>
 Optional. The preferred index of the first row to return. Out of range indexes will be corrected,
 and caching behavior will be unaffected.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.DataListLoadRequest.RecordToInclude">
 <summary>
 Optional. If the ID is found in the load results, the range of rows returned will be adjusted to include it.
 Supercedes a StartRowIndex setting unless the ID is not found.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.DataListLoadRequest.RowRangeKeyToRemove">
 <summary>
 Optional. Specifies a cache key which should be removed because this request makes the cached value obsolete.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.DataListLoadRequest.CancelID">
 <summary>
 Optional. If you intend to cancel this request at a future point, you can provide a key which you will use to identify this request for cancellation.
 If you specify a CancelID, you should consider setting an infinite timeout on the requests's ClientAppInfo header. 
 Cancellation is not supported for CLR-implemented datalists. For CLR-implemented datalists, this parameter will be ignored. 
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.DataListLoadRequest.IgnoreExtraFields">
 <summary>
 Indicates whether or not extra fields should be ignored
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.DataListLoadReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.DataListLoadRequest" />.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.DataListLoadReply.Rows">
 <summary>
 A list of rows containing the data returned by the datalist
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.DataListLoadReply.TotalAvailableRows">
 <summary>
 Contains the total number of rows returned by the DataList procedure"
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.DataListLoadReply.TotalRowsRequested">
 <summary>
 Contains the total number of rows requested"
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.DataListLoadReply.TotalRowsInReply">
 <summary>
 Contains the total number of rows returned by the initial request"
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.DataListLoadReply.MoreRowsRangeKey">
 <summary>
 Contains a string value that is set when the total number of rows requested is less than the total number of rows available.  This key must be used when requesting additional rows using the <see cref="T:Blackbaud.AppFx.Server.DataListLoadMoreRequest"/> request."
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.DataListLoadReply.HadMoreRows">
 <summary>
 Returns true if the total number of records returned was limited by the <see cref="F:Blackbaud.AppFx.Server.DataListLoadRequest.MaxTotalRecords"/> property.  This only applies to datalists that have a MaxRows parameter."
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.DataListLoadReply.MetaData">
 <summary>
 Returns the metadata for the datalist.  Only returned if the <see cref="F:Blackbaud.AppFx.Server.DataListLoadRequest.IncludeMetaData"/> property was set to True on the request.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.DataListLoadReply.HadInvalidFilters">
 <summary>
 Returns true if invalid filter parameters were specified and the <see cref="F:Blackbaud.AppFx.Server.DataListLoadRequest.IgnoreInvalidFilters"/> property was set to True.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.DataListLoadReply.XmlResults">
 <summary>
 If the request.ResultsAsXml=true, then this will contain an xml element subtree.  the Root element by default will be named listItems, each row will be in an element by default named item, and each field will be in an element whose name is that of the output field definition FIELDID from the datalist spec metadata.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.DataListLoadReply.SummaryFieldsDataItem">
 <summary>
 Returns the value of the summary fields if any
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.DataListLoadReply.LastUpdated">
 <summary>
 If the data from the data list is static, this date represents the last time its data source was refreshed.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.DataListLoadReply.IncludedRecordIndex">
 <summary>
 This will be the index of RecordToInclude, or -1 if it was not found in the results. It is entire-result based, not page based.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.DataListLoadReply.StartRowIndex">
 <summary>
 The start index of the page of rows chosen for return.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.DataListLoadReply.DataListLoadWasCancelled">
 <summary>
 Indicates that datalist was explicitly cancelled before it finished loading. 
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.DataListLoadMetaData.OutputDefinition">
 <summary>
 Contains the output field definition for the data list
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.DataListLoadMetaData.ParameterDefinition">
 <summary>
 XML that contains the form definition for the filter parameters (if any)
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.DataListLoadProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.DataListLoadRequest" />
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.DataListLoadProcessor.FixStartIndex(System.Int32,System.Int32,System.Int32)">
 <summary>
 Turns the given index into a valid "start row" index.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.DataListResultRow.DataFormItem">
 <summary>
 The resulting data that is returned by loading the the view data form given the <see cref="F:Blackbaud.AppFx.Server.DataListLoadRequest.ViewFormID"/>
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.DataListLoadMoreRequest">
 <summary>
 Loads a window of rows from a previous call to DataListLoad which had more TotalAvailableRows than the TotalRequestRows in the reply.  Used to support paging of data in large result sets.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.DataListLoadMoreRequest.ResultsAsXml">
 <summary>
 Allows the caller to indicate that the results should be returned in an xml element sub tree with element names that match the FIELDIDs from the datalist output definition.
 </summary>
 <remarks>Some web service clients (such as Adobe Flex) work better with xml that has first class element names vs. the standard genereic Rows\r\Values\v structure that the default DataListLaodReply takes.
 This parameter allows the caller to indicate that instead of returning information in the DataListLoadMoreReply.Rows element data should be returned in the DataListLoadMoreReply.XmlResults subtree where the elements of each item correspond to the FIELDIDS from the datalist spec Output definition.</remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.DataListLoadMoreReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.DataListLoadMoreRequest" />.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.DataListLoadMoreReply.XmlResults">
 <summary>
 If the request.ResultsAsXml=true, then this will contain an xml element subtree.  the Root element by default will be named listItems, each row will be in an element by default named item, and each field will be in an element whose name is that of the output field definition FIELDID from the datalist spec metadata.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.DataListLoadMoreProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.DataListLoadMoreRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SimpleDataListGetTranslationRequest">
 <summary>
 Returns the translation text for a simple datalist entry ID
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SimpleDataListGetTranslationReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.SimpleDataListGetTranslationRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SimpleDataListGetTranslationProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.SimpleDataListGetTranslationRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SimpleDataListLoadRequest">
 <summary>
 Gets the data for a simple datalist given the ID or Name and any parameters
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.SimpleDataListLoadRequest.SkipSecurityCheck">
 <summary>
 This property can be set for server-side code such as UIModel code where the outer context has already been validated.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>This property is provided as an optimization for UIModel code that is loading a datalist in the context of a data form.
 This property is annotated with XmlIgnore so that it will not appear in the WSDL and will not be available from client code.</remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.SimpleDataListLoadReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.SimpleDataListLoadRequest" />.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SimpleDataListLoadReply.Rows">
 <summary>
 A list of rows containing the data returned by the simple datalist
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SimpleDataListLoadProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.SimpleDataListLoadRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.IDMapRequest">
 <summary>
 Maps an ID of one record type to an ID of another record type.  Can also be used to map the current AppUserID to an associated ID of a particular record type.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.IDMapRequest.IDMapperSpecCatalogID">
 <summary>
 The ID of the IDMapperSpec which contains the metadata needed to map the Source ID to the Target ID.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.IDMapRequest.SourceValueType">
 <summary>
 Indicates whether to use the current AppUserID or the specified SourceID as the source for the IDMapper function
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.IDMapReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.IDMapRequest" />.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.IDMapReply.TargetID">
 <summary>
 The Target ID that the Source ID Mapped to.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.IDMapProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.IDMapRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ListOutput">
 <summary>
 Class which represents a generic representation of data returned as a list, usually for the purpose of binding to a grid on the UI side.
 </summary>
 <remarks>
 <seealso cref="T:Blackbaud.AppFx.Server.AdHocQueryProcessReply"/>
 <seealso cref="T:Blackbaud.AppFx.Server.SearchListLoadReply"/>
 <seealso cref="T:Blackbaud.AppFx.Server.SmartQueryLoadReply"/>
 </remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.ListOutput.Name">
 <summary>
 Name of the list.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ListOutput.Fields">
 <summary>
 A list containing the field information for the results.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ListOutput.Rows">
 <summary>
 A list of rows containing the data returned by the list process.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ListOutput.HadMoreResults">
 <summary>
 True if the list process had more results than the max records property (if specified).
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ListOutput.RowCount">
 <summary>
 The true number of rows that the list result set contains regardless of the max records property (if specified).
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ListOutput.LastUpdated">
 <summary>
 If the data from the list is static, this date represents the last time its data source was refreshed.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ListOutputMetaField">
 <summary>
 A metadata which corresponds to a value returned by a list.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ListOutputMetaField.Name">
 <summary>
 Name of the field.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ListOutputMetaField.DataType">
 <summary>
 Data type of the field.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ListOutputMetaField.IsPrimaryKey">
 <summary>
 Flag indicating whether the field is the primary key of its table.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ListOutputMetaField.AllowMonthDayOnFuzzyDate">
 <summary>
 Flag indicating if a fuzzy date field allows Month/Day values.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ListOutputMetaField.IsHidden">
 <summary>
 Flag indicating whether this field should be hidden when results are rendered on the front-end.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.ListOutputMetaField.FieldIndex">
 <summary>
 Used during fetching of data only.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.ListOutputMetaField.FieldID">
 <summary>
 ID of the field.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ListOutputMetaField.CurrencyFieldID">
 <summary>
 CurrencyFieldID of the field.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ListOutputMetaField.UniqueName">
 <summary>
 Unique name of the field.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ListOutputMetaField.#ctor">
 <summary>
 Creates a new instance of the <see cref="T:Blackbaud.AppFx.Server.ListOutputMetaField"/> class.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ListOutputMetaField.#ctor(System.String,Blackbaud.AppFx.XmlTypes.FormFieldDataType,System.String)">
 <summary>
 Creates a new instance of the <see cref="T:Blackbaud.AppFx.Server.ListOutputMetaField"/> class.
 </summary>
 <param name="name">Name of the field.</param>
 <param name="dataType">Data type of the field.</param>
 <param name="fieldID">ID of the field.</param>
</member>
<member name="M:Blackbaud.AppFx.Server.ListOutputMetaField.#ctor(System.String,Blackbaud.AppFx.XmlTypes.FormFieldDataType,System.Boolean,System.String)">
 <summary>
 Creates a new instance of the <see cref="T:Blackbaud.AppFx.Server.ListOutputMetaField"/> class.
 </summary>
 <param name="name">Name of the field.</param>
 <param name="dataType">Data type of the field.</param>
 <param name="isHidden">Indicates whether the field should be hidden when results are renedered on the front-end.</param>
 <param name="fieldID">ID of the field.</param>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.ListOutputMetaField.#ctor(System.String,Blackbaud.AppFx.XmlTypes.FormFieldDataType,System.Boolean,System.String,System.String)">
 <summary>
 Creates a new instance of the <see cref="T:Blackbaud.AppFx.Server.ListOutputMetaField"/> class.
 </summary>
 <param name="name">Name of the field.</param>
 <param name="dataType">Data type of the field.</param>
 <param name="isHidden">Indicates whether the field should be hidden when results are renedered on the front-end.</param>
 <param name="fieldID">ID of the field.</param>
 <param name="currencyFieldID">CurrencyFieldID of the field.</param>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.ListOutputMetaField.#ctor(System.String,Blackbaud.AppFx.XmlTypes.FormFieldDataType,System.Boolean,System.String,System.String,System.String)">
 <summary>
 Creates a new instance of the <see cref="T:Blackbaud.AppFx.Server.ListOutputMetaField"/> class.
 </summary>
 <param name="name">Name of the field.</param>
 <param name="dataType">Data type of the field.</param>
 <param name="isHidden">Indicates whether the field should be hidden when results are renedered on the front-end.</param>
 <param name="fieldID">ID of the field.</param>
 <param name="currencyFieldID">CurrencyFieldID of the field.</param>
 <param name="format">Format for the field.</param>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.ListOutputMetaField.GetFormFieldDataType(System.String)">
 <summary>
 Gets the <see cref="T:Blackbaud.AppFx.XmlTypes.FormFieldDataType"/> from a SQL data type name and returns <see cref="F:Blackbaud.AppFx.XmlTypes.FormFieldDataType.String"/> if no corresponding type exists.
 </summary>
 <param name="sqlDataTypeName">SQL data type name.</param>
 <returns><see cref="T:Blackbaud.AppFx.XmlTypes.FormFieldDataType"/> which corresponds with the SQL data type name.</returns>
</member>
<member name="T:Blackbaud.AppFx.Server.ListOutputRow">
 <summary>
 Row of values returned by a list
 </summary>
 <remarks>
 <seealso cref="T:Blackbaud.AppFx.Server.ListOutput"/>
 <seealso cref="T:Blackbaud.AppFx.Server.ListOutputMetaField"/>
 </remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.ListOutputRow.Values">
 <summary>
 The values for the output row
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ListOutputRow.#ctor(System.Int32)">
 <summary>
 Creates a new instance of the <see cref="T:Blackbaud.AppFx.Server.ListOutputRow"/> class.
 </summary>
 <param name="valueCount">Number of values the output row will contain.</param>
</member>
<member name="M:Blackbaud.AppFx.Server.ListOutputRow.#ctor(System.Data.IDataReader)">
 <summary>
 Creates a new instance of the <see cref="T:Blackbaud.AppFx.Server.ListOutputRow"/> class.
 </summary>
 <param name="reader">Data reader containing the values which will be returned by the output row.</param>
 <remarks>
 The reader passed in should have its Read() method called before being sent to this constructor.
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.ListOutputRow.#ctor(System.Data.IDataReader,System.Int32)">
 <summary>
 Creates a new instance of the <see cref="T:Blackbaud.AppFx.Server.ListOutputRow"/> class.
 </summary>
 <param name="reader">Data reader containing the values which will be returned by the output row.</param>
 <param name="fieldCount">The number of fields to include in the array of Values.  Should be less than or equal to the number of fields in the reader</param>
 <remarks>
 The reader passed in should have its Read() method called before being sent to this constructor.
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.ListOutputRow.#ctor(System.Data.IDataReader,System.Int32,Blackbaud.AppFx.Server.AppCatalog.AppSearchList)">
 <summary>
 Creates a new instance of the <see cref="T:Blackbaud.AppFx.Server.ListOutputRow"/> class.
 </summary>
 <param name="reader">Data reader containing the values which will be returned by the output row.</param>
 <param name="fieldCount">The number of fields to include in the array of Values.  Should be less than or equal to the number of fields in the reader</param>
 <param name="searchProc">A searchlist CLR implementation, which may include a custom output formatting function.</param>
 <remarks>
 The reader passed in should have its Read() method called before being sent to this constructor.
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.ListOutputRow.#ctor">
 <summary>
 Creates a new instance of the <see cref="T:Blackbaud.AppFx.Server.ListOutputRow"/> class.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.MapEntityLoadRequest">
 <summary>
 Loads the data for a map entity given the ID or Name and any parameters
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.MapEntityLoadReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.MapEntityLoadRequest" />.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.MapEntityLoadReply.Rows">
 <summary>
 A list of rows containing the data returned by the map entity
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.MapEntityLoadProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.MapEntityLoadRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.MergeTaskGetMetaDataRequest">
 <summary>
 Retrieves a MergeTask catalog item from the database.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.MergeTaskGetMetaDataReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.MergeTaskGetMetaDataRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.MergeTaskGetMetaDataProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.MergeTaskGetMetaDataRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.NotificationGetByRecordTypeReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.NotificationGetByRecordTypeRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.NotificationGetByRecordTypeRequest">
 <summary>
 Returns a list of notifications based on a given record type ID or name.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.NotificationGetByRecordTypeProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.NotificationGetByRecordTypeRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.NotificationListForRecordRequest">
 <summary>
 Returns a list of notifications for a given record.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.NotificationListForRecordRequest.SecurityContext">
 <summary>
 Allows the caller to indicate that this request is in the context of another operation.
 </summary>
 <remarks>If the user is granted rights to the operation indicated AND that operation implies this operation then the request will be granted.</remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.NotificationListForRecordReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.NotificationListForRecordRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.NotificationListForRecordProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.NotificationListForRecordRequest" />
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.NotificationListForRecordProcessor.ValidForNotifications">
 <summary>
 Checks whether or not the record type will actually ever have any notifications.  If not, then there's no need to hit the database looking for notifications.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.PageDefinitionGetListByRecordTypeRequest">
 <summary>
 Returns a list of page definitions based on a given record type.  The list will also be filtered by pages containing expression data forms to which the current user has rights (where applicable).
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.PageDefinitionGetListByRecordTypeReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.PageDefinitionGetListByRecordTypeRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.PageDefinitionGetListByRecordTypeProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.PageDefinitionGetListByRecordTypeRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.PageDefinitionGetMetaDataRequest">
 <summary>
 Returns the metadata for a page definition given the ID or Name
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.PageDefinitionGetMetaDataReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.PageDefinitionGetMetaDataRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.PageDefinitionGetMetaDataProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.PageDefinitionGetMetaDataRequest" />
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.PageDefinitionGetMetaDataProcessor.UserGrantedPage(Blackbaud.AppFx.Server.RequestContext,System.Guid)">
 <summary>
 Returns true if the user has been granted access to the page expression form if one exists for the page
 </summary>
 <remarks>If the page doesn't have an expression form it will always return true since pages aren't securable as a whole</remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.PageDefinitionGetMetaDataProcessor.UserGrantedPageInContext(Blackbaud.AppFx.Server.RequestContext,System.Guid,Blackbaud.AppFx.Server.RecordContext)">
 <summary>
 Returns true if the user has been granted access to the page expression form if one exists for the page and if the user has rights based on record security
 </summary>
 <remarks>If the page doesn't have an expression form it will always return true since pages aren't securable as a whole</remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.PageDefinitionGetMetaDataProcessor.ParseExpressionForGetResourceString(System.String,Blackbaud.AppFx.ShellExpressionModel.SectionProps)">
 <summary>
 Replaces references to GetResourceString in an expression with the localized value of the resource key.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.QueryView">
 <summary>
 Represents a query view as defined by the user through a <see cref="T:Blackbaud.AppFx.XmlTypes.QueryViewSpec"/>.
 </summary>
 <remarks>
 Query views should always be present in the database; new query views are stored by processing an QueryViewSpec XML document
 through an external SQL routine.  Query views cannot be edited and stored through this class.
 <seealso cref="T:Blackbaud.AppFx.XmlTypes.QueryViewSpec"/>
 </remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.QueryView.ID">
 <summary>
 ID of the query view in the database.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.QueryView.ObjectName">
 <summary>
 Name of the SQL view or table-valued function which represents a potential result set for the query view.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.QueryView.RecordTypeID">
 <summary>
 ID of the record type to which the query view is associated.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.QueryView.DisplayName">
 <summary>
 Name of the query view which will be displayed to the user.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.QueryView.Subgroup">
 <summary>
 Name of the subgroup
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.QueryView.SubgroupResourceKey">
 <summary>
 Name of the subgroup resource key when localized
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.QueryView.IsRoot">
 <summary>
 Indicates whether the query view is a root query view to which other related, non-root query views can be related.
 </summary>
 <remarks>An example of a root query view would be a Constituent, to which the non-root query view Address would be related.</remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.QueryView.RecordType">
 <summary>
 Description of the record type to which the ad-hoc query is associated.
 </summary>
 <remarks>The description is a translation of the <see cref="F:Blackbaud.AppFx.Server.QueryView.RecordTypeID"/> property.</remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.QueryView.ObjectType">
 <summary>
 Indicates whether the query view contains a SQL view or table-valued function.
 </summary>
 <remarks>
 <seealso cref="T:Blackbaud.AppFx.Server.QueryObjectType"/>
 </remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.QueryView.Description">
 <summary>
 Description of the query view.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.QueryView.PrimaryKeyField">
 <summary>
 Name of the primary key field in the view or table-valued function.
 </summary>
 <remarks>This is not actually represented in the table but is present in the QueryViewSpec.</remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.QueryView.OutputDefinition">
 <summary>
 The output definition as defined in the query view spec.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.QueryView.ChildNodeCount">
 <summary>
 Number of child views related to this query view.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.QueryView.ParameterInfo">
 <summary>
 The parameters as defined in the query view spec.
</summary>
</member>
<member name="F:Blackbaud.AppFx.Server.QueryView.ExportDefinitionPostSaveActions">
 <summary>
 The export definition post-save actions as defined in the query view spec.
</summary>
</member>
<member name="F:Blackbaud.AppFx.Server.QueryView.ExportDefinitionAdditionalDefaultFields">
 <summary>
 The related query views from which default fields should be selected when a new export definition is created with this query view as its root, as defined in the query view spec.
</summary>
</member>
<member name="F:Blackbaud.AppFx.Server.QueryView.RSSFeed">
 <summary>
 The RSS feed defined in the query view spec.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.QueryView.ListBuilder">
 <summary>
 The list builder descriptor defined in the query view spec.
</summary>
</member>
<member name="F:Blackbaud.AppFx.Server.QueryView.MartKey">
 <summary>
 The data mart descriptor defined in the query view spec.
</summary>
</member>
<member name="F:Blackbaud.AppFx.Server.QueryView.Schema">
 <summary>
 The database schema for the view/function defined in the query view spec.
</summary>
</member>
<member name="F:Blackbaud.AppFx.Server.QueryView.ResourceFile">
 <summary>
 The resource file defined in the query view spec.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.QueryView.SupportsRollingDates">
 <summary>
 Indicates whether the query view supports rolling date functionality.
 </summary>
 <remarks>True if the query view's data source supports rolling date functionality, else False.</remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.QueryView.DataMartLastRefresh">
 <summary>
 The date the mart was last refreshed.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.QueryView.LoadSpecInfo(Blackbaud.AppFx.Server.RequestContext,Blackbaud.AppFx.Server.QueryView@,Blackbaud.AppFx.XmlTypes.QueryViewSpec,System.Resources.ResourceManager)">
 <summary>
 Loads information from the query view spec that is not represented in its own database table column.
 </summary>
 <param name="queryView">Query view to load.</param>
 <param name="spec">The query view spec XML definition.</param>
 <remarks>
 <seealso cref="T:Blackbaud.AppFx.XmlTypes.QueryViewSpec"/>
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.QueryView.LoadOuputDefinition(Blackbaud.AppFx.Server.RequestContext,Blackbaud.AppFx.Server.QueryView@,Blackbaud.AppFx.XmlTypes.QueryViewSpec,System.String,System.String,System.Resources.ResourceManager)">
 <summary>
 Loads information contained in the output definition portion of the query view spec.
 </summary>
 <param name="context">Context of the current request.</param>
 <param name="queryView">Query view to load.</param>
 <param name="queryViewSpecXml">Query view spec xml as a string</param>
 <remarks>
 <seealso cref="T:Blackbaud.AppFx.XmlTypes.QueryViewSpec"/>
 <seealso cref="T:Blackbaud.AppFx.XmlTypes.QueryViewOutput"/>
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.QueryView.GetQueryView(System.Data.SqlClient.SqlConnection,Blackbaud.AppFx.Server.RequestContext,System.String)">
 <summary>
 Shared method which loads a query view from its object name
 </summary>
 <param name="connection">An open connection to the database</param>
 <param name="context">Context of the current request.</param>
 <param name="objectName">View name or table-valued function name</param>
 <returns>Instance of <see cref="T:Blackbaud.AppFx.Server.QueryView"/></returns>
 <remarks>
 <seealso cref="N:Blackbaud.AppFx.SpWrap"/>
 <seealso cref="T:Blackbaud.AppFx.Server.QueryViewHelper"/>
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.QueryView.GetQueryView(System.Data.SqlClient.SqlConnection,Blackbaud.AppFx.Server.RequestContext,System.Guid)">
 <summary>
 Shared method which loads a query view from its ID in the database
 </summary>
 <param name="connection">An open connection to the database</param>
 <param name="context">Context of the current request.</param>
 <param name="queryViewID">ID of the query view in the database</param>
 <returns>Instance of <see cref="T:Blackbaud.AppFx.Server.QueryView"/></returns>
 <remarks>
 <seealso cref="N:Blackbaud.AppFx.SpWrap"/>
 <seealso cref="T:Blackbaud.AppFx.Server.QueryViewHelper"/>
 </remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.QueryViewField">
 <summary>
 This class represents a single field which can be included as both an output field or a filter field in an ad-hoc query.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.QueryViewField.#ctor">
 <summary>
 Private constructor.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.QueryViewField.#ctor(Blackbaud.AppFx.XmlTypes.QueryViewSpec,Blackbaud.AppFx.XmlTypes.QueryViewOutputField,System.Boolean,System.DateTime)">
 <summary>
 Loads a single query field.
 </summary>
 <param name="spec">The <see cref="T:Blackbaud.AppFx.XmlTypes.QueryViewSpec"/> which contains the output field and primary key information.</param>
 <param name="outputField">The <see cref="T:Blackbaud.AppFx.XmlTypes.QueryViewOutputField"/> which contains the field information.</param>
 <param name="rollingDatesSupported">If the query view is based on a data warehouse, this indicates that the data warehouse supports rolling dates.</param>
 <param name="dataMartLastRefresh">If the query view is based on a data warehouse, this is the data the data warehouse was last refreshed.</param>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.QueryViewField.#ctor(Blackbaud.AppFx.XmlTypes.QueryViewOutput,Blackbaud.AppFx.XmlTypes.QueryViewOutputField,System.String,System.String,System.String,System.Boolean,System.DateTime)">
 <summary>
 Loads a single query field.
 </summary>
 <param name="outputDefinition">The <see cref="T:Blackbaud.AppFx.XmlTypes.QueryViewOutput"/> definition to which the field belongs.</param>
 <param name="outputField">The <see cref="T:Blackbaud.AppFx.XmlTypes.QueryViewOutputField"/> which contains the field information.</param>
 <param name="objectName">Name of the view or table-valued function to which the field corresponds.</param>
 <param name="primaryKeyField">Primary key of the view or table-valued function.</param>
 <param name="martKey">The mart key of the field's query view.</param>
 <param name="rollingDatesSupported">If the query view is based on a data warehouse, this indicates that the data warehouse supports rolling dates.</param>
 <param name="dataMartLastRefresh">If the query view is based on a data warehouse, this is the data the data warehouse was last refreshed.</param>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.QueryViewField.#ctor(Blackbaud.AppFx.Server.QueryView,System.String)">
 <summary>
 Loads a single query field.
 </summary>
 <param name="queryView">The <see cref="T:Blackbaud.AppFx.Server.QueryView"/> definition to which the field belongs.</param>
 <param name="columnName">The column name of the query field in question.</param>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.QueryViewField.#ctor(System.String,Blackbaud.AppFx.Server.QueryViewFieldIDSetInfo)">
 <summary>
 Loads a single id set query field.
 </summary>
 <param name="objectName">The object name of the query view this field is attached to.</param>
 <param name="idSetInfo">The ID Set info for this field.</param>
 <remarks></remarks>
 <exception cref="T:System.ArgumentNullException">
 Thrown when <paramref name="idSetInfo"/><c> is Nothing</c>.
 </exception>
</member>
<member name="F:Blackbaud.AppFx.Server.QueryViewField.ObjectName">
 <summary>
 The name of the view or table function to which the field corresponds.
 </summary>
 <remarks>
 This field is not represented in the <see cref="T:Blackbaud.AppFx.XmlTypes.QueryViewOutputField">OutputField</see> class and must be derived 
 from the <see cref="T:Blackbaud.AppFx.XmlTypes.QueryViewSpec">QueryViewSpec</see>.
 </remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.QueryViewField.PrimaryKey">
 <summary>
 Primary key of the view or table function.
 </summary>
 <remarks>
 This field is not represented in the <see cref="T:Blackbaud.AppFx.XmlTypes.QueryViewOutputField">OutputField</see> class and must be derived 
 from the <see cref="T:Blackbaud.AppFx.XmlTypes.QueryViewSpec">QueryViewSpec</see>.
 </remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.QueryViewField.AllowLookup">
 <summary>
 Flag which indicates whether the field is a lookup field (meaning the user is given a list of pre-defined options from which to choose).
 </summary>
 <remarks>
 This field is not directly represented in the <see cref="T:Blackbaud.AppFx.XmlTypes.QueryViewOutputField">OutputField</see> class and must be derived 
 from the <see cref="T:Blackbaud.AppFx.XmlTypes.QueryViewLookupInfo">LookupInfo</see> property of the <see cref="T:Blackbaud.AppFx.XmlTypes.QueryViewOutputField">OutputField</see>.
 </remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.QueryViewField.MaxLength">
 <summary>
 Represents the MAXIMUM_COLUMN_LENGTH value in the INFORMATION_SCHEMA.COLUMNS system view for the corresponding query view column.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Blackbaud.AppFx.Server.QueryViewField.IsDefaultOutput">
 <summary>
 Flag which indicates whether the field should be added to the ad-hoc query's output by default.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.QueryViewField.IDSetInfo">
 <summary>
 If the field is an ID set field, this holds information specific to the ID set.
 </summary>
 <remarks>
 This field is only active when the query field is totally derived from an ID set and should never have a value for a field
 which is represented in a <see cref="T:Blackbaud.AppFx.XmlTypes.QueryViewSpec">QueryViewSpec</see>.
 </remarks>
</member>
<member name="P:Blackbaud.AppFx.Server.QueryViewField.Name">
 <summary>
 Name of the query view field.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.QueryViewField.Caption">
 <summary>
 Caption of the query view field which will be presented on UI forms.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.QueryViewField.Category">
 <summary>
 Name of the category to which the query view field belongs.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.QueryViewField.DataType">
 <summary>
 Data type of the query view field.
 </summary>
 <remarks>
 <seealso cref="T:Blackbaud.AppFx.XmlTypes.FormFieldDataType"/>
 </remarks>
</member>
<member name="P:Blackbaud.AppFx.Server.QueryViewField.IsHidden">
 <summary>
 Indicates whether the query view field is hidden from the user.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.QueryViewField.LookupInfo">
 <summary>
 Contains information pertaining to how pre-defined values for the query view will be presented to a user, 
 such as a list of values in a drop-down list.
 </summary>
 <remarks>
 <seealso cref="T:Blackbaud.AppFx.XmlTypes.QueryViewLookupInfo"/>
 </remarks>
</member>
<member name="P:Blackbaud.AppFx.Server.QueryViewField.IsEncryptedField">
 <summary>
 Flag which indicates whether the field is encrypted or not.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.QueryViewField.AllowMonthDayOnFuzzyDate">
 <summary>
 Flag which indicates a fuzzy date field allows MonthDay values.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.QueryViewField.CurrencyFieldID">
 <summary>
 CurrencyFieldID of the query view field.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.QueryViewField.MultiValue">
 <summary>
 MultiValue of the query view field.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.QueryViewField.SupportsRollingDates">
 <summary>
 Indicates whether this field supports rolling date functionality.
 </summary>
 <returns>True if rolling date functionality is supported, else False.</returns>
 <remarks>
 Rolling date functionality is supported if the parent query view's data source supports rolling dates, the field is a date field, and there is a 
 corresponding DIMID field in the query view output.  For example, if the field is REVENUEDATE, it must be accompanied by a corresponding
 REVENUEDATEDIMID field in the query view output.
 </remarks>
</member>
<member name="P:Blackbaud.AppFx.Server.QueryViewField.DataMartLastRefresh">
 <summary>
 The date the mart was last refreshed.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.QueryViewField.IsIDSetField">
 <summary>
 Indicates whether the field is defined in the <see cref="T:Blackbaud.AppFx.XmlTypes.QueryViewSpec">QueryViewSpec</see> or is derived from an ID set.
 </summary>
 <returns>Boolean value.</returns>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.QueryViewField.LoadAsIDSetField(System.String,Blackbaud.AppFx.Server.QueryViewFieldIDSetInfo)">
 <summary>
 Loads a single query view field as an id set field
 </summary>
 <param name="objectName">Object name of the query view of the parent of the node represented by this field.</param>
 <param name="idSetInfo">The object containing the information about this id set</param>
 <remarks></remarks>
 <exception cref="T:System.ArgumentNullException">
 Thrown when <paramref name="idSetInfo"/><c> is Nothing</c>.
 </exception>
</member>
<member name="M:Blackbaud.AppFx.Server.QueryViewField.Load(Blackbaud.AppFx.XmlTypes.QueryViewSpec,Blackbaud.AppFx.XmlTypes.QueryViewOutputField,System.Boolean,System.DateTime)">
 <summary>
 Loads a single query field.
 </summary>
 <param name="spec">The <see cref="T:Blackbaud.AppFx.XmlTypes.QueryViewSpec">QueryViewSpec</see> which contains the output field and primary key information.</param>
 <param name="outputField">The <see cref="T:Blackbaud.AppFx.XmlTypes.QueryViewOutputField">OuputField</see> which contains the field information.</param>
 <param name="rollingDatesSupported">If the query view is based on a data warehouse, this indicates that the data warehouse supports rolling dates.</param>
 <param name="dataMartLastRefresh">If the query view is based on a data warehouse, this is the data the data warehouse was last refreshed.</param>
 <remarks>
 <seealso cref="T:Blackbaud.AppFx.XmlTypes.QueryViewSpec"/>
 <seealso cref="T:Blackbaud.AppFx.XmlTypes.QueryViewOutputField"/>
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.QueryViewField.Load(Blackbaud.AppFx.XmlTypes.QueryViewOutput,Blackbaud.AppFx.XmlTypes.QueryViewOutputField,System.String,System.String,System.String,System.Boolean,System.DateTime)">
 <summary>
 Loads a single query field.
 </summary>
 <param name="outputDefinition">The <see cref="T:Blackbaud.AppFx.XmlTypes.QueryViewOutput">Output</see> definition to which the field belongs.</param>
 <param name="outputField">The <see cref="T:Blackbaud.AppFx.XmlTypes.QueryViewOutputField">OuputField</see> which contains the field information.</param>
 <param name="objectName">Name of the view or table function to which the field corresponds.</param>
 <param name="primaryKeyField">Primary key of the view or table function.</param>
 <param name="martKey">The mart key of the field's query view.</param>
 <param name="rollingDatesSupported">If the query view is based on a data warehouse, this indicates that the data warehouse supports rolling dates.</param>
 <param name="dataMartLastRefresh">If the query view is based on a data warehouse, this is the data the data warehouse was last refreshed.</param>
 <remarks>
 <seealso cref="T:Blackbaud.AppFx.XmlTypes.QueryViewOutput"/>
 <seealso cref="T:Blackbaud.AppFx.XmlTypes.QueryViewOutputField"/>
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.QueryViewField.IsNumeric">
 <summary>
 Indicates whether the field can be used in operations requiring a numeric value.
 </summary>
 <returns>Boolean value.</returns>
 <remarks>
 <seealso cref="T:Blackbaud.AppFx.XmlTypes.FormFieldDataType"/>
 </remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.QueryViewGetLookUpValuesRequest">
 <summary>
 Returns a list of lookup values for a query field
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.QueryViewGetLookUpValuesReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.QueryViewGetLookUpValuesRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.QueryViewGetLookUpValuesProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.QueryViewGetLookUpValuesRequest" />
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.QueryViewGetLookUpValuesProcessor.GetLookupValuesForSimpleDataList(Blackbaud.AppFx.XmlTypes.FormFieldSimpleDataListDescriptor)">
 <summary>
 Executes a search list based on a query view output field's simple data list descriptor.
 </summary>
 <param name="simpleDataList">Simple data list descriptor.</param>
 <returns>Collection of output rows to be sent to the client.</returns>
 <remarks>
 <seealso cref="M:Blackbaud.AppFx.Server.ServiceMethods.SimpleDataListLoad(Blackbaud.AppFx.Server.SimpleDataListLoadRequest,Blackbaud.AppFx.Server.RequestContext)"/>
 </remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.QueryViewFieldLookupOutputRow">
 <summary>
 Represents a single row of query field lookup values
 </summary>
 <remarks>The query field lookup values Request returns an array of this class</remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.QueryViewGetMetaDataRequest">
 <summary>
 Returns the query view field definitions given the name or ID.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.QueryViewGetMetaDataReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.QueryViewGetMetaDataRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.QueryViewGetMetaDataProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.QueryViewGetMetaDataRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.QueryViewGetRootListRequest">
 <summary>
 Returns a list of query view root objects.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.QueryViewGetRootListReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.QueryViewGetRootListRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.QueryViewGetRootListProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.QueryViewGetRootListRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.QueryViewGetTreeRequest">
 <summary>
 Returns the initial query design tree for the given query type or root query object
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.QueryViewGetTreeReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.QueryViewGetTreeRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.QueryViewGetTreeProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.QueryViewGetTreeRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.QueryViewGetTreeNodeRequest">
 <summary>
 Returns a query tree node given the query view path
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.QueryViewGetTreeNodeRequest.LoadedRootViews">
 <summary>
 Optionally pass in a dictionary of root views that have already been checked to see if 
 they are a marketing effort segment member export query view or not for a performance improvement.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.QueryViewGetTreeNodeReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.QueryViewGetTreeNodeRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.QueryViewGetTreeNodeProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.QueryViewGetTreeNodeRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.QueryViewHelper">
 <summary>
 Provides commonly used functionality for manipuliating a <see cref="T:Blackbaud.AppFx.Server.QueryView"/>.
 </summary>
 <remarks>
 <seealso cref="N:Blackbaud.AppFx.SpWrap"/>
 <seealso cref="T:Blackbaud.AppFx.Server.QueryView"/>
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.QueryViewHelper.GetQueryViewMetaData(System.Data.SqlClient.SqlConnection,System.Guid)">
 <summary>
 Retrieves meta data for a query view from the database.
 </summary>
 <param name="connection">An open connection to the database.</param>
 <param name="queryViewID">ID of the <see cref="T:Blackbaud.AppFx.Server.QueryView"/> in the database.</param>
 <returns>Result row.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.QueryViewHelper.GetQueryViewMetaData(System.Data.SqlClient.SqlConnection,System.String)">
 <summary>
 Retrieves meta data for a query view from the database.
 </summary>
 <param name="connection">An open connection to the database.</param>
 <param name="objectName">Name of the view or table-valued function of the <see cref="T:Blackbaud.AppFx.Server.QueryView"/> in the database.</param>
 <returns>Result row.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.QueryViewHelper.DeserializeOutputDefinitionXML(System.String)">
 <summary>
 Deserializes a string of XML data to a <see cref="T:Blackbaud.AppFx.XmlTypes.QueryViewOutput"/> object.
 </summary>
 <param name="outputDefinitionXml">String containing the XML output definition.</param>
 <returns>Query view output definition.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.QueryViewHelper.CheckLoadState(System.Data.SqlClient.SqlConnection,Blackbaud.AppFx.Server.RequestContext,Blackbaud.AppFx.Server.QueryView@)">
 <summary>
 Checks a query view object to make sure all its properties are loaded, and if they are not, loads it from the database.
 </summary>
 <param name="connection">An open connection to the database.</param>
 <param name="context">Context of the current request.</param>
 <param name="queryViewToCheck">Query view to check.</param>
 <remarks>
 This method is useful in case the query view in question was passed down in a request with incomplete information
 (i.e. a query view object with only an ID or object name).
 </remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.QueryViewFieldIDSetInfo">
 <summary>
 Contains information specific to ID set fields which are available in the query designer.  This class is primarily used in conjunction
 with a <see cref="T:Blackbaud.AppFx.Server.QueryViewField"/>.
 </summary>
 <remarks>
 <seealso cref="T:Blackbaud.AppFx.Server.QueryView"/>
 <seealso cref="T:Blackbaud.AppFx.Server.QueryViewField"/>
 </remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.QueryViewFieldIDSetInfo.ID">
 <summary>
 ID of the ID set in the database.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.QueryViewFieldIDSetInfo.AdHocQueryID">
 <summary>
 ID of the ad-hoc query which generated the ID set (if any)
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.QueryViewFieldIDSetInfo.Name">
 <summary>
 Name of the ID set.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.QueryViewFieldIDSetInfo.Description">
 <summary>
 A description of the ID set.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.QueryViewFieldIDSetInfo.DbObjectName">
 <summary>
 Name of the function in the database which can be used in a SQL query to determine whether a record exists in the ID set.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.QueryViewFieldIDSetInfo.ObjectType">
 <summary>
 Type of the database object which represents the results of the ID set.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.QueryViewFieldIDSetInfo.QueryViewID">
 <summary>
 ID of the <see cref="T:Blackbaud.AppFx.Server.QueryView"/> to which the ID set is linked.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.QueryViewFieldIDSetInfo.Category">
 <summary>
 Category of the ad-hoc query or smart query instance which created the ID set where applicable.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.QueryViewTreeHelper.RemoveNodesNotAssigned(System.Data.SqlClient.SqlConnection,Blackbaud.AppFx.Server.RequestContext,Blackbaud.AppFx.Server.AppUserInfo,Blackbaud.AppFx.Server.QueryViewTreeNode,System.Boolean,Blackbaud.AppFx.XmlTypes.QueryViewRelationshipCardinalityType,System.Collections.Generic.Dictionary{System.String,System.Boolean},System.Collections.Generic.Dictionary{System.String,Blackbaud.AppFx.Server.QueryViewTreeHelper.QueryNodeMetaData}@,Blackbaud.AppFx.SpWrap.UFN_SECURITY_GETGRANTEDQUERYVIEWSFORUSER.ResultRow[]@)">
 <summary>
 The sql builder and other stuff has too many assumptions about being able to load a node, so rather 
 than try to filter out the loading of a node just post-process the results and remove nodes not assigned.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.QueryViewTreeHelper.RelationshipAllowedByInstalledProducts(Blackbaud.AppFx.Server.RequestContext,Blackbaud.AppFx.XmlTypes.QueryViewOutputField,Blackbaud.AppFx.XmlTypes.QueryViewOutputField)">
 <summary>
 Checks output fields on respective query specs to see if they are not blocked by a product flag.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.QueryViewTreeHelper.RelationshipAllowedByConditionSettings(Blackbaud.AppFx.Server.RequestContext,Blackbaud.AppFx.XmlTypes.QueryViewOutputField,Blackbaud.AppFx.XmlTypes.QueryViewOutputField)">
 <summary>
 Checks output fields on respective query specs to see if they satisfy a condition.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.QueryViewTreeNode.Fields">
 <summary>
 Fields that belong directly to this node
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.QueryViewTreeNode.Nodes">
 <summary>
 Any child nodes that may belong to this node
 </summary>
 <remarks></remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.RecordOperationPerformGetDeferredResultRequest">
 <summary>
 Gets the response from a recently executed record operation perform
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.RecordOperationPerformGetDeferredResultReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.RecordOperationPerformGetDeferredResultRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.RecordOperationPerformGetDeferredResultProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.RecordOperationPerformGetDeferredResultRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.RecordOperationPerformDeferredResultState">
 <summary>
 State information transfered from the record operation perform request processor to the
 record operation perform get deferred result request processor.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.RecordOperationGetMetaDataRequest">
 <summary>
 Returns the record operation parameter form definition given the name or ID
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.RecordOperationGetMetaDataReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.RecordOperationGetMetaDataRequest" />.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.RecordOperationGetMetaDataReply.Name">
 <summary>
 Contains the name of the record operation
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.RecordOperationGetMetaDataReply.ParameterDefinition">
 <summary>
 XML that contains the form definition for the parameters (if any)
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.RecordOperationGetMetaDataReply.RecordOperationSpec">
 <summary>
 Contains the record operation spec.  Only returned if <see cref="F:Blackbaud.AppFx.Server.RecordOperationGetMetaDataRequest.ReturnRecordOperationSpec"/> is set to true
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.RecordOperationGetMetaDataReply.TSLong">
 <summary>
 The TSLONG value from the dbo.RECORDOPERATIONCATALOG row.
 </summary>
 <remarks>This value can be used to know if the metadata has changed by comparing this field to a previously retrieved metadata reply.</remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.RecordOperationGetMetaDataProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.RecordOperationGetMetaDataRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.RecordOperationGetPromptRequest">
 <summary>
 Retrieves the prompt as defined by the supplied Record Operation name or ID
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.RecordOperationGetPromptRequest.SecurityContext">
 <summary>
 Allows the caller to indicate that this request is in the context of another operation.
 </summary>
 <remarks>If the user is granted rights to the operation indicated AND that operation implies this operation then the request will be granted.</remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.RecordOperationGetPromptReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.RecordOperationGetPromptRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.RecordOperationGetPromptProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.RecordOperationGetPromptRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.RecordOperationPerformRequest">
 <summary>
 Performs the operation on a record as defined by the supplied Record Operation name or ID
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.RecordOperationPerformRequest.SecurityContext">
 <summary>
 Allows the caller to indicate that this request is in the context of another operation.
 </summary>
 <remarks>If the user is granted rights to the operation indicated AND that operation implies this operation then the request will be granted.</remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.RecordOperationPerformRequest.IDList">
 <summary>
 Allows the caller to indicate that this record operation should be performed multiple times for each ID in the list
 </summary>
 <remarks>If a list of IDs is specified, the original <see cref="F:Blackbaud.AppFx.Server.RecordOperationPerformRequest.ID"/> parameter is ignored</remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.RecordOperationPerformRequest.ProcessWorkflowTriggers">
 <summary>
 Indicates whether or not to trigger workflows that have been configured for this record operation
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.RecordOperationPerformRequest.Parameters">
 <summary>
 The parameters for the record operation. Parameter values will be validated against the metadata defined.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.RecordOperationPerformRequest.IgnoreExtraFields">
 <summary>
 Indicates whether or not extra fields should be ignored
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.RecordOperationPerformReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.RecordOperationPerformRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.RecordOperationPerformProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.RecordOperationPerformRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ReportsExportRequest">
 <summary>
 Exports the content of a report.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ReportsExportReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.ReportsExportRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ReportsExportProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.ReportsExportRequest" />
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ReportHelper.GetReportPath(Blackbaud.AppFx.Server.RequestContext,System.Guid)">
 <summary>
 Returns the full report path for a particular report based on its catalog ID.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ReportHelper.GetReportPathFromReportServer(System.Guid)">
 <summary>
 Returns the full report path based on the report's ID on the report server.
 This supports reports which do not exist in the report catalog.
 </summary>
 <param name="rsReportId">The report's id on the report server. A report catalog id will NOT work.</param>
</member>
<member name="M:Blackbaud.AppFx.Server.ReportHelper.CheckSecurity(Blackbaud.AppFx.Server.RequestContext,System.Guid)">
 <summary>
 Checks whether the current user has access to the specified report.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ReportHelper.GetParentFolder(System.String)">
 <summary>
 Determines the path to the parent folder containing the specified file or folder.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ReportHelper.CreateProperty(System.String,System.String)">
 <summary>
 Creates a report property with the specified name and value.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ReportHelper.GetReportFormatProperties(System.String)">
 <summary>
 Returns some formatting properties associated with a report.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ReportHelper.GetRootPath(Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns the path of the root folder for the report tree.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ReportHelper.FixPathForReportServer(System.String)">
 <summary>
 Ensures the slashes in the report server path are "/"
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ReportHelper.EnsureSubFoldersExist(System.String,System.String,Blackbaud.AppFx.Server.SourceInfo)">
 <summary>
 Ensures the subfolder path exists under the specified root folder.  Creates any of the subfolder elements as needed.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ReportHelper.CreateFolder(System.String,System.String,System.String)">
 <summary>
 Creates a folder on the report server.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ReportHelper.FolderExists(System.String)">
 <summary>
 Determines if a folder exists on the report server
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ReportHelper.ReportExists(System.String,System.String)">
 <summary>
 Determines if a report exists on the report server
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ReportHelper.GetProperty(Blackbaud.AppFx.Reports.ServiceProxy.ReportingService2005,System.String,System.String)">
 <summary>
 Gets the property for a report server item if it exists, otherwise returns nothing.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ReportHelper.BuildFullyQualifiedFolderPath(System.String)">
 <summary>
 Builds the fully qualified folder path
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ReportHelper.BuildFullyQualifiedReportPath(System.String,System.String)">
 <summary>
 Builds the fully qualified report path
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ReportHelperCache">
 <summary>
 This class handles caching certain report 
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ReportsSaveLinkedReportRequest">
 <summary>
 Saves or updates a linked report.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ReportsSaveLinkedReportRequest.RenameBaseReport">
 <summary>
 If specified, the base report will be renamed instead
 of a copy being created.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ReportsSaveLinkedReportRequest.LinkedReportName">
 <summary>
 Name of the new report
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ReportsSaveLinkedReportReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.ReportsSaveLinkedReportRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ReportsSaveLinkedReportProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.ReportsSaveLinkedReportRequest" />
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ReportsSaveLinkedReportProcessor.PublishReportToCatalog(Blackbaud.AppFx.Reports.ServiceProxy.ReportingService2005,System.Guid,System.String,System.String,System.String,System.String,Blackbaud.AppFx.XmlTypes.FormMetaData,System.Guid,Blackbaud.AppFx.XmlTypes.DataForms.DataFormItem)">
 <param name="reportName">Name of report.</param>
 <param name="reportPath">Full path of report.</param>
 <param name="relativeReportFolder">Relative path to report folder (excluding the root path)</param>
</member>
<member name="T:Blackbaud.AppFx.Server.ReportsGetReportParametersRequest">
 <summary>
 Retrieves a list of parameters for a report.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ReportsGetReportParametersReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.ReportsGetReportParametersRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ReportsGetReportParametersProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.ReportsGetReportParametersRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ReportsGetReportSpecByNameRequest">
 <summary>
 Retrieves the Report Specification By Name
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ReportsGetReportSpecByNameReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.ReportsGetReportSpecByNameRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ReportsGetReportSpecByNameProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.ReportsGetReportSpecByNameRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ReportRootFoldersGetListRequest">
 <summary>
 Retrieves a list of Report Services root folders.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ReportRootFoldersGetListReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.ReportRootFoldersGetListRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ReportRootFoldersGetListProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.ReportRootFoldersGetListRequest" />
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ReportModelQueryViewNode.Fields">
 <summary>
 Fields that belong directly to this node
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ReportModelQueryViewNode.Nodes">
 <summary>
 Any child nodes that may belong to this node
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ReportsGenerateReportModelRequest">
 <summary>
 Generates a report model based on the provided query view metadata.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ReportsGenerateReportModelReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.ReportsGenerateReportModelRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ReportsGenerateReportModelProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.ReportsGenerateReportModelRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ReportsGetDataSourceRequest">
 <summary>
 Retrieves the fully qualified Report Service data source name for this database.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ReportsGetDataSourceReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.ReportsGetDataSourceRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ReportsGetDataSourceProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.ReportsGetDataSourceRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ReportsGetReportSpecRequest">
 <summary>
 Retrieves the Report Specification
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ReportsGetReportSpecReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.ReportsGetReportSpecRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ReportsGetReportSpecProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.ReportsGetReportSpecRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ReportsGetURLsRequest">
 <summary>
 Retrieves the Report Web Service and Report Rendering Engine URLs
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ReportsGetURLsReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.ReportsGetURLsRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ReportsGetURLsProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.ReportsGetURLsRequest" />
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ReportsGetURLsProcessor.GetDefaultReportBuilderPathByVersion(Blackbaud.AppFx.Reports.ServiceProxy.ServerInfoHeader)">
 <summary>
 Determines the appropriate default report builder path based on the version of Report Server
 that is being used.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ReportsPublishServerReportToCatalogRequest">
 <summary>
 Creates a report spec for a report that only exists on the SQL Server report server and loads that spec to the catalog.  This web service is used primarily to enable a report created by a user-generated report model to be used by Page Designer.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ReportsPublishServerReportToCatalogReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.ReportsPublishServerReportToCatalogRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ReportsPublishServerReportToCatalogProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.ReportsPublishServerReportToCatalogRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ReportViewerCredentials">
 <summary>
 A credentials object that can be supplied to a Microsoft.Reporting.WebForms.ReportViewer control to define the credentials used when connecting to the Report Server.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.RSSGetFeedRequest">
 <summary>
 Returns an RSS feed for the given datalistID.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.RSSGetFeedReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.RSSGetFeedRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.RSSGetFeedProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.RSSGetFeedRequest" />
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.RSSGetFeedBaseHelper.GetFeedXML">
 <summary>
 Builds the entire Feed XML.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.RSSGetFeedBaseHelper.BuildColumnInfo(System.Xml.XmlWriter)">
 <summary>
 Creates XML describing the columns in the feed.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.RSSGetFeedBaseHelper.BuildListInfoItem(System.Xml.XmlWriter,System.String,System.String,System.String,System.Boolean,Blackbaud.AppFx.XmlTypes.FormFieldDataType)">
 <summary>
 Creates XML describing an individual column in the feed.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.RSSGetFeedBaseHelper.BuildFeedItem(System.Xml.XmlWriter,System.String[])">
 <summary>
 Creates XML describing an individual row in the feed.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.RSSGetFeedBaseHelper.BuildAuthor(System.Xml.XmlWriter,System.String[])">
 <summary>
 Builds the XML describing the author of a feed item.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.RSSGetFeedBaseHelper.BuildCategories(System.Xml.XmlWriter,System.String[])">
 <summary>
 Builds the XML describing a feed items categories.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.RSSGetFeedBaseHelper.BuildRowDescription(System.Web.HttpContext,System.String[])">
 <summary>
 Builds the XML defining a description for a feed item.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.RSSGetFeedBaseHelper.FormatXMLDateForFeed(System.String)">
 <summary>
 Formats the standard XML date to a format required for consumption by RSS Feeds. 
 the format is based on the IETF RFC 1123 specification and is associated with the "r" format pattern
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.RSSGetFeedBaseHelper.FormatValue(Blackbaud.AppFx.Server.RSS.ItemFieldInfo,Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Formats an RSS ItemFieldInfo as a string
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.RSSGetFeedBaseHelper.GetStringFromResource(System.String,System.String)">
 <summary>
 Returns a string based on the specified caption and resourcekey.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.RSSGetFeedBaseHelper.GetStringFromResource(System.String,System.String,System.Resources.ResourceManager)">
 <summary>
 Returns a string based on the specified caption and resourcekey.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.RSSGetFeedBaseHelper.BuildStringFromViewForm(System.String,System.String,System.String[])">
 <summary>
 Builds a string based on the specified caption and resourcekey, replacing placeholders with fields from the View dataform.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.RSSGetFeedBaseHelper.BuildStringFromViewForm(System.String,System.String,System.String[],System.Boolean)">
 <summary>
 Builds a string based on the specified caption and resourcekey, replacing placeholders with fields from the View dataform, optionally encoding for HTML.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.RSSGetFeedBaseHelper.GetDatabaseNameVariable">
 <summary>
 Returns the querystring parameter to use for specifying the database name in a URL.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.RSSGetFeedBaseHelper.GetContextIdVariable">
 <summary>
 Returns the querystring parameter to use for specifying the context record ID in a URL.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.RSSGetFeedBaseHelper.GetBrowserUri(System.String)">
 <summary>
 Takes a querystring and hash portion of an URL and returns a full URL.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.RSSGetFeedBaseHelper.FixupLinkURL">
 <summary>
 Creates a URL based on the requested LinkUrl.  If the LinkURL used localhost, the current machinename is used instead.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.RSSGetFeedBaseHelper.GetImageURL(System.String)">
 <summary>
 Processes an image key to return a full image URL.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SearchListReplacementGetRequest">
 <summary>
 Gets the search list replacement ID given the search list ID
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SearchListReplacementGetReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.SearchListReplacementGetRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SearchListReplacementGetProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.SearchListReplacementGetRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SearchListAppSettings">
 <summary>
 Contains static AppSettingValue fields related to the SearchListLoadRequest processing.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.SearchListAppSettings.SearchListMaxRecordsDefault">
 <summary>
 The default number of records to return via the SearchListLoadRequest when the request MaxRecords attribute is 0 or not supplied.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.SearchListAppSettings.SearchListMaxRecordsMaximum">
 <summary>
 The maximum number of records to allow a client to request via the SearchListLoadRequest MaxRecords attribute.  If the client requests more than this number then this number will be returned.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.SearchListAppSettings.SearchListTimeOutSecondsDefault">
 <summary>
 The default seconds to timeout if the ClientAppInfo.TimeOutSeconds is 0.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.SearchListAppSettings.SearchListTimeOutSecondsMaximum">
 <summary>
 The maximum seconds to allow the ClientAppInfo.TimeOutSeconds to be.  If the request indicates a timeout larger than this value then this value will be used instead.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.SearchListFormSupportsWebUIRequest">
 <summary>
 Determines whether or not the specified search list's parameter form can be rendered in a web browser.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SearchListFormSupportsWebUIReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.SearchListFormSupportsWebUIRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SearchListFormSupportsWebUIProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.SearchListFormSupportsWebUIRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SearchListGetListRequest">
 <summary>
 Returns a list of search list entries given the record type
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SearchListGetListReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.SearchListGetListRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SearchListGetListProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.SearchListGetListRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SearchListGetMetaDataRequest">
 <summary>
 Returns the search list field definitions and filter form definition given the name or ID.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SearchListGetMetaDataRequest.IgnoreCustomSettings">
 <summary>
 Set this to true if you want all of the search list metadata returned regardless of the custom settings that have been applied
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SearchListGetMetaDataReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.SearchListGetMetaDataRequest" />.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SearchListGetMetaDataReply.OutputDefinition">
 <summary>
 Contains the output field information for the search list
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SearchListGetMetaDataReply.FilterFormDefinition">
 <summary>
 Contains the form definition for the search list filters
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SearchListGetMetaDataReply.SearchListSpec">
 <summary>
 Contains the search list spec.  Only returned if <see cref="F:Blackbaud.AppFx.Server.SearchListGetMetaDataRequest.ReturnSearchListSpec"/> is set to true
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SearchListGetMetaDataReply.OptionalOutputFields">
 <summary>
 Returns a list of optional output fields defined for this search list
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SearchListGetMetaDataReply.OptionalFilterFields">
 <summary>
 Returns a list of optional filter fields defined for this search list
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SearchListGetMetaDataProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.SearchListGetMetaDataRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SearchListGetTranslationRequest">
 <summary>
 Returns the translation text for a search list entry ID
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SearchListGetTranslationReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.SearchListGetTranslationRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SearchListGetTranslationProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.SearchListGetTranslationRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SearchListLoadRequest">
 <summary>
 Gets the data for a search list given the search list ID or Name and any filters
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SearchListLoadRequest.CancelID">
 <summary>
 Optional. If you intend to cancel this request at a future point, you can provide a unique ID which you will use to identify this request for cancellation.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.SearchListLoadRequest.Spec">
 <summary>
 Optionally specify a search list spec for a performance improvement. Please do not
 pass in an instance referencable from the search list meta data cache; make sure it gets
 cloned first.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SearchListLoadReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.SearchListLoadRequest" />.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SearchListLoadReply.RequestCancelled">
 <summary>
 Indicates that the request was cancelled before it finished processing
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SearchListLoadProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.SearchListLoadRequest" />
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SearchListLoadProcessor._requestWasCanceled">
 There are four ways that a search list can run: 
 1) A SQL Search List
 2) A CLR Search List returns a SqlCommand with no connection
 3) A CLR Search List returns a DbCommand with an attached connection
 4) A CLR Search List returns a list of output rows 
 
 In the case of 1), then the search is run by the _cancelHelper and canceling is handled easily by that helper.
 In the case of 2), after the CLR Search returns the SqlCommand, we run it by the _cancelHelper and canceling is handled by that helper. 
 In the case of 3), after the CLR Search returns the DbCommand, it's run synchronously. Once it's done running, cancellation may be handled by exiting the 
     loop that reads the results from the returned DbDataReader
 In the case of 4), no cancellation is possible. 
 Note that in the case of 2) - 4) above (the CLR searches), cancellation is limited. In all cases, the CLR execution itself cannot be cancelled. 
 For everything which can be cancelled that isn't being run by _cancelHelper, _requestWasCanceled will be set to indicate (ahem) that the request was canceled. 
 Case 2) can check it before running the cancel helper. Case 3) can check it inside the DbDataReader read loop. Case 1) and 4) can ignore it. 
 IMPORTANT: This variable should only be set or read inside a SyncLock on _lockObject
</member>
<member name="T:Blackbaud.AppFx.Server.GetSiteHierarchyRequest">
 <summary>
 Retrieves the current site hierarchy.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.GetSiteHierarchyReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.GetSiteHierarchyRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.GetSiteHierarchyProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.GetSiteHierarchyRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SiteFilterGetRowsRequest">
 <summary>
 Retrieves information needed to load the popup for site filtering.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SiteFilterGetRowsReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.SiteFilterGetRowsRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SiteFilterGetRowsProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.SiteFilterGetRowsRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SystemRoleAddWebLocalUserRequest">
 <summary>
 Adds the local user account on the web server identified by the given name to the System Role with the supplied ID
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SystemRoleAddWebLocalUserReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.SystemRoleAddWebLocalUserRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SystemRoleAddWebLocalUserProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.SystemRoleAddWebLocalUserRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.GetADGroupSidRequest">
 <summary>
 Returns the Active Directory group sid given the group name
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.GetADGroupSidReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.GetADGroupSidRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.GetADGroupSidProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.GetADGroupSidRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.RequestSecurityContext">
 <summary>
 Allows a request to indicate that the request is in the context of another operation and the security should be applied in that context
 </summary>
 <remarks>If a request is being made in the context of another operation then the request will be granted if the other operation implies that this request is part of that operation.</remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.RequestSecurityContext.SecurityFeatureID">
 <summary>
 Contains the ID of the Security Feature that will be used as a security context for the request
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.RequestSecurityContext.SecurityFeatureType">
 <summary>
 Contains the Type of the Security Feature that will be used as a security context for the request
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.RequestSecurityContext.RecordContext">
 <summary>
 The specific record that this feature is in the context of.  Optional and only necessary when record level security needs to be evaluated.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.RequestSecurityContext.AttributeContext">
 <summary>
 The specific attribute category that this feature is in context of.  Optional and only necessary when the data form is used to add or edit attribute records and implied security needs to be validated.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.SelectionGetQueryInfoRequest">
 <summary>
 Returns the type of query (Ad-hoc or Smart) that a selection is based on.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SelectionGetQueryInfoReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.SelectionGetQueryInfoRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SelectionGetQueryInfoProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.SelectionGetQueryInfoRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.DataSourceGetLastUpdatedRequest">
 <summary>
 Returns the date a given data source was last updated.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.DataSourceGetLastUpdatedReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.DataSourceGetLastUpdatedRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.DataSourceGetLastUpdatedProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.DataSourceGetLastUpdatedRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.GetFiscalYearLastMonthRequest">
 <summary>
 Returns the FISCALYEARLASTMONTH value from the INSTALLATIONINFO table.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.GetFiscalYearLastMonthReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.GetFiscalYearLastMonthRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.GetFiscalYearLastMonthProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.GetFiscalYearLastMonthRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.GetFormatPhonesSettingRequest">
 <summary>
 Returns the FORMATPHONES value from the INSTALLATIONINFO table.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.GetFormatPhonesSettingReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.GetFormatPhonesSettingRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.GetFormatPhonesSettingProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.GetFormatPhonesSettingRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.InvokeServiceRequest">
 <summary>
 Invokes a generic service.  Provide assembly and class name to define the generic service to run.  Service parameters are defined in a dataformitem.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.InvokeServiceReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.InvokeServiceRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.InvokeServiceProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.InvokeServiceRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ServiceInfoGetRequest">
 <summary>
 Returns various server properties such as version information.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ServiceInfoGetReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.ServiceInfoGetRequest" />.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ServiceVersionInfo.ServiceVersion">
 <remarks>This value has been superseded by the AssemblyVersion field.</remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.ServiceInfoGetProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.ServiceInfoGetRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ShellFeatureSearchRequest">
 <summary>
 Returns a list of application features based on the specified criteria.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ShellFeatureSearchReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.ShellFeatureSearchRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ShellFeatureSearchProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.ShellFeatureSearchRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ShellGetBrandOptionsRequest">
 <summary>
 Returns the branding options for the application, which is used to build the Shell UI.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ShellGetBrandOptionsReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.ShellGetBrandOptionsRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ShellGetBrandOptionsProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.ShellGetBrandOptionsRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ShellGetQuickFindTasksRequest">
 <summary>
 Returns a list of tasks for the current user that go to a page via a search list that supports quick find
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ShellGetQuickFindTasksReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.ShellGetQuickFindTasksRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ShellGetQuickFindTasksProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.ShellGetQuickFindTasksRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ShellGetTaskRequest">
 <summary>
 Returns information about the specified task and its respective functional area defined in the system.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ShellGetTaskReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.ShellGetTaskRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ShellGetTaskProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.ShellGetTaskRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ShellGetTaskStatusRequest">
 <summary>
 Returns information about the completion status of the specified task.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ShellGetTaskStatusReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.ShellGetTaskStatusRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ShellGetTaskStatusProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.ShellGetTaskStatusRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ShellGetTaskWizardRequest">
 <summary>
 Returns information about the specified task wizard.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ShellGetTaskWizardReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.ShellGetTaskWizardRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ShellGetTaskWizardProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.ShellGetTaskWizardRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ShellGetUIWidgetRequest">
 <summary>
 Returns information about the specified UI widget defined in the system.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ShellGetUIWidgetReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.ShellGetUIWidgetRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ShellGetUIWidgetProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.ShellGetUIWidgetRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ShellGetUserAvailableUIWidgetsRequest">
 <summary>
 Gets a list of UI widgets available for the current user to add to a functional area.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ShellGetUserAvailableUIWidgetsReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.ShellGetUserAvailableUIWidgetsRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ShellGetUserAvailableUIWidgetsProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.ShellGetUserAvailableUIWidgetsRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SecurityUserGrantedFeatureRequest">
 <summary>
 Used to determine if the requesting user has been granted (and not denied) a feature in a system role.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SecurityUserGrantedFeatureReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.SecurityUserGrantedFeatureRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SecurityUserGrantedFeatureProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.SecurityUserGrantedFeatureRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SecurityGetRoleFeaturePermTreeRequest">
 <summary>
 Returns information the granted and denied features for a specific System Role.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SecurityGetRoleFeaturePermTreeReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.SecurityGetRoleFeaturePermTreeRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SecurityGetRoleFeaturePermTreeProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.SecurityGetRoleFeaturePermTreeRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SyncRoleUsersRequest">
 <summary>
 Adds users in the supplied userXML into the role defined by the supplied role ID
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SyncRoleUsersReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.SyncRoleUsersRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SyncRoleUsersProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.SyncRoleUsersRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CurrentUserInfoGetRequest">
 <summary>
 Returns information about the calling user.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CurrentUserInfoGetReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.CurrentUserInfoGetRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.CurrentUserInfoGetProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.CurrentUserInfoGetRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.PingRequest">
 <summary>
 Used to test availability of the service.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.PingRequest.MessageToEcho">
 <summary>
 A string to echo back from the service
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.PingRequest.ConnectToDatabase">
 <summary>
 Set to True to test the database connection
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.PingReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.PingRequest" />.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.PingReply.EchoedMessage">
 <summary>
 The PingRequest.MessageToEcho
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.PingReply.DBSPID">
 <summary>
 The SPID of the test connection to the database
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.PingProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.PingRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SessionEndRequest">
 <summary>
 Releases session state associated with the user.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SessionEndReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.SessionEndRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SessionEndProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.SessionEndRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SessionEndOneWayRequest">
 <summary>
 Releases session state associated with the user.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.GetAvailableREDatabasesRequest">
 <summary>
 Returns the list of RE databases that are available.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.GetAvailableREDatabasesReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.GetAvailableREDatabasesRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.GetAvailableREDatabasesProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.GetAvailableREDatabasesRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ShellGetAllTasksRequest">
 <summary>
 Returns information about all tasks and their respective functional areas defined in the system.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ShellGetAllTasksReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.ShellGetAllTasksRequest" />.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ShellGetAllTasksReply.Areas">
 <summary>
 The output rows
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ShellGetAllTasksProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.ShellGetAllTasksRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ShellGetNavigationRequest">
 <summary>
 Returns the navigation tree for the current user, which is used to build the Shell UI.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ShellGetNavigationReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.ShellGetNavigationRequest" />.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ShellGetNavigationReply.Areas">
 <summary>
 The output rows
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ShellFunctionalAreaInfo.Tasks">
 <summary>
 The list of tasks
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ShellFunctionalAreaTaskInfo.TaskDependencies">
 <summary>
 List of other tasks that this task is dependent upon.
 </summary>
 <remarks>Only valid for Task Wizards.</remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.ShellGetNavigationProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.ShellGetNavigationRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartFieldSupportsWebUIRequest">
 <summary>
 Determines whether or not the specified Smart Field can be rendered in a web browser.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartFieldSupportsWebUIRequest.ID">
 <summary>
 The Smart Field catalog ID
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartFieldSupportsWebUIRequest.IsInstance">
 <summary>
 Indicates whether the ID parameter is a global change catalog ID or an instance ID
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartFieldSupportsWebUIReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.SmartFieldSupportsWebUIRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartFieldSupportsWebUIProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.SmartFieldSupportsWebUIRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartFieldParametersLoadRequest">
 <summary>
 Returns the saved parameters for a smart field instance.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartFieldParametersLoadReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.SmartFieldParametersLoadRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartFieldParametersLoadProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.SmartFieldParametersLoadRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartFieldInformationRequest">
 <summary>
 Returns information on a given smart field definition
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartFieldInformationReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.SmartFieldInformationRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartFieldInformationProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.SmartFieldInformationRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartFieldListReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.SmartFieldListRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartFieldListProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.SmartFieldListRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartFieldListRequest">
 <summary>
 Returns a list of all available smart fields.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartQueryLoadDeferredResultState">
 <summary>
 State information transfered from the smart query load request processor to the
 smart query load get deferred result request processor.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartQueryLoadGetDeferredResultRequest">
 <summary>
 Gets the response from a recently executed smart query load
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartQueryLoadGetDeferredResultReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.SmartQueryLoadGetDeferredResultRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartQueryLoadGetDeferredResultProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.SmartQueryLoadGetDeferredResultRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartQueryInstanceUserGrantedRequest">
 <summary>
 Used to determine if the requesting user has been granted (and not denied) permission to edit a smart query instance with the given ID.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartQueryInstanceUserGrantedReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.SmartQueryInstanceUserGrantedRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartQueryInstanceUserGrantedProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.SmartQueryInstanceUserGrantedRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartQuerySupportsWebUIRequest">
 <summary>
 Determines whether or not the specified Smart Query can be rendered in a web browser.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartQuerySupportsWebUIRequest.ID">
 <summary>
 The Smart Query catalog ID
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartQuerySupportsWebUIReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.SmartQuerySupportsWebUIRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartQuerySupportsWebUIProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.SmartQuerySupportsWebUIRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartQueryAppSettings">
 <summary>
 Contains static AppSettingValue fields related to the SmartQueryProcessRequest processing.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartQueryAppSettings.SmartQueryMaxRecordsDefault">
 <summary>
 The default number of records to return via the SmartQueryProcessRequest when the request MaxRecords attribute is 0 or not supplied.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartQueryAppSettings.SmartQueryMaxRecordsMaximum">
 <summary>
 The maximum number of records to allow a client to request via the SmartQueryProcessRequest MaxRecords attribute.  If the client requests more than this number then this number will be returned.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartQueryAppSettings.SmartQueryTimeOutSecondsDefault">
 <summary>
 The default seconds to timeout if the ClientAppInfo.TimeOutSeconds is 0.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartQueryAppSettings.SmartQueryTimeOutSecondsMaximum">
 <summary>
 The maximum seconds to allow the ClientAppInfo.TimeOutSeconds to be.  If the request indicates a timeout larger than this value then this value will be used instead.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartQueryRefreshStaticIDSetRequest">
 <summary>
 Refreshes the set of IDs in a Static Selection created from a Smart query.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartQueryRefreshStaticIDSetReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.SmartQueryRefreshStaticIDSetRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartQueryRefreshStaticIDSetProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.SmartQueryRefreshStaticIDSetRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartQuery">
 <summary>
 Represents attributes of a smart query which the user has defined in a <see cref="T:Blackbaud.AppFx.XmlTypes.SmartQuerySpec"/>.
 </summary>
 <remarks>
 <seealso cref="T:Blackbaud.AppFx.XmlTypes.SmartQueryOutput"/>
 </remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartQuery.ID">
 <summary>
 ID of the smart query in the database.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartQuery.Name">
 <summary>
 Name of the smart query.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartQuery.RecordType">
 <summary>
 Record type of the results from the smart query.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartQuery.RecordTypeID">
 <summary>
 Record type of the results from the smart query.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartQuery.TvfName">
 <summary>
 Name of the table-valued function which produces the results for the smart query.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartQuery.TvfParameterList">
 <summary>
 List of parameters for the table-valued function in their proper order and separated by commas.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartQuery.OutputDefinition">
 <summary>
 Contains information about the fields that will be output by the smart query.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartQuery.FormDefinition">
 <summary>
 Contains information for the form which will be presented to the user for the smart query.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartQuery.SmartQuerySpecXml">
 <summary>
 XML string which defines the smart query.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.SmartQuery.PrimaryKeyField">
 <summary>
 The primary key field which represents the ID which will be stored in an ID set for the smart query.
 </summary>
 <returns>Primary key field from the <see cref="T:Blackbaud.AppFx.XmlTypes.SmartQuerySpec"/>.</returns>
 <remarks></remarks>
</member>
<member name="P:Blackbaud.AppFx.Server.SmartQuery.SmartQuerySpecType">
 <summary>
 This property gives access to the loaded SmartQuerySpecType
 </summary>
 <returns>XmlTypes.SmartQuerySpec <see cref="T:Blackbaud.AppFx.XmlTypes.SmartQuerySpec"/>.</returns>
 <remarks></remarks>
</member>
<member name="P:Blackbaud.AppFx.Server.SmartQuery.ResourceFile">
 <summary>
 This property gives access to the ResourceFile element of the SmartQuerySpec
 </summary>
 <returns>XmlTypes.ComponentIdentifier <see cref="T:Blackbaud.AppFx.XmlTypes.ComponentIdentifier"/>.</returns>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartQuery.MartKey">
 <summary>
 The data mart descriptor defined in the smart query spec
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartQuery.TVFSchema">
 <summary>
 Name of the schema for the table-valued function that returns results for the smart query
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.SmartQuery.AdHocQuerySaveRequest(Blackbaud.AppFx.Server.RequestContext,System.Boolean,System.Boolean)">
 <summary>
 If this smart query was defined by an Ad-Hoc Query, returns the ad-hoc query save request providing the definition. Otherwise, returns Nothing. 
 </summary>
 <param name="removeInvalidFields">Flag indicating whether to remove ad-hoc query fields that do not have corresponding query view fields.</param>
 <param name="throwOnInvalidFields">Flag indicating whether to throw an exception if missing query view fields are encountered</param>
</member>
<member name="M:Blackbaud.AppFx.Server.SmartQuery.GetAdHocQuerySaveRequest(Blackbaud.AppFx.Server.RequestContext,Blackbaud.AppFx.XmlTypes.SmartQuerySpec)">
 <summary>
 If the smart query indicated by the spec was defined by an Ad-Hoc Query, returns the ad-hoc query save request providing the definition. Otherwise, returns Nothing. 
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.SmartQuery.GetAdHocQuerySaveRequest(Blackbaud.AppFx.Server.RequestContext,Blackbaud.AppFx.XmlTypes.SmartQuerySpec,System.Boolean,System.Boolean)">
 <summary>
 If the smart query indicated by the spec was defined by an Ad-Hoc Query, returns the ad-hoc query save request providing the definition. Otherwise, returns Nothing. 
 </summary>
 <param name="removeInvalidFields">Flag indicating whether to remove ad-hoc query fields that do not have corresponding query view fields.</param>
 <param name="throwOnInvalidFields">Flag indicating whether to throw an exception if missing query view fields are encountered</param>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartQueryInstance">
 <summary>
 Represents an instance of a smart query which the user has defined, including values the user has chosen and other miscellaneous information.
 </summary>
 <remarks>
 <seealso cref="P:Blackbaud.AppFx.Server.SmartQueryInstance.SmartQuery"/>
 </remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartQueryInstance.ID">
 <summary>
 ID of the record in the SmartQueryInstance table.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartQueryInstance.Name">
 <summary>
 User-defined name of the smart query instance.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartQueryInstance.Description">
 <summary>
 User-defined description of the smart query instance.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartQueryInstance.SiteID">
 <summary>
 User-defined site associated with the smart query instance.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartQueryInstance.AddedByID">
 <summary>
 ID of the user who added the ad-hoc query record to the database
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartQueryInstance.AddedByUserName">
 <summary>
 User name of the user who added the ad-hoc query record to the database
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartQueryInstance.ChangedByID">
 <summary>
 ID of the user who last made a change to the ad-hoc query record in the database
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartQueryInstance.ChangedByUserName">
 <summary>
 User name of the user who last made a change to the ad-hoc query record in the database
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartQueryInstance.DateAdded">
 <summary>
 Date the ad-hoc query record was added to the database
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartQueryInstance.DateChanged">
 <summary>
 Date the query record was last changed in the database
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartQueryInstance.CategoryID">
 <summary>
 User-defined category to which the smart query instance belongs.
 </summary>
 <remarks>Links to a code table entry</remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartQueryInstance.DefaultDataFormID">
 <summary>
 ID of the data form in which a record from the smart query instance results can be opened.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartQueryInstance.Filter">
 <summary>
 Contains the list of values by which the smart query will be filtered.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartQueryInstance.IDSetInfo">
 <summary>
 Contains the information for the ID set that corresponds to the smart query instance (if any).
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartQueryInstance.FolderID">
 <summary>
 Folder that contains the ad-hoc query.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartQueryInstance.Owner">
 <summary>
 User name of the application user who created the smart query instance.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartQueryInstance.OwnerID">
 <summary>
 ID of the application user who created the smart query instance.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartQueryInstance.OthersCanModify">
 <summary>
 Indicates whether another application user can modify this smart query instance.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartQueryInstance.SecurityLevel">
 <summary>
 Indiciates whether all roles or selected roles can run this query.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.SmartQueryInstance.SmartQuery">
 <summary>
 Smart query on which the smart query instance is based.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.SmartQueryInstance.GetStaticIDSetTableName(Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Calls a SQL function to retrieve the static ID set table name that will be created if the smart query instance has its ID set info defined.
 </summary>
 <param name="context">The request context from which the method is being called.</param>
 <returns>Static ID set table name.</returns>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartQueryInstanceDeleteRequest">
 <summary>
 Deletes the smart query instance given the smart query instance ID.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartQueryInstanceDeleteReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.SmartQueryInstanceDeleteRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartQueryInstanceDeleteProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.SmartQueryInstanceDeleteRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartQueryInstanceGetIDByNameRequest">
 <summary>
 Returns the smart query instance system ID given the name
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartQueryInstanceGetIDByNameReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.SmartQueryInstanceGetIDByNameRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartQueryInstanceGetIDByNameProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.SmartQueryInstanceGetIDByNameRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartQueryInstanceGetMetaDataRequest">
 <summary>
 Returns the data input by a user for a Smart Query
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartQueryInstanceGetMetaDataReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.SmartQueryInstanceGetMetaDataRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartQueryInstanceGetMetaDataProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.SmartQueryInstanceGetMetaDataRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartQueryInstanceSaveRequest">
 <summary>
 Saves the data input by a user for a Smart Query
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartQueryInstanceSaveReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.SmartQueryInstanceSaveRequest" />.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartQueryInstanceSaveReply.AddedByID">
 <summary>
 ID of the user who added the ad-hoc query record to the database.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartQueryInstanceSaveReply.AddedByUserName">
 <summary>
 User name of the user who added the ad-hoc query record to the database.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartQueryInstanceSaveReply.ChangedByID">
 <summary>
 ID of the user who last made a change to the ad-hoc query record in the database.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartQueryInstanceSaveReply.ChangedByUserName">
 <summary>
 User name of the user who last made a change to the ad-hoc query record in the database.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartQueryInstanceSaveReply.DateAdded">
 <summary>
 Date the ad-hoc query record was added to the database.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartQueryInstanceSaveReply.DateChanged">
 <summary>
 Date the query record was last changed in the database.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartQueryInstanceSaveReply.Owner">
 <summary>
 User name of the application user who created the smart query instance.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartQueryInstanceSaveReply.OwnerID">
 <summary>
 ID of the application user who created the smart query instance.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartQueryInstanceSaveReply.OthersCanModify">
 <summary>
 Indicates whether another application user can modify this smart query instance.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartQueryInstanceSaveReply.IDSetRegisterID">
 <summary>
 ID of the corresponding ID set in the ID set register table (if any).
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartQueryInstanceSaveProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.SmartQueryInstanceSaveRequest" />
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.SmartQueryInstanceSaveProcessor.CreateOrUpdateIDSet(System.Data.SqlClient.SqlConnection,Blackbaud.AppFx.Server.SmartQueryInstance,System.Nullable{System.Guid})">
 <summary>
 Creates a set of IDs from the results of a smart query and saves them to a SQL table.
 </summary>
 <param name="conn">Open connection to the database.</param>
 <param name="smartQueryInstance">Smart query instance which contains the smart query and filter information necessary to execute the smart query.</param>
 <param name="changeAgentID">ID of current user.</param>
 <remarks>
 <seealso cref="T:Blackbaud.AppFx.Server.SmartQuery"/>
 <seealso cref="T:Blackbaud.AppFx.Server.SmartQueryInstanceIDSetInfo"/>
 <seealso cref="T:Blackbaud.AppFx.Server.SmartQueryHelper"/>
 <seealso cref="N:Blackbaud.AppFx.Server.DataForms"/>
 <seealso cref="T:Blackbaud.AppFx.Server.ImplementationType"/>
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.SmartQueryInstanceSaveProcessor.DeleteIDSet(System.Data.SqlClient.SqlConnection,System.Guid,System.Guid)">
 <summary>
 Deletes the ID set associated with a given smart query instance.
 </summary>
 <param name="conn">Open connection to the database.</param>
 <param name="smartQueryInstanceID">ID of the smart query instance associated with the ID set to be deleted.</param>
 <param name="changeAgentID">ID of current user.</param>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartQueryLoadRequest">
 <summary>
 Gets the data for a smart query given the smart query ID or Name and any filters
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.SmartQueryLoadRequest.OverrideMaxRecordLimit">
 <summary>
 Allows code with a direct reference to <see cref="N:Blackbaud.AppFx.Server" /> (as opposed to client-side code calling a SOAP endpoint)
 to override the maximum record count defined by <see cref="F:Blackbaud.AppFx.Server.SmartQueryAppSettings.SmartQueryMaxRecordsMaximum" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartQueryLoadReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.SmartQueryLoadRequest" />.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartQueryLoadReply.Output">
 <summary>
 Generic output containing metadata and values for smart query process
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartQueryLoadReply.FieldNames">
 <summary>
 The list of field names which correspond with each result row's values.  Useful for when the query view has no ouput definition.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.SmartQueryLoadReply.Sql">
 <summary>
 SQL statement that was used to generate the results. This statement may require additional parameters to be set before it can be used.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartQueryLoadProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.SmartQueryLoadRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartQueryGetMetaDataRequest">
 <summary>
 Returns the smart query field definitions and filter form definition given the name or ID.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartQueryGetMetaDataReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.SmartQueryGetMetaDataRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartQueryGetMetaDataProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.SmartQueryGetMetaDataRequest" />
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.SmartQueryGetMetaDataProcessor.ValidateArgs(System.Data.SqlClient.SqlConnection)">
 <summary>
 Validates the request object.
 </summary>
 <param name="conn">An open connection to the database.</param>
 <exception cref="T:Blackbaud.AppFx.Server.ServiceException">Missing smart query ID or name.</exception>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartQueryHelper">
 <summary>
 Provides common functionality for smart query and smart query instance.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.SmartQueryHelper.GetQueryViewMetaData(System.Data.SqlClient.SqlConnection,System.Guid)">
 <summary>
 Retrieves meta data for a smart query from the database.
 </summary>
 <param name="connection">An open connection to the database.</param>
 <param name="smartQueryViewID">ID of the smart query in the database.</param>
 <returns>Result row.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.SmartQueryHelper.GetSmartQueryInstance(System.Data.SqlClient.SqlConnection,System.Guid,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Gets a smart query instance from the database.
 </summary>
 <param name="conn">An open connection to the database.</param>
 <param name="id">ID of the smart query instance in the database.</param>
 <param name="ctx">The current request context.</param>
 <param name="evaluateProductFlags">If true, form fields will have product flags evaluated.</param>
 <returns>The smart query instance in the database.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.SmartQueryHelper.GetSmartQueryInstance(System.Data.SqlClient.SqlConnection,System.Guid,Blackbaud.AppFx.Server.RequestContext,System.Boolean,System.Boolean)">
 <summary>
 Gets a smart query instance from the database.
 </summary>
 <param name="conn">An open connection to the database.</param>
 <param name="id">ID of the smart query instance in the database.</param>
 <param name="ctx">The current request context.</param>
 <param name="evaluateProductFlags">If true, form fields will have product flags evaluated.</param>
 <returns>The smart query instance in the database.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.SmartQueryHelper.GetSmartQueryInstance(System.Data.SqlClient.SqlConnection,System.Guid,Blackbaud.AppFx.Server.RequestContext,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
 <summary>
 Gets a smart query instance from the database.
 </summary>
 <param name="conn">An open connection to the database.</param>
 <param name="id">ID of the smart query instance in the database.</param>
 <param name="ctx">The current request context.</param>
 <param name="evaluateProductFlags">If true, form fields will have product flags evaluated.</param>
 <param name="removeInvalidFields">Flag indicating whether to remove ad-hoc query fields that do not have corresponding query view fields.</param>
 <param name="throwOnInvalidFields">Flag indicating whether to throw an exception if missing query view fields are encountered</param>
 <returns>The smart query instance in the database.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.SmartQueryHelper.GetSmartQuery(System.Data.SqlClient.SqlConnection,System.Guid,Blackbaud.AppFx.Server.RequestContext,System.Boolean)">
 <summary>
 Gets a smart query from the database.
 </summary>
 <param name="conn">An open connection to the database.</param>
 <param name="id">ID of the smart query in the database.</param>
 <param name="ctx">The current request context.</param>
 <param name="evaluateProductFlags">If true, form fields will have product flags evaluated.</param>
 <returns>The smart query from the database.</returns>
 <remarks>
 <seealso cref="T:Blackbaud.AppFx.Server.SmartQueryDefObjects"/>
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.SmartQueryHelper.GetSmartQuery(System.Data.SqlClient.SqlConnection,System.Guid,Blackbaud.AppFx.Server.RequestContext,System.Boolean,System.Boolean,System.Boolean)">
 <summary>
 Gets a smart query from the database.
 </summary>
 <param name="conn">An open connection to the database.</param>
 <param name="id">ID of the smart query in the database.</param>
 <param name="ctx">The current request context.</param>
 <param name="evaluateProductFlags">If true, form fields will have product flags evaluated.</param>
 <param name="removeInvalidFields">Flag indicating whether to remove ad-hoc query fields that do not have corresponding query view fields.</param>
 <param name="throwOnInvalidFields">Flag indicating whether to throw an exception if missing query view fields are encountered</param>
 <returns>The smart query from the database.</returns>
 <remarks>
 <seealso cref="T:Blackbaud.AppFx.Server.SmartQueryDefObjects"/>
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.SmartQueryHelper.AddUniqueNamesToSmartQueryOutputDefinition(Blackbaud.AppFx.Server.RequestContext,Blackbaud.AppFx.Server.SmartQuery,System.Boolean,System.Boolean)">
 <summary>
 
 </summary>
 <param name="requestContext"></param>
 <param name="smartQuery"></param>
 <param name="removeInvalidFields">Flag indicating whether to remove ad-hoc query fields that do not have corresponding query view fields.</param>
 <param name="throwOnInvalidFields">Flag indicating whether to throw an exception if missing query view fields are encountered</param>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.SmartQueryHelper.DeserializeOutputXml(System.String)">
 <summary>
 Creates a <see cref="T:Blackbaud.AppFx.XmlTypes.SmartQueryOutput"/> object based on the output XML defined for the smart query.
 </summary>
 <param name="outputXml">String which contains the output definition XML.</param>
 <returns>Instance of <see cref="T:Blackbaud.AppFx.XmlTypes.SmartQueryOutput"/>.</returns>
 <remarks>
 <seealso cref="T:Blackbaud.AppFx.XmlTypes.SmartQueryOutput"/>
 <seealso cref="T:System.Xml.Serialization.XmlSerializer"/>
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.SmartQueryHelper.DeserializeFilterXml(System.String)">
 <summary>
 Creates a <see cref="T:Blackbaud.AppFx.XmlTypes.DataForms.DataFormItem">DataFormItem</see> object based on the filter XML defined for the smart query.
 </summary>
 <param name="filterXml">String which contains the filter XML.</param>
 <returns>Instance of <see cref="T:Blackbaud.AppFx.XmlTypes.DataForms.DataFormItem">DataFormItem</see>.</returns>
 <remarks>
 <seealso cref="T:Blackbaud.AppFx.XmlTypes.SmartQueryOutput"/>
 <seealso cref="T:System.Xml.Serialization.XmlSerializer"/>
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.SmartQueryHelper.GetIDSetTableName(System.Data.SqlClient.SqlConnection,System.Guid)">
 <summary>
 Calls a SQL function to get the name of the static ID set SQL table which will hold the IDs from the smart query results.
 </summary>
 <param name="conn">An open connection to the database.</param>
 <param name="smartQueryInstanceID">ID of the smart query instance in the database which contains the smart query and filter information needed to execute the smart query..</param>
 <returns>Name of the ID set table.</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.SmartQueryHelper.ValidateFilter(Blackbaud.AppFx.XmlTypes.SmartQueryFormDefinition,Blackbaud.AppFx.XmlTypes.DataForms.DataFormItem)">
 <summary>
 Validates a smart query instance filter against the fields defined in a smart query form definition.
 </summary>
 <param name="formDefinition">Form definition of the smart query.</param>
 <param name="filter">Filter of the smart query instance.</param>
</member>
<member name="M:Blackbaud.AppFx.Server.SmartQueryHelper.GetValuesForSmartQueryParameterFilterField(Blackbaud.AppFx.Server.AdHocQuerySelectField,Blackbaud.AppFx.Server.QueryOperatorType,Blackbaud.AppFx.XmlTypes.DataForms.DataFormItem,System.Collections.Generic.Dictionary{System.String,Blackbaud.AppFx.Server.AdHocQuerySelectField},System.Collections.Generic.Dictionary{System.String,System.String})">
 <remarks>Returns nothing if no values could be determined</remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.SmartQueryHelper.FixupCodeTableFieldValues(Blackbaud.AppFx.Server.RequestContext,Blackbaud.AppFx.XmlTypes.FormFieldCodeTableDescriptor,Blackbaud.AppFx.Server.SmartQueryHelper.SmartQueryParameterValues)">
 <summary>
 For code table paramters, which do not have a value translation specified, look up the translation and fill it in.
 </summary>
 <param name="requestContext">A standard RequestContext.</param>
 <param name="codeTable">The code table descriptor specified as the LookupInfo for the query field backed by this parameter.</param>
 <param name="originalValues">Obtained from GetValuesForSmartQueryParameterFilterField()</param>
 <returns>A SmartQueryParameterValues object where the TranslatedValues property is filled in with the best information available.</returns>
 <remarks>In most cases, a translation can be found for each entry (if it's not already present).</remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.SmartQueryHelper.CloneQuery(Blackbaud.AppFx.Server.RequestContext,Blackbaud.AppFx.Server.AdHocQuery,System.Boolean)">
 <summary>
 Makes a copy of an <see cref="T:Blackbaud.AppFx.Server.AdHocQuery" />.
 </summary>
 <param name="context">A valid <see cref="T:Blackbaud.AppFx.Server.RequestContext" />.</param>
 <param name="query">The <see cref="T:Blackbaud.AppFx.Server.AdHocQuery" /> to be copied.</param>
 <returns>A copy of the query passed in.</returns>
 <remarks>
 This is a quick and dirty clone method that clones an AdHocQuery well enough to let GetSmartQueryAdHocQuerySQL do what it needs to do.  It will not necessarily
 clone non-serializable members, and so its code should not be used for the implementation of a true Clone method.
 </remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartQueryGetListRequest">
 <summary>
 Returns a list of smart query entries given the record type
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartQueryGetListReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.SmartQueryGetListRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SmartQueryGetListProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.SmartQueryGetListRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SessionStartRequest">
 <summary>
 Returns a session key to be used to maintain client state between calls to the service.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SessionStartReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.SessionStartRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.SessionStartProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.SessionStartRequest" />
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.BatchSettings.ShowContextWindow">
 <summary>
 Indicates whether or not to show the row context window.
 </summary>
 <remarks>This is only applicable if the batch type has a row context window specified.</remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.BatchSettings.ShowSummaryPanel">
 <summary>
 Indicates whether or not to show the summary panel.
 </summary>
 <remarks>This is only applicable if the batch type has a summary panel specified.</remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.BatchSettings.Maximized">
 <summary>
 Indicates whether or not the batch was last left in a maximized state.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.BatchSettings.Width">
 <summary>
 Indicates the width of the Batch Data Entry Form.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.BatchSettings.Height">
 <summary>
 Indicates the height of the Batch Data Entry Form.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.BatchSettingsGetRequest">
 <summary>
 Returns the set of user settings available for a given batch type.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.BatchSettingsGetReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.BatchSettingsGetRequest" />.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.BatchSettingsGetReply.Settings">
 <summary>
 The batch settings for the current app user for the specified batch type
 </summary>
 <remarks></remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.BatchSettingsGetProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.BatchSettingsGetRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.BatchSettingsSaveRequest">
 <summary>
 Saves the batch settings defined by the current application user for a given batch type.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.BatchSettingsSaveRequest.Settings">
 <summary>
 The settings to save
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.BatchSettingsSaveReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.BatchSettingsSaveRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.BatchSettingsSaveProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.BatchSettingsSaveRequest" />
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ShellSettings.MenuBar">
 <summary>
 Indicates whether or not the Menu Bar should be shown in the shell
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.ShellSettings.StatusBar">
 <summary>
 Indicates whether or not the Status Bar should be shown in the shell
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.ShellSettings.ExplorerBar">
 <summary>
 Indicates whether or not the Explorer Bar should be shown in the shell
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.ShellSettings.FavoritesBar">
 <summary>
 Indicates whether or not the Favorites Bar should be shown in the shell
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.ShellSettings.HistoryBar">
 <summary>
 Indicates whether or not the History Bar should be shown in the shell
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.ShellSettings.ShowToolbarText">
 <summary>
 Indicates whether or not to show the functional area names on the toolbar.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.ShellSettings.Maximized">
 <summary>
 Indicates whether or not the shell was last left in a maximized state.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.ShellSettings.SearchBar">
 <summary>
 Indicates whether or not the search toolbar is visible in the shell
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.ShellSettings.ProductViewsActionPanelCollapsed">
 <summary>
 Indicates whether or not the product views panel in the action bar of the shell is collapsed or expanded.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.ShellSettings.ActionBarCollapsed">
 <summary>
 Indicates whether or not the action bar of the shell is collapsed or expanded.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ShellSettings.SearchHistory.QuickFindTaskID">
 <summary>
 Indicates the task ID that was used for the most recent quick find.  If empty, then it assumes a standard feature search.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ShellFunctionalAreaSettings.Pinned">
 <summary>
 Indicates whether or not the functional area is pinned on the menu.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ShellSettingsGetRequest">
 <summary>
 Returns the set of user settings available for the shell application.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ShellSettingsGetReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.ShellSettingsGetRequest" />.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ShellSettingsGetReply.Settings">
 <summary>
 The shell settings for the current app user
 </summary>
 <remarks></remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.ShellSettingsGetProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.ShellSettingsGetRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ShellSettingsSaveRequest">
 <summary>
 Saves the shell settings defined by the current application user
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.ShellSettingsSaveRequest.Settings">
 <summary>
 The settings to save
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ShellSettingsSaveReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.ShellSettingsSaveRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ShellSettingsSaveProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.ShellSettingsSaveRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserDataFormSettingsGetRequest">
 <summary>
 Returns the user settings for a data form.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserDataFormSettingsGetReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.UserDataFormSettingsGetRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserDataFormSettingsGetProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.UserDataFormSettingsGetRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserDataFormSettingsUpdateRequest">
 <summary>
 Updates the user settings for a data form.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserDataFormSettingsUpdateReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.UserDataFormSettingsUpdateRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserDataFormSettingsUpdateProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.UserDataFormSettingsUpdateRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserDataListSettingsGetRequest">
 <summary>
 Returns the user settings for a data list.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserDataListSettingsGetReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.UserDataListSettingsGetRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserDataListSettingsGetProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.UserDataListSettingsGetRequest" />
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.UserFavoriteList.Favorites">
 <summary>
 A list containing the user favorites
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.DefaultHomePageSettings.Tasks">
 <summary>
 A list containing the tasks to be displayed on the home page
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.UserFavorite.Name">
 <summary>
 User-defined name of the favorite
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.UserFavorite.ImageKey">
 <summary>
 User-defined imagekey of the favorite
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.UserFavorite.RecordType">
 <summary>
 Record type of the favorite
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserFavoritesGetRequest">
 <summary>
 Returns the favorites defined for the current application user
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserFavoritesGetReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.UserFavoritesGetRequest" />.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.UserFavoritesGetReply.Favorites">
 <summary>
 A list containing the user favorites
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserFavoritesGetProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.UserFavoritesGetRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserFavoritesSaveRequest">
 <summary>
 Saves the favorites defined by the current application user
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.UserFavoritesSaveRequest.Favorites">
 <summary>
 A list containing the user favorites
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserFavoritesSaveReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.UserFavoritesSaveRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserFavoritesSaveProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.UserFavoritesSaveRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserHomePageGetRequest">
 <summary>
 Returns the home page defined for the current application user
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserHomePageGetReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.UserHomePageGetRequest" />.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.UserHomePageGetReply.UserHomePage">
 <summary>
 The user home page
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserHomePageGetProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.UserHomePageGetRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserHomePageSaveRequest">
 <summary>
 Saves the home page defined by the current application user
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.UserHomePageSaveRequest.UserHomePage">
 <summary>
 The user home page
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserHomePageSaveReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.UserHomePageSaveRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserHomePageSaveProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.UserHomePageSaveRequest" />
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.MultiPageHistory.History">
 <summary>
 A list containing the page history
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserMultiPageHistoryGetRequest">
 <summary>
 Returns the page history defined for the current application user for the given set of pages
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.UserMultiPageHistoryGetRequest.PageIDs">
 <summary>
 The set of pages for which the history should be retrieved 
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.UserMultiPageHistoryGetRequest.MaxNumberOfPages">
 <summary>
 The maximum number of pages to return sorted by last date accessed.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserMultiPageHistoryGetReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.UserMultiPageHistoryGetRequest" />.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.UserMultiPageHistoryGetReply.History">
 <summary>
 A list containing the history for the requested pages
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserMultiPageHistoryGetProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.UserMultiPageHistoryGetRequest" />
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.UserPageHistoryItem.Name">
 <summary>
 Page caption
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.UserPageHistoryItem.ImageKey">
 <summary>
 Page header image
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.UserPageHistoryItem.ContextRecordID">
 <summary>
 Context ID of the page
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.UserPageHistory.HistoryItemList">
 <summary>
 A list containing the user history for the page
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserPageHistoryGetRequest">
 <summary>
 Returns the page history defined for the current application user
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.UserPageHistoryGetRequest.PageID">
 <summary>
 The ID of the page
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserPageHistoryGetReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.UserPageHistoryGetRequest" />.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.UserPageHistoryGetReply.History">
 <summary>
 A list containing the page history
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserPageHistoryGetProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.UserPageHistoryGetRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserPageHistoryUpdateRequest">
 <summary>
 Updates the name, image key and context id for the specified page history for the current application user
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.UserPageHistoryUpdateRequest.PageID">
 <summary>
 The ID of the page
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.UserPageHistoryUpdateRequest.Name">
 <summary>
 Updated page caption
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.UserPageHistoryUpdateRequest.ImageKey">
 <summary>
 Updated page header image
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.UserPageHistoryUpdateRequest.ContextRecordID">
 <summary>
 Updated context ID of the page
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserPageHistoryUpdateReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.UserPageHistoryUpdateRequest" />.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.UserPageHistoryUpdateReply.History">
 <summary>
 A list containing the updated page history
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserPageHistoryUpdateProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.UserPageHistoryUpdateRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserPrimarySiteGetRequest">
 <summary>
 Returns the primary site defined for the current application user.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.UserPrimarySiteGetRequest.AppUserID">
 <summary>
 The user's ID.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserPrimarySiteGetReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.UserPrimarySiteGetRequest" />.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.UserPrimarySiteGetReply.SiteID">
 <summary>
 The user's primary site.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserPrimarySiteGetProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.UserPrimarySiteGetRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserSearchListTaskHistoryGetRequest">
 <summary>
 Returns the user settings for a search list task.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserSearchListTaskHistoryGetReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.UserSearchListTaskHistoryGetRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserSearchListTaskHistoryGetProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.UserSearchListTaskHistoryGetRequest" />
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserSearchListTaskHistoryGetListRequest">
 <summary>
 Returns the user's search task history.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserSearchListTaskHistoryGetListReply">
 <summary>
 Reply for <see cref="T:Blackbaud.AppFx.Server.UserSearchListTaskHistoryGetListRequest" />.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.UserSearchListTaskHistoryGetListProcessor">
 <summary>
 Processes a <see cref="T:Blackbaud.AppFx.Server.UserSearchListTaskHistoryGetListRequest" />
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.RSS.ItemRenderer.RenderUsingMetaData">
 <summary>
 This property determines which <see cref="M:Blackbaud.AppFx.Server.RSS.ItemRenderer.AppendItemTableRow(System.Text.StringBuilder,Blackbaud.AppFx.XmlTypes.DataListOutputFieldType,System.String)"/> method is called when building the html content.  If this property is True, then the metadata is passed in as an argument.  If False, only the caption is passed in as an argument.  The default is False.
 </summary>
 <returns>Returns a Boolean value that determines whether additional formatting is applied to the content based on the field metadata</returns>
</member>
<member name="M:Blackbaud.AppFx.Server.RSS.ItemRenderer.AppendItemTableRow(System.Text.StringBuilder,Blackbaud.AppFx.XmlTypes.DataListOutputFieldType,System.String)">
 <summary>
 This is used to build the content for an individual field in the list.  This method is called if the <see cref="P:Blackbaud.AppFx.Server.RSS.ItemRenderer.RenderUsingMetaData"/> is set to True and the the ItemFieldInfo is based on a DataListOutputFieldType.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.RSS.ItemRenderer.AppendItemTableRow(System.Text.StringBuilder,Blackbaud.AppFx.XmlTypes.QueryViewOutputField,System.String)">
 <summary>
 This is used to build the content for an individual field in the list.  This method is called if the <see cref="P:Blackbaud.AppFx.Server.RSS.ItemRenderer.RenderUsingMetaData"/> is set to True and the the ItemFieldInfo is based on a QueryViewOutputField.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.RSS.ItemRenderer.AppendItemTableRow(System.Text.StringBuilder,System.String,System.String)">
 <summary>
 This is used to build the content for an individual field in the list.  This method is called if the <see cref="P:Blackbaud.AppFx.Server.RSS.ItemRenderer.RenderUsingMetaData"/> is set to False.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AppService">
 <summary>
 The web service fascade base class for the Blackbaud Applicaton Framework Server.
 </summary>
 <remarks>This class exposes the WebMethods that serve as the entry point into the features of the Blackbaud Application Framework service.
 <para>
 All WebMethod methods use doc/literal/bare with a single parameter.
 All WebMethod methods have a single parameter and the parameter and reply type have explicity XMLElement names specified.
 This helps with interoperability and enforces the "message-ness" of the methods.
 </para>
 <para>
 To implement a custom service modelled on the Blackbaud AppService pattern inherit from this class and use the DispatchRequest method
 to invoke the RequestProcessor for your message
 </para>
 </remarks>
 
</member>
<member name="T:Blackbaud.AppFx.Server.SemanticModeling.AttributeReferenceType">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.AttributeReferenceType.Path">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.AttributeReferenceType.AttributeID">
<remarks/>
</member>
<member name="T:Blackbaud.AppFx.Server.SemanticModeling.AttributeType">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.AttributeType.Name">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.AttributeType.Description">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.AttributeType.Hidden">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.AttributeType.HiddenSpecified">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.AttributeType.CustomProperties">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.AttributeType.Variations">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.AttributeType.DataType">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.AttributeType.Nullable">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.AttributeType.NullableSpecified">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.AttributeType.Expression">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.AttributeType.IsAggregate">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.AttributeType.IsAggregateSpecified">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.AttributeType.IsFilter">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.AttributeType.IsFilterSpecified">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.AttributeType.OmitSecurityFilters">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.AttributeType.OmitSecurityFiltersSpecified">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.AttributeType.SortDirection">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.AttributeType.SortDirectionSpecified">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.AttributeType.Width">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.AttributeType.WidthSpecified">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.AttributeType.Alignment">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.AttributeType.AlignmentSpecified">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.AttributeType.Format">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.AttributeType.MimeType">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.AttributeType.DataCulture">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.AttributeType.DiscourageGrouping">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.AttributeType.DiscourageGroupingSpecified">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.AttributeType.EnableDrillthrough">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.AttributeType.EnableDrillthroughSpecified">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.AttributeType.ContextualName">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.AttributeType.ContextualNameSpecified">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.AttributeType.DefaultAggregateAttributeID">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.AttributeType.ValueSelection">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.AttributeType.ValueSelectionSpecified">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.AttributeType.Column">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.AttributeType.ID">
<remarks/>
</member>
<member name="T:Blackbaud.AppFx.Server.SemanticModeling.EntityType">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.EntityType.Name">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.EntityType.Description">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.EntityType.Hidden">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.EntityType.HiddenSpecified">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.EntityType.CustomProperties">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.EntityType.CollectionName">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.EntityType.IdentifyingAttributes">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.EntityType.DefaultDetailAttributes">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.EntityType.DefaultAggregateAttributes">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.EntityType.SortAttributes">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.EntityType.InstanceSelection">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.EntityType.IsLookup">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.EntityType.IsLookupSpecified">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.EntityType.Inheritance">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.EntityType.DisjointInheritance">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.EntityType.DisjointInheritanceSpecified">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.EntityType.Fields">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.EntityType.SecurityFilters">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.EntityType.DefaultSecurityFilter">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.EntityType.Table">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.EntityType.Column">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.EntityType.ID">
<remarks/>
</member>
<member name="T:Blackbaud.AppFx.Server.SemanticModeling.FieldFolderType">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.FieldFolderType.Name">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.FieldFolderType.Description">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.FieldFolderType.Hidden">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.FieldFolderType.HiddenSpecified">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.FieldFolderType.CustomProperties">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.FieldFolderType.Fields">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.FieldFolderType.ID">
<remarks/>
</member>
<member name="T:Blackbaud.AppFx.Server.SemanticModeling.LiteralType">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.LiteralType.DataType">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.LiteralType.Value">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.LiteralType.Values">
<remarks/>
</member>
<member name="T:Blackbaud.AppFx.Server.SemanticModeling.RoleType">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.RoleType.Name">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.RoleType.Description">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.RoleType.Hidden">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.RoleType.HiddenSpecified">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.RoleType.CustomProperties">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.RoleType.Variations">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.RoleType.Linguistics">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.RoleType.RelatedRoleID">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.RoleType.Cardinality">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.RoleType.ContextualName">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.RoleType.ContextualNameSpecified">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.RoleType.HiddenFields">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.RoleType.Preferred">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.RoleType.PreferredSpecified">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.RoleType.PromoteLookup">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.RoleType.PromoteLookupSpecified">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.RoleType.ExpandInline">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.RoleType.ExpandInlineSpecified">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.RoleType.Relation">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.RoleType.ID">
<remarks/>
</member>
<member name="T:Blackbaud.AppFx.Server.SemanticModeling.SemanticModel">
<remarks/>
</member>
<member name="M:Blackbaud.AppFx.Server.SemanticModeling.SemanticModel.GetHashID(System.String[])">
 <summary>
 Generates an ID for a report model item based on a series of input strings.  The result is an XmlQualifiedName with a value consisting of a "GUID"
 based on a 128-bit hash of the concatenation of the input strings.  This method guarantees that for a given series of strings, the same ID will 
 always be generated.  This was necessary for round-tripping a model to ensure that reports based on the model still function after the model has 
 been regenerated.
 </summary>
 <param name="args">Series of input strings that, when combined, indicates a unique description of the model item.</param>
 <returns>The ID generated from the hash of the combined input strings.</returns>
 <exception cref="T:System.ArgumentException">Occurs when no input strings are specified in the args ParamArray.</exception>
 <remarks>
 <seealso cref="N:System.Security.Cryptography"/>
 <seealso cref="T:System.Security.Cryptography.MD5"/>
 <seealso cref="T:System.Text.Encoding"/>
 </remarks>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.SemanticModel.Description">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.SemanticModel.Version">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.SemanticModel.Culture">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.SemanticModel.Entities">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.SemanticModel.Perspectives">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.SemanticModel.CustomProperties">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.SemanticModel.ID">
<remarks/>
</member>
<member name="T:Blackbaud.AppFx.Server.SemanticModeling.CustomPropertyType">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.CustomPropertyType.Value">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.CustomPropertyType.Name">
<remarks/>
</member>
<member name="T:Blackbaud.AppFx.Server.SemanticModeling.ParameterType">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.ParameterType.DataType">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.ParameterType.Nullable">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.ParameterType.NullableSpecified">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.ParameterType.Cardinality">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.ParameterType.CardinalitySpecified">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.ParameterType.Expression">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.ParameterType.Name">
<remarks/>
</member>
<member name="T:Blackbaud.AppFx.Server.SemanticModeling.LiteralDataTypeEnum">
<remarks/>
</member>
<member name="F:Blackbaud.AppFx.Server.SemanticModeling.LiteralDataTypeEnum.String">
<remarks/>
</member>
<member name="F:Blackbaud.AppFx.Server.SemanticModeling.LiteralDataTypeEnum.Integer">
<remarks/>
</member>
<member name="F:Blackbaud.AppFx.Server.SemanticModeling.LiteralDataTypeEnum.Decimal">
<remarks/>
</member>
<member name="F:Blackbaud.AppFx.Server.SemanticModeling.LiteralDataTypeEnum.Float">
<remarks/>
</member>
<member name="F:Blackbaud.AppFx.Server.SemanticModeling.LiteralDataTypeEnum.Boolean">
<remarks/>
</member>
<member name="F:Blackbaud.AppFx.Server.SemanticModeling.LiteralDataTypeEnum.DateTime">
<remarks/>
</member>
<member name="F:Blackbaud.AppFx.Server.SemanticModeling.LiteralDataTypeEnum.EntityKey">
<remarks/>
</member>
<member name="T:Blackbaud.AppFx.Server.SemanticModeling.ParameterTypeCardinality">
<remarks/>
</member>
<member name="F:Blackbaud.AppFx.Server.SemanticModeling.ParameterTypeCardinality.One">
<remarks/>
</member>
<member name="F:Blackbaud.AppFx.Server.SemanticModeling.ParameterTypeCardinality.Many">
<remarks/>
</member>
<member name="T:Blackbaud.AppFx.Server.SemanticModeling.ExpressionType">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.ExpressionType.Path">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.ExpressionType.Function">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.ExpressionType.AttributeRef">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.ExpressionType.EntityRef">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.ExpressionType.ParameterRef">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.ExpressionType.Literal">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.ExpressionType.Null">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.ExpressionType.CustomProperties">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.ExpressionType.Name">
<remarks/>
</member>
<member name="T:Blackbaud.AppFx.Server.SemanticModeling.RolePathItemType">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.RolePathItemType.RoleID">
<remarks/>
</member>
<member name="T:Blackbaud.AppFx.Server.SemanticModeling.FunctionType">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.FunctionType.FunctionName">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.FunctionType.Arguments">
<remarks/>
</member>
<member name="T:Blackbaud.AppFx.Server.SemanticModeling.AttributeRefType">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.AttributeRefType.AttributeID">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.AttributeRefType.AttributeName">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.AttributeRefType.AggregationPath">
<remarks/>
</member>
<member name="T:Blackbaud.AppFx.Server.SemanticModeling.EntityRefType">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.EntityRefType.EntityID">
<remarks/>
</member>
<member name="T:Blackbaud.AppFx.Server.SemanticModeling.ParameterRefType">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.ParameterRefType.ParameterName">
<remarks/>
</member>
<member name="T:Blackbaud.AppFx.Server.SemanticModeling.NullType">
<remarks/>
</member>
<member name="T:Blackbaud.AppFx.Server.SemanticModeling.SubtotalSetType">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.SubtotalSetType.SubtotalGroupings">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.SubtotalSetType.SubtotalMeasures">
<remarks/>
</member>
<member name="T:Blackbaud.AppFx.Server.SemanticModeling.MeasureGroupType">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.MeasureGroupType.BaseEntity">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.MeasureGroupType.Measures">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.MeasureGroupType.SubtotalSets">
<remarks/>
</member>
<member name="T:Blackbaud.AppFx.Server.SemanticModeling.BaseEntityType">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.BaseEntityType.EntityID">
<remarks/>
</member>
<member name="T:Blackbaud.AppFx.Server.SemanticModeling.GroupingType">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.GroupingType.Expression">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.GroupingType.Details">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.GroupingType.Name">
<remarks/>
</member>
<member name="T:Blackbaud.AppFx.Server.SemanticModeling.HierarchyType">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.HierarchyType.BaseEntity">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.HierarchyType.Groupings">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.HierarchyType.Filter">
<remarks/>
</member>
<member name="T:Blackbaud.AppFx.Server.SemanticModeling.HierarchyTypeFilter">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.HierarchyTypeFilter.Expression">
<remarks/>
</member>
<member name="T:Blackbaud.AppFx.Server.SemanticModeling.PerspectiveType">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.PerspectiveType.Name">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.PerspectiveType.Description">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.PerspectiveType.ModelItems">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.PerspectiveType.CustomProperties">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.PerspectiveType.ID">
<remarks/>
</member>
<member name="T:Blackbaud.AppFx.Server.SemanticModeling.EntityFolderType">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.EntityFolderType.Name">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.EntityFolderType.Description">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.EntityFolderType.Hidden">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.EntityFolderType.HiddenSpecified">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.EntityFolderType.CustomProperties">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.EntityFolderType.Entities">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.EntityFolderType.ID">
<remarks/>
</member>
<member name="T:Blackbaud.AppFx.Server.SemanticModeling.TableType">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.TableType.Name">
<remarks/>
</member>
<member name="T:Blackbaud.AppFx.Server.SemanticModeling.DefaultSecurityFilterType">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.DefaultSecurityFilterType.AttributeReference">
<remarks/>
</member>
<member name="T:Blackbaud.AppFx.Server.SemanticModeling.LinguisticsType">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.LinguisticsType.SingularName">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.LinguisticsType.PluralName">
<remarks/>
</member>
<member name="T:Blackbaud.AppFx.Server.SemanticModeling.RoleTypeCardinality">
<remarks/>
</member>
<member name="F:Blackbaud.AppFx.Server.SemanticModeling.RoleTypeCardinality.One">
<remarks/>
</member>
<member name="F:Blackbaud.AppFx.Server.SemanticModeling.RoleTypeCardinality.Many">
<remarks/>
</member>
<member name="F:Blackbaud.AppFx.Server.SemanticModeling.RoleTypeCardinality.OptionalOne">
<remarks/>
</member>
<member name="F:Blackbaud.AppFx.Server.SemanticModeling.RoleTypeCardinality.OptionalMany">
<remarks/>
</member>
<member name="T:Blackbaud.AppFx.Server.SemanticModeling.RoleTypeContextualName">
<remarks/>
</member>
<member name="F:Blackbaud.AppFx.Server.SemanticModeling.RoleTypeContextualName.Default">
<remarks/>
</member>
<member name="F:Blackbaud.AppFx.Server.SemanticModeling.RoleTypeContextualName.Role">
<remarks/>
</member>
<member name="F:Blackbaud.AppFx.Server.SemanticModeling.RoleTypeContextualName.Merge">
<remarks/>
</member>
<member name="T:Blackbaud.AppFx.Server.SemanticModeling.RelationType">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.RelationType.Name">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.RelationType.RelationEnd">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.RelationType.RelationEndSpecified">
<remarks/>
</member>
<member name="T:Blackbaud.AppFx.Server.SemanticModeling.RelationTypeRelationEnd">
<remarks/>
</member>
<member name="F:Blackbaud.AppFx.Server.SemanticModeling.RelationTypeRelationEnd.Source">
<remarks/>
</member>
<member name="F:Blackbaud.AppFx.Server.SemanticModeling.RelationTypeRelationEnd.Target">
<remarks/>
</member>
<member name="T:Blackbaud.AppFx.Server.SemanticModeling.DataTypeEnum">
<remarks/>
</member>
<member name="F:Blackbaud.AppFx.Server.SemanticModeling.DataTypeEnum.String">
<remarks/>
</member>
<member name="F:Blackbaud.AppFx.Server.SemanticModeling.DataTypeEnum.Integer">
<remarks/>
</member>
<member name="F:Blackbaud.AppFx.Server.SemanticModeling.DataTypeEnum.Decimal">
<remarks/>
</member>
<member name="F:Blackbaud.AppFx.Server.SemanticModeling.DataTypeEnum.Float">
<remarks/>
</member>
<member name="F:Blackbaud.AppFx.Server.SemanticModeling.DataTypeEnum.Boolean">
<remarks/>
</member>
<member name="F:Blackbaud.AppFx.Server.SemanticModeling.DataTypeEnum.DateTime">
<remarks/>
</member>
<member name="F:Blackbaud.AppFx.Server.SemanticModeling.DataTypeEnum.Binary">
<remarks/>
</member>
<member name="F:Blackbaud.AppFx.Server.SemanticModeling.DataTypeEnum.EntityKey">
<remarks/>
</member>
<member name="T:Blackbaud.AppFx.Server.SemanticModeling.SortDirectionEnum">
<remarks/>
</member>
<member name="F:Blackbaud.AppFx.Server.SemanticModeling.SortDirectionEnum.Ascending">
<remarks/>
</member>
<member name="F:Blackbaud.AppFx.Server.SemanticModeling.SortDirectionEnum.Descending">
<remarks/>
</member>
<member name="T:Blackbaud.AppFx.Server.SemanticModeling.AttributeTypeAlignment">
<remarks/>
</member>
<member name="F:Blackbaud.AppFx.Server.SemanticModeling.AttributeTypeAlignment.General">
<remarks/>
</member>
<member name="F:Blackbaud.AppFx.Server.SemanticModeling.AttributeTypeAlignment.Left">
<remarks/>
</member>
<member name="F:Blackbaud.AppFx.Server.SemanticModeling.AttributeTypeAlignment.Center">
<remarks/>
</member>
<member name="F:Blackbaud.AppFx.Server.SemanticModeling.AttributeTypeAlignment.Right">
<remarks/>
</member>
<member name="T:Blackbaud.AppFx.Server.SemanticModeling.AttributeTypeContextualName">
<remarks/>
</member>
<member name="F:Blackbaud.AppFx.Server.SemanticModeling.AttributeTypeContextualName.Attribute">
<remarks/>
</member>
<member name="F:Blackbaud.AppFx.Server.SemanticModeling.AttributeTypeContextualName.Role">
<remarks/>
</member>
<member name="F:Blackbaud.AppFx.Server.SemanticModeling.AttributeTypeContextualName.Merge">
<remarks/>
</member>
<member name="T:Blackbaud.AppFx.Server.SemanticModeling.AttributeTypeValueSelection">
<remarks/>
</member>
<member name="F:Blackbaud.AppFx.Server.SemanticModeling.AttributeTypeValueSelection.None">
<remarks/>
</member>
<member name="F:Blackbaud.AppFx.Server.SemanticModeling.AttributeTypeValueSelection.Dropdown">
<remarks/>
</member>
<member name="F:Blackbaud.AppFx.Server.SemanticModeling.AttributeTypeValueSelection.List">
<remarks/>
</member>
<member name="T:Blackbaud.AppFx.Server.SemanticModeling.ColumnType">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.ColumnType.TableName">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.ColumnType.Name">
<remarks/>
</member>
<member name="T:Blackbaud.AppFx.Server.SemanticModeling.SortAttributeType">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.SortAttributeType.AttributeReference">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.SortAttributeType.SortDirection">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.SortAttributeType.SortDirectionSpecified">
<remarks/>
</member>
<member name="T:Blackbaud.AppFx.Server.SemanticModeling.EntityTypeInstanceSelection">
<remarks/>
</member>
<member name="F:Blackbaud.AppFx.Server.SemanticModeling.EntityTypeInstanceSelection.Dropdown">
<remarks/>
</member>
<member name="F:Blackbaud.AppFx.Server.SemanticModeling.EntityTypeInstanceSelection.List">
<remarks/>
</member>
<member name="F:Blackbaud.AppFx.Server.SemanticModeling.EntityTypeInstanceSelection.FilteredList">
<remarks/>
</member>
<member name="F:Blackbaud.AppFx.Server.SemanticModeling.EntityTypeInstanceSelection.MandatoryFilter">
<remarks/>
</member>
<member name="T:Blackbaud.AppFx.Server.SemanticModeling.EntityTypeInheritance">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.EntityTypeInheritance.InheritsFromEntityID">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.EntityTypeInheritance.Relation">
<remarks/>
</member>
<member name="T:Blackbaud.AppFx.Server.SemanticModeling.SemanticQuery">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.SemanticQuery.Hierarchies">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.SemanticQuery.MeasureGroups">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.SemanticQuery.CalculatedAttributes">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.SemanticQuery.Parameters">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.SemanticQuery.EnableDrillthrough">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.SemanticQuery.EnableDrillthroughSpecified">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.SemanticQuery.CustomProperties">
<remarks/>
</member>
<member name="T:Blackbaud.AppFx.Server.SemanticModeling.DrillthroughContext">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.DrillthroughContext.SemanticQuery">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.DrillthroughContext.SelectedItems">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.DrillthroughContext.SelectedPath">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.DrillthroughContext.GroupingValues">
<remarks/>
</member>
<member name="T:Blackbaud.AppFx.Server.SemanticModeling.GroupingValuesTypeGroupingValue">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.GroupingValuesTypeGroupingValue.Name">
<remarks/>
</member>
<member name="P:Blackbaud.AppFx.Server.SemanticModeling.GroupingValuesTypeGroupingValue.Value">
<remarks/>
</member>
<member name="E:Blackbaud.AppFx.Server.ServiceApplication.BeforeDataFormSave">
 <summary>
 Raised before a data form is saved. 
 </summary>
</member>
<member name="E:Blackbaud.AppFx.Server.ServiceApplication.AfterDataFormSave">
 <summary>
 Raised after a data form is saved, including when an exception is encountered.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServiceApplication.ServiceApplication_Error(System.Object,System.EventArgs)">
 <summary>
 Handling this event gives the application a chance to respond to uncaught exceptions before they are bubbled up to the OS
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.BeforeDataFormSaveEventArgs">
 <summary>
 Event data for before a data form is saved.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.BeforeDataFormSaveEventArgs.Request">
 <summary>
 The request containing the data to be saved.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.BeforeDataFormSaveEventArgs.RequestContext">
 <summary>
 The request context of the DataFormSave request.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.AfterDataFormSaveEventArgs">
 <summary>
 Event data for after a data form is saved.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.AfterDataFormSaveEventArgs.Request">
 <summary>
 The request containing the data to be saved.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.AfterDataFormSaveEventArgs.Reply">
 <summary>
 The result of the data form save request.  Null if an exception occurred during the save.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.AfterDataFormSaveEventArgs.Exception">
 <summary>
 The exception thrown by the data form save processor.  Null when the data form save completed successfully.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.AfterDataFormSaveEventArgs.RequestContext">
 <summary>
 The request context of the DataFormSave request.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ServiceException">
 <summary>
 Represents an error thrown explicitly by the web service code.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ServicePaths">
 <summary>
 Methods related to service endpoint paths
 </summary>
 <remarks>All dynamically built URLs that define an endpoint on the Infinity web server should use these methods to ensure that the URL works in a hosted environment</remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.ServicePaths.GetAppFxWebServiceUrl(System.Web.HttpContext,System.String)">
 <summary>
 Returns a <see cref="T:System.Uri"/> that represents the URL to the Blackbaud Application Framework web service.
 </summary>
 <param name="databaseName">The name of the currently selected database.  This is only used if the hosting information has not been cached.</param>
</member>
<member name="M:Blackbaud.AppFx.Server.ServicePaths.GetAppFxWebServiceUrl(Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns a <see cref="T:System.Uri"/> that represents the URL to the Blackbaud Application Framework web service.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.ServicePaths.GetServiceEndPointUrl(System.Web.HttpContext,System.String,System.String)">
 <summary>
 Returns a <see cref="T:System.Uri"/> that is a combination of the base portion of the service endpoint and some other custom endpoint defined by the endPointRelativePath parameter.
 </summary>
 <param name="databaseName">The name of the currently selected database.  This is only used if the hosting information has not been cached.</param>
 <param name="endPointRelativePath">The relative path to a web service endpoint.  This path is relative to the root directory of the web server.</param>
</member>
<member name="M:Blackbaud.AppFx.Server.ServicePaths.GetServiceEndPointUrl(Blackbaud.AppFx.Server.RequestContext,System.String)">
 <summary>
 Returns a <see cref="T:System.Uri"/> that is a combination of the base portion of the service endpoint and some other custom endpoint defined by the endPointRelativePath parameter.
 </summary>
 <param name="endPointRelativePath">The relative path to a web service endpoint.  This path is relative to the root directory of the web server.</param>
</member>
<member name="M:Blackbaud.AppFx.Server.ServicePaths.GetServiceEndPointUrl(Blackbaud.AppFx.Server.RequestContext,System.String,System.String)">
 <summary>
 Returns a <see cref="T:System.Uri"/> that is a combination of the base portion of the service endpoint and some other custom endpoint defined by the endPointRelativePath parameter.
 </summary>
 <param name="endPointRelativePath">The relative path to a web service endpoint.  This path is relative to the root directory of the web server.</param>
 <param name="queryString">The query string for the URL</param>
</member>
<member name="M:Blackbaud.AppFx.Server.ServicePaths.GetServiceEndPointUrl(System.Web.HttpContext,System.String,System.String,System.String)">
 <summary>
 Returns a <see cref="T:System.Uri"/> that is a combination of the base portion of the service endpoint and some other custom endpoint defined by the endPointRelativePath parameter.
 </summary>
 <param name="databaseName">The name of the currently selected database.  This is only used if the hosting information has not been cached.</param>
 <param name="endPointRelativePath">The relative path to a web service endpoint.  This path is relative to the root directory of the web server.</param>
 <param name="queryString">The query string for the URL</param>
</member>
<member name="M:Blackbaud.AppFx.Server.ServicePaths.GetServiceEndPointUrlInternalOnly(System.Web.HttpContext,System.String,System.String)">
 <summary>
 Returns a <see cref="T:System.Uri"/> that is a combination of the base portion of the service endpoint and some other custom endpoint defined by the endPointRelativePath parameter.
 This should only be used if the resulting url is not persisted to an external resource.
 </summary>
 <param name="endPointRelativePath">The relative path to a web service endpoint.  This path is relative to the root directory of the web server.</param>
 <param name="queryString">The query string for the URL</param>
</member>
<member name="M:Blackbaud.AppFx.Server.ServicePaths.GetBrowserEndPointUrl(System.Web.HttpContext,System.String)">
 <summary>
 Returns a <see cref="T:System.Uri"/> that defines the service end point for the client application
 </summary>
 <param name="databaseName">The name of the currently selected database.  This is only used if the hosting information has not been cached.</param>
</member>
<member name="M:Blackbaud.AppFx.Server.ServicePaths.GetBrowserEndPointUrl(Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns a <see cref="T:System.Uri"/> that defines the service end point for the client application.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.ServiceRequest">
 <summary>
 Base class that all Request messages to the service inherit from.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Blackbaud.AppFx.Server.ServiceRequest.UsesDatabaseConnection">
 <summary>
 Can be overridden to return False if this service request is not scoped to a database (for example "GetAvailableDatabasesRequest").
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.SiteManager.SiteDatabaseInfo.#ctor(System.String)">
 <summary>
 Use this contructor if you get a a string list of databases that is made up out of the unique name, separated by a semi colon, followed by the display name
 to parse out the name and return it as unique name and display name
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.SiteManager.SiteDatabaseInfo.#ctor(System.String,System.String,System.Guid,System.Int32)">
 <summary>
 This class represents the major properties of database as stored in the SiteDatabase table in SiteManager
 </summary>
 <param name="dbName">Maps to field SiteDatabase.DatabaseName in the SiteManager database. This is the display name of the database.</param>
 <param name="connString">Maps to SiteDatabase.DatabaseName field which is unique for a given site but not unique across sites</param>
 <param name="id">Unique Identifier for each database. That is what the database should be keyed off of.</param>
 <param name="sequence">Maps to SiteDatabase.Sequence field which can be used to order the database in a pre-defined sequence if required.</param>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.SiteManager.SiteDatabaseInfo.#ctor(System.String,System.String,System.Int32)">
 <summary>
 This class represents the major properties of database as stored in the CloudSiteDatabase table in SiteManager v2
 </summary>
 <param name="displayName">Maps to DisplayName field. Unique for the site.</param>
 <param name="connString">Maps to SiteDatabase.Connectionstring field.</param>
 <param name="sequence">Maps to sequence field which can be used to order the database in a pre-defined sequence if required.</param>
 <remarks></remarks>
</member>
<member name="P:Blackbaud.AppFx.Server.SiteManager.SiteDatabaseInfo.DatabaseDisplayName">
 <summary>
 This field returns the SiteDatabase.DatabaseName field which is a text that users can see and is what should
 be displayed in any database selection box. This name is guaranteed to be unique for a given site, but not for
 a site groups or not for multiple sites. For example, a single client may not have two databases named FOO, but
 FOO be used by multiple clients
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.SiteManager.SiteDatabaseInfo.UniqueDatabaseName">
 <summary>
 This property returns the SiteDatabase.ID field which is a unique name for each database
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.SiteManager.SiteDatabaseInfo.CombinedDatabaseName">
 <summary>
 Returns the ID of the database represented as a string, followed by a semi-colon, followed by the display name. This is the string that is sent down the the client to populate the database list. The browser will parse it, show the display name and pass back the ID when making a web service call.
 This handles cases for site manager where we want clients to be able to have the same database name but need to make sure we can identify each database uniquely and a GUID is the best way to do that.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.SiteManager.SiteManagerUtility.GetSiteDatabaseNames(System.Guid)">
 <summary>
 By default, t
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.SiteManager.SiteManagerUtility.GetSiteCacheInfoFromFileSystem">
 <summary>
 Similar to GetSiteCacheInfo except this will read from the file system instead of an SP.
 </summary>
</member>
<member name="M:Blackbaud.AppFx.Server.SiteManager.SiteManagerUtility.GetConnectionStringForCMS(System.Uri)">
 <summary>
 Returns the connection string for a site given it's URL
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.Startup">
<summary>
Entrypoint class for OWIN middleware initialization
</summary>
</member>
<member name="M:Blackbaud.AppFx.Server.Startup.Configuration(Owin.IAppBuilder)">
<summary>
The OWIN configuration entry point
</summary>
<param name="app">The IAppBuilder</param>
</member>
<member name="M:Blackbaud.AppFx.Server.Startup.StartupHangfire(Owin.IAppBuilder)">
 <summary>
 Starts the Hangfire enqueuing process for Enterprise databases
 </summary>
 <param name="app">The IAppBuilder</param>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.Startup.EnterpriseInstalled(System.String)">
 <summary>
 Checks the installed products and returns true if Enterprise is turned on. 
 </summary>
 <param name="key">The REDBList ID of the database to check.</param>
 <returns>True if Enterprise is installed else False.</returns>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.Startup.ConfigureBlackbaudApiAuthentication(Owin.IAppBuilder)">
 <summary>
 Adds the Blackbaud API authentication middleware, which uses the OAuth bearer authentication middleware, to the application pipeline.
 </summary>
 <param name="app"></param>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.Startup.GetKeyRefreshInterval">
 <summary>
 Maps the BlackbaudApiKeyRefreshInterval app setting to a time span.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.Startup.LogLevel">
 <summary>
 Maps the OwinMaximumLogLevel app setting to a logging level for the OWIN health monitoring logger.
 </summary>
</member>
<member name="T:Blackbaud.AppFx.Server.TranslationFunction">
 <summary>
 Translates an ID to it's name.
 </summary>
 <remarks>Implements the mechanics of invoking the code defined in a TranslationFunctionSpec catalog definition.</remarks>
</member>
<member name="P:Blackbaud.AppFx.Server.UserManagement.OrgUnitRecord.DistinguishedName">
 <summary>
 Returns the distinguished name of the parent OU which contains the OU specified in <see cref="P:Blackbaud.AppFx.Server.UserManagement.OrgUnitRecord.Name"/>. This parameter will be supplied as the Container when a <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext"/> is created.
 </summary>
</member>
<member name="P:Blackbaud.AppFx.Server.UserManagement.OrgUnitRecord.DistinguishedName(System.Boolean)">
 <summary>
 Returns the distinguished name of the parent OU which contains the OU specified in <see cref="P:Blackbaud.AppFx.Server.UserManagement.OrgUnitRecord.Name"/> or the distinguished name of the sub OU. This parameter will be supplied as the Container when a <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext"/> is created.
 </summary>
 <param name="returnParent">Set to true if you want to search through the parent OU which contains the Admin Users and Domain Users sub-Ous. This is the default behavior. Set to false if you want to limit the search to the OU specified in <see cref="P:Blackbaud.AppFx.Server.UserManagement.OrgUnitRecord.Name"/></param>
</member>
<member name="T:Blackbaud.AppFx.Server.UserManagement.PasswordManagement">
 <summary>
 Methods used for Password Management in the Hosted environment.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.UserManagement.PasswordManagement.CheckPwdExpirationOnLogin">
 <summary>
 Web.Config setting used to enable checking for password expiration during the SessionStart request.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Blackbaud.AppFx.Server.UserManagement.PasswordManagement.PwdExpirationDayThreshold">
 <summary>
 Web.Config setting used to configure how soon before a password expires that the user should be prompted.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.UserManagement.PasswordManagement.GetPrincipalContextDomainName(System.Web.HttpContext)">
 <summary>
 Returns the domain name that can be passed to the System.DirectoryServices.AccountManagement.PrincipalContext contructor.
 </summary>
 <param name="ctx"></param>
 <returns></returns>
 <remarks>The value is cached in the HTTPContext.Application cache.
 This function will first look at the UserManagementPrincipalContextName web.config app setting.
 If that is not specified in web.config then it will use System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain.Name
 </remarks>
</member>
<member name="M:Blackbaud.AppFx.Server.UserManagement.PasswordManagement.GetCurrentUserPasswordInfo(Blackbaud.AppFx.Server.RequestContext)">
 <summary>
 Returns password expiration info for the current application user of the current web request.
 </summary>
 <param name="rc"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Blackbaud.AppFx.Server.UserManagement.WebEventDetailCodes">
 <summary>
 This enumerated type is exposed publicly to allow tools such as SiteManager to access the detail codes and perform a search in the event log to retrieve information if warnings are not raised when passwords are about to expire.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.UserManagement.WebEventDetailCodes.UserManagementBase">
 <summary>
 This detail code is written out which any warning that is logged while obtaining the password information for a user and identifies the event as being related to UserManagement
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.UserManagement.WebEventDetailCodes.PrincipalContextParameter">
 <summary>
 Use this detail code to log an event that specifies which parameters are supplied to the constructor of <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext"/>
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.UserManagement.WebEventDetailCodes.PrincipalContextSuccess">
 <summary>
 Use this detail code to log the value of the <see cref="P:System.DirectoryServices.AccountManagement.PrincipalContext.ConnectedServer"/> property after an instance of <see cref="P:System.DirectoryServices.AccountManagement.PrincipalContext.ConnectedServer"/> is created. This indicates that all the parameters were correct and no security exceptions occurred.
 </summary>
</member>
<member name="F:Blackbaud.AppFx.Server.UserManagement.WebEventDetailCodes.MaxPasswordAgeSource">
 <summary>
 Used to flag an information event that indicates the source of the MaxPasswordAge value. This value can be cached on the server or in the web.config or retrieved from the domain. Loging the source of the value to the eventlog will help us troubleshoot password reset problems following a policy change.
 </summary>
</member>
</members>
</doc>
